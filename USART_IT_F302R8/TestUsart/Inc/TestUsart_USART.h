/*
 * File: TestUsart_USART.h
 *
 * Generated by USART Coder for Xcos with scilab-5.5.2
 * C/C++ source code generated on  :06-Oct-2020
 *
 * Model version      :1.0
 *
 * ******************************************************************************
 * * attention
 * *
 * * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
 * * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
 * * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
 * * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
 * * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
 * * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 * *
 * ******************************************************************************
 */

#include "STM32_Config.h"

extern void USART_Initialize(void); //USART initialize function


#ifndef TestUsart_USART_Rx_h_
#define TestUsart_USART_Rx_h_

/*
*******************************************************************************
USART Receive state structures definition
*******************************************************************************
*/
typedef enum
{
  USART_RX_ON   =   0x00,
  USART_RX_OK   =   0x01,
  USART_RX_OFF  =   0x02
} USART_RxStatusTypeDef;
/*
*******************************************************************************
USART Receive data information
*******************************************************************************
*/
struct USART_RxDataLinkTypeDef
{
  uint8_t* ptRcv;
  uint16_t nbRcv;
  __IO USART_RxStatusTypeDef rxStatus;
};

#endif
/*
*******************************************************************************
USART Receive variables definition
*******************************************************************************
*/
void USART2_Rx_Initialization(void);
extern struct USART_RxDataLinkTypeDef USART2_RxDataLink;
extern UART_HandleTypeDef huart2;
#undef USART2_RX_BUFF_SIZE
#define USART2_RX_BUFF_SIZE 32
extern uint8_t G_USART2_RxDataBuffer[];


#ifndef TestUsart_USART_Tx_h_
#define TestUsart_USART_Tx_h_

/*
*******************************************************************************
USART Send state structures definition
*******************************************************************************
*/
typedef enum
{
 USART_TX_ON  =   0x00,
 USART_TX_OK  =   0x01,
 USART_TX_OFF  =   0x02
} USART_TxStatusTypeDef;

/*
*******************************************************************************
USART Send data information
*******************************************************************************
*/
struct USART_TxDataLinkTypeDef
{
   uint16_t nb2Send;
   uint16_t nbSent;
   uint16_t nbMsgLost;
   uint16_t buffSize;
   uint8_t* pt_StartTx_Buff;
   uint8_t* pt_EndTx_Buff;
   uint8_t* pt_Tx_W;
   uint8_t* pt_Tx_R;
   void (* CopyDataFcn)(uint8_t* ptSrc, uint16_t DataLength, struct USART_TxDataLinkTypeDef* ptInfo);
   void (* SendDataFcn)(struct USART_TxDataLinkTypeDef* ptInfo);
   __IO USART_TxStatusTypeDef   txStatus;
   uint8_t txLock;
};

#endif
/*
*******************************************************************************
USART Send variables definition
*******************************************************************************
*/
void USART2_CopyDataFcn (uint8_t*, uint16_t , struct USART_TxDataLinkTypeDef* );
void     USART2_SendDataFcn (struct USART_TxDataLinkTypeDef* );
void USART2_Tx_Initialization(void);
extern struct USART_TxDataLinkTypeDef USART2_TxDataLink;
extern UART_HandleTypeDef huart2;
extern uint8_t G_USART2_TxDataBuffer[];

