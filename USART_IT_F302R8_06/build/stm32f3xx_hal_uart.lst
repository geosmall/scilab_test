ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"stm32f3xx_hal_uart.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.UART_EndTxTransfer,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  25              	UART_EndTxTransfer:
  26              	.LFB166:
  27              		.file 1 "Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c"
   1:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
   2:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @file    stm32f3xx_hal_uart.c
   4:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @version V1.4.0
   6:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @date    16-December-2016
   7:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief   UART HAL module driver.
   8:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          This file provides firmware functions to manage the following 
   9:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter (UART) peripheral:
  10:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           + Initialization and de-initialization functions
  11:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           + IO operation functions
  12:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           + Peripheral Control functions
  13:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           + Peripheral State and Errors functions
  14:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
  15:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   @verbatim
  16:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
  17:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                         ##### How to use this driver #####
  18:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
  19:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   [..]
  20:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  21:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  22:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  23:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  24:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  25:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) UART pins configuration:
  26:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  27:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  28:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  29:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  30:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  31:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 2


  32:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) UART interrupts handling:
  33:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
  34:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                 RXNE interrupt and Error Interrupts) are managed using the macros
  35:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                 __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit and receive 
  36:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  37:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  38:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  39:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  40:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  41:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  42:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  43:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  44:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  45:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  46:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  47:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  48:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  49:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  50:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  51:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  52:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         the HAL_UART_Init() API.
  53:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  54:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  55:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  56:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  57:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART LIN (Local Interconnection Network) mode, initialize the UART registers
  58:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         by calling the HAL_LIN_Init() API.
  59:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  60:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  61:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  62:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  63:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  64:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  65:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  66:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    [..]
  67:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (@) These APIs (HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_MultiProcessor_Init(),
  68:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         also configure the low level Hardware (GPIO, CLOCK, CORTEX...etc) by
  69:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  70:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  71:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    [..]
  72:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    [..] Three operation modes are available within this driver :
  73:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
  74:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      *** Polling mode IO operation ***
  75:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      =================================
  76:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      [..]
  77:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit()
  78:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
  79:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  80:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      *** Interrupt mode IO operation ***
  81:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      ===================================
  82:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      [..]
  83:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT()
  84:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  85:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback
  86:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
  87:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  88:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT()
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 3


  89:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can
  90:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback
  91:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
  92:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
  93:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
  94:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
  95:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  96:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      *** DMA mode IO operation ***
  97:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      ==============================
  98:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      [..]
  99:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA()
 100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
 101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback
 102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
 103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
 104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA()
 105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can
 106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback
 107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
 108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
 110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()
 112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()
 113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()
 114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      *** UART HAL driver macros list ***
 116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      =============================================
 117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      [..]
 118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral
 121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral
 122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_FLAG : Clear the specified UART pending flag
 124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      [..]
 128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros
 129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   @endverbatim
 131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ******************************************************************************
 132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @attention
 133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
 135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * Redistribution and use in source and binary forms, with or without modification,
 137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * are permitted provided that the following conditions are met:
 138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *      this list of conditions and the following disclaimer.
 140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *      this list of conditions and the following disclaimer in the documentation
 142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *      and/or other materials provided with the distribution.
 143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *      may be used to endorse or promote products derived from this software
 145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *      without specific prior written permission.
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 4


 146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ******************************************************************************
 159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #include "stm32f3xx_hal.h"
 163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @addtogroup STM32F3xx_HAL_Driver
 165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART UART
 169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief UART HAL module driver
 170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #define UART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                                      USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8)) /*!< UART or U
 182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
 184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 5


 203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
 209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @verbatim
 221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** ===============================================================================
 222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
 224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
 225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     in asynchronous mode.
 227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Baud Rate
 229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Word Length
 230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Stop Bit
 231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Parity
 232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Hardware flow control
 233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Receiver/transmitter modes
 234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Over Sampling Method
 235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) One-Bit Sampling Method
 236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) data logical level inversion
 239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) RX and TX pins swap
 240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) RX overrun detection disabling
 241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) DMA disabling on RX error
 242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) MSB first on communication line
 243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) auto Baud rate detection
 244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
 245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init() and HAL_MultiProcessor_Init()
 246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     API follow respectively the UART asynchronous, UART Half duplex, UART LIN mode and
 247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     multiprocessor configuration procedures (details for the procedures are available in reference 
 248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @endverbatim
 250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /*
 254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   Additional Table: If the parity is enabled, then the MSB bit of the data written
 255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                     in the data register is transmitted but is changed by the parity bit.
 256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                     According to device capability (support or not of 7-bit word length),
 257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                     frame length is either defined by the M bit (8-bits or 9-bits)
 258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                     or by the M1 and M0 bits (7-bit, 8-bit or 9-bit).
 259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                     Possible UART frame formats are as listed in the following table:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 6


 260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       Table 1. UART frame format.             
 262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       +-----------------------------------------------------------------------+
 263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |       M bit       |  PCE bit  |             UART frame                |
 264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |         0         |     0     |    | SB |    8-bit data   | STB |     |
 266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |         0         |     1     |    | SB | 7-bit data | PB | STB |     |
 268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |         1         |     0     |    | SB |    9-bit data   | STB |     |
 270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |         1         |     1     |    | SB | 8-bit data | PB | STB |     |
 272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       +-----------------------------------------------------------------------+
 273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |    0    |    0    |     0     |    | SB |    8 bit data   | STB |     |
 276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |    0    |    0    |     1     |    | SB | 7 bit data | PB | STB |     |
 278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |    0    |    1    |     0     |    | SB |    9 bit data   | STB |     |
 280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |    0    |    1    |     1     |    | SB | 8 bit data | PB | STB |     |
 282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |    1    |    0    |     0     |    | SB |    7 bit data   | STB |     |
 284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |    1    |    0    |     1     |    | SB | 6 bit data | PB | STB |     |
 286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       +-----------------------------------------------------------------------+
 287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
 289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: UART handle.
 294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart == NULL)
 300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Check the parameters */
 307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Check the parameters */
 312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 7


 317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the Peripheral */
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the UART Communication parameters */
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the Peripheral */
 347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: UART handle.
 357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart == NULL)
 363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check UART instance */
 368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 8


 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the Peripheral */
 382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the UART Communication parameters */
 385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the Peripheral */
 405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
 414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle .
 415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: UART handle.
 416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param BreakDetectLength: specifies the LIN break detection length.
 417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        This parameter can be one of the following values:
 418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
 419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart == NULL)
 426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the LIN UART instance */
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 9


 431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the Break detection length parameter */
 433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* LIN mode limited to 16-bit oversampling only */
 436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->Init.OverSampling == UART_OVERSAMPLING_8)
 437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* LIN mode limited to 8-bit data length */
 441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->Init.WordLength != UART_WORDLENGTH_8B)
 442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the Peripheral */
 458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the UART Communication parameters */
 461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the Peripheral */
 484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 10


 488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: UART handle.
 495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Address: UART node address (4-, 6-, 7- or 8-bit long).
 496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param WakeUpMethod: specifies the UART wakeup method.
 497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        This parameter can be one of the following values:
 498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart == NULL)
 513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the wake up method parameter */
 518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the Peripheral */
 532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the UART Communication parameters */
 535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 11


 545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register. */
 548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the Peripheral */
 561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: UART handle.
 571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart == NULL)
 577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the parameters */
 582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the Peripheral */
 587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DeInit the low level hardware */
 594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState    = HAL_UART_STATE_RESET;
 598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState   = HAL_UART_STATE_RESET;
 599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlock */
 601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 12


 602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
 604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: UART handle.
 609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
 610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
 615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
 619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: UART handle.
 624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
 625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
 630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
 638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
 641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
 642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @verbatim
 644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
 645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                       ##### IO operation functions #####
 646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
 647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     and Half duplex data transfers.
 649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) There are two mode of transfer:
 651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (++) Blocking mode: The communication is performed in polling mode.
 652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            after finishing transfer.
 654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (++) Non-Blocking mode: The communication is performed using Interrupts
 655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            or DMA, These API's return the HAL status.
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            The end of the data processing will be indicated through the
 657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            using DMA mode.
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 13


 659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
 660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
 661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
 662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Blocking mode API's are :
 664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Transmit()
 665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Receive()
 666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Transmit_IT()
 669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Receive_IT()
 670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_IRQHandler()
 671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
 673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Transmit_DMA()
 674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Receive_DMA()
 675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_DMAPause()
 676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_DMAResume()
 677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_DMAStop()
 678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
 680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_TxHalfCpltCallback()
 681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_TxCpltCallback()
 682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_RxHalfCpltCallback()
 683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_RxCpltCallback()
 684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_ErrorCallback()
 685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
 687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Abort()
 688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortTransmit()
 689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortReceive()
 690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Abort_IT()
 691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortTransmit_IT()
 692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortReceive_IT()
 693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
 695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortCpltCallback()
 696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortTransmitCpltCallback()
 697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortReceiveCpltCallback()
 698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
 700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         Errors are handled as follows :
 701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Error is considered as Recoverable and non blocking : Transfer could go till end, but 
 702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in In
 703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              Received character is then retrieved and stored in Rx buffer, Error code is set to all
 704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UA
 705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              If user wants to abort it, Abort services should be called by user.
 706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Error is considered as Blocking : Transfer could not be completed properly and is abor
 707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
 708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() u
 709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
 711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
 712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @endverbatim
 714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 14


 716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
 719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: UART handle.
 720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData: Pointer to data buffer.
 721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size: Amount of data to be sent.
 722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Timeout: Timeout duration.
 723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
 726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
 728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tickstart = 0U;
 729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return  HAL_ERROR;
 736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
 739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
 745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     tickstart = HAL_GetTick();
 746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize = Size;
 748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxXferCount--;
 752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         return HAL_TIMEOUT;
 755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
 760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pData += 2U;
 761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
 763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->TDR = (*pData++ & (uint8_t)0xFFU);
 765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_TIMEOUT;
 770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 15


 773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
 776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
 788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: UART handle.
 789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData: pointer to data buffer.
 790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size: amount of data to be received.
 791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Timeout: Timeout duration.
 792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
 795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
 797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t uhMask;
 798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tickstart = 0U;
 799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return  HAL_ERROR;
 806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
 809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
 815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     tickstart = HAL_GetTick();
 816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize = Size;
 818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = Size;
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* as long as data have to be received */
 825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     while(huart->RxXferCount > 0U)
 826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxXferCount--;
 828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 16


 830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         return HAL_TIMEOUT;
 831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         tmp = (uint16_t*) pData ;
 835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
 836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pData +=2U;
 837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
 839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         *pData++ = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
 848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
 860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: UART handle.
 861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData: pointer to data buffer.
 862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size: amount of data to be sent.
 863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_ERROR;
 873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
 876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize = Size;
 880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
 886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 17


 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Transmit Data Register Empty Interrupt */
 889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
 901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: UART handle.
 902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData: pointer to data buffer.
 903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size: amount of data to be received.
 904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_ERROR;
 914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
 917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize = Size;
 921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = Size;
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
 930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Parity Error and Data Register not empty Interrupts */
 936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 18


 944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
 948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: UART handle.
 949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData: pointer to data buffer.
 950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size: amount of data to be sent.
 951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note This function starts a DMA transfer in interrupt mode meaning that
 952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *       DMA half transfer complete, DMA transfer complete and DMA transfer
 953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *       error interrupts are enabled
 954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if UART instance supports continuous communication using DMA */
 959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_DMA_INSTANCE(huart->Instance));
 960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_ERROR;
 967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
 970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize = Size;
 974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the DMA error callback */
 986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
 987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the DMA abort callback */
 989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
 990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART transmit DMA channel */
 992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->TDR, S
 993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
 995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
 996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
 998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 19


1001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        in the UART CR3 register */
1002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
1009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: UART handle.
1015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData: pointer to data buffer.
1016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size: amount of data to be received.
1017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         the parity bit (MSB position).
1019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note This function starts a DMA transfer in interrupt mode meaning that
1020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *       DMA half transfer complete, DMA transfer complete and DMA transfer
1021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *       error interrupts are enabled
1022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if UART instance supports continuous communication using DMA */
1027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_DMA_INSTANCE(huart->Instance));
1028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
1031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
1033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_ERROR;
1035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
1039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
1041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize = Size;
1042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
1048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
1051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the DMA error callback */
1053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
1054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the DMA abort callback */
1056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
1057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 20


1058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the DMA channel */
1059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuffPtr, S
1060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
1062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        in the UART CR3 register */
1072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
1075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
1079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Pause the DMA Transfer.
1084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart: UART handle.
1085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
1091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
1093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
1094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
1099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
1110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 21


1115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Resume the DMA Transfer.
1117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart: UART handle.
1118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
1124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
1126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
1131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
1134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
1144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Stop the DMA Transfer.
1151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart: UART handle.
1152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback: 
1159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete  
1160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of 
1161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
1165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
1166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 22


1172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
1180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
1208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 23


1229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U; 
1248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U; 
1249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
1255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset Handle ErrorCode to No Error */
1258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
1275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 24


1286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset Tx transfer counter */
1297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U; 
1298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
1317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset Rx transfer counter */
1340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U; 
1341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 25


1343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
1365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t abortcplt = 1U;
1368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      before any call to DMA Abort functions */
1375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->hdmatx != NULL)
1377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        Otherwise, set it to NULL */
1380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
1383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->hdmarx != NULL)
1391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        Otherwise, set it to NULL */
1394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
1397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 26


1400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised : 
1414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Abort DMA TX */
1417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
1420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
1422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         abortcplt = 0U;
1424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised : 
1437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Abort DMA RX */
1440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
1443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         abortcplt = 1U;
1444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
1446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         abortcplt = 0U;
1448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (abortcplt == 1U)
1454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = 0U; 
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 27


1457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U;
1458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reset errorCode */
1460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
1464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
1471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
1490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
1491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
1506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Abort DMA TX */
1508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
1511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
1512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 28


1514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Reset Tx transfer counter */
1517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxXferCount = 0U; 
1518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Restore huart->gState to Ready */
1520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
1521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
1524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reset Tx transfer counter */
1529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = 0U; 
1530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Restore huart->gState to Ready */
1532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
1536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
1543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
1555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
1556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 29


1571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
1572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Abort DMA RX */
1574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
1578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Reset Rx transfer counter */
1583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxXferCount = 0U; 
1584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
1586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
1587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
1589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
1590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
1593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reset Rx transfer counter */
1598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U; 
1599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
1602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
1604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
1608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Handle UART interrupt request.
1615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: UART handle.
1616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
1619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
1621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
1622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t cr3its;
1623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t errorflags;
1624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* If no error occurs */
1626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE));
1627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (errorflags == RESET)
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 30


1628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
1630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(((isrflags & USART_ISR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       UART_Receive_IT(huart);
1633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return;
1634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }  
1636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* If some errors occur */
1638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   cr3its = READ_REG(huart->Instance->CR3);
1639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(   (errorflags != RESET)
1640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      && (   ((cr3its & USART_CR3_EIE) != RESET)
1641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)) )
1642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
1644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(((isrflags & USART_ISR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
1645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_PEF);
1647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
1649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
1652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(((isrflags & USART_ISR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_FEF);
1655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
1657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
1660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(((isrflags & USART_ISR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_NEF);
1663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
1665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
1667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
1668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(((isrflags & USART_ISR_ORE) != RESET) &&
1669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
1670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_OREF);
1672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
1674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
1677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->ErrorCode != HAL_UART_ERROR_NONE)
1678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* UART in mode Receiver ---------------------------------------------------*/
1680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(((isrflags & USART_ISR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         UART_Receive_IT(huart);
1683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 31


1685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
1686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          consider error as blocking */
1687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) ||
1688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {  
1690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Blocking error : transfer is aborted
1691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
1692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
1693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         UART_EndRxTransfer(huart);
1694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
1696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
1698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
1701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           if(huart->hdmarx != NULL)
1702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           {
1703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             /* Set the UART DMA Abort callback : 
1704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
1705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
1706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             /* Abort DMA RX */
1708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             {
1710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
1712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             }
1713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           }
1714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           else
1715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           {
1716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             /* Call user error callback */
1717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
1718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           }
1719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
1720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         else
1721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
1722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Call user error callback */
1723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
1724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
1725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
1727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Non Blocking error : transfer could go on. 
1729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            Error is notified to user through user error callback */
1730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
1731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
1732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
1735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   } /* End if some error occurs */
1737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
1739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(((isrflags & USART_ISR_WUF) != RESET) && ((cr3its & USART_CR3_WUFIE) != RESET))
1740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_IT(huart, UART_CLEAR_WUF);
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 32


1742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART state ready to be able to start again the process */
1743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
1746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
1747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
1750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(((isrflags & USART_ISR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
1751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_Transmit_IT(huart);
1753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
1754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
1757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(((isrflags & USART_ISR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
1758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
1760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
1761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
1767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: UART handle.
1768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
1771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
1777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
1782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart: UART handle.
1783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
1786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
1792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Rx Transfer completed callback.
1797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: UART handle.
1798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 33


1799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
1801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
1807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
1812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart: UART handle.
1813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
1816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
1822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief UART error callback.
1827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: UART handle.
1828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
1831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
1837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback (UART_HandleTypeDef *huart)
1846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
1852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 34


1856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback (UART_HandleTypeDef *huart)
1861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
1867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
1872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback (UART_HandleTypeDef *huart)
1876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
1882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
1887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
1890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *  @brief   UART control functions
1891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
1892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @verbatim
1893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
1894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                       ##### Peripheral Control functions #####
1895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
1896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
1897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
1898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
1899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
1900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
1901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
1902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
1903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
1904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @endverbatim
1905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
1906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Enable UART in mute mode (does not mean UART enters mute mode;
1910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
1911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: UART handle.
1912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 35


1913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
1915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
1918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
1922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_MME);
1923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
1927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Disable UART mute mode (does not mean the UART actually exits mute mode
1931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         as it may not have been in mute mode at this very moment).
1932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart: UART handle.
1933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
1936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
1939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    /* Disable USART mute mode by clearing the MME bit in the CR1 register */
1943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
1944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
1948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
1952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
1953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: UART handle.
1954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
1957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
1959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
1963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart: UART handle.
1964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
1967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 36


1970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear TE and RE bits */
1973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
1974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
1975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
1976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
1980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
1987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart: UART handle.
1988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status.
1989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
1991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
1994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear TE and RE bits */
1997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
1998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
1999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
2000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
2003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
2006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Transmit break characters.
2011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart: UART handle.
2012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the parameters */
2017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
2018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
2020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
2021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Send break characters */
2025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->RQR |= UART_SENDBREAK_REQUEST;
2026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 37


2027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
2030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
2033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
2038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
2041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  *  @brief   UART Peripheral State functions
2042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  *
2043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @verbatim
2044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ==============================================================================
2045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
2046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ==============================================================================
2047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
2048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This subsection provides functions allowing to :
2049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) Return the UART handle state.
2050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) Return the UART handle error code
2051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @endverbatim
2053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
2054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Return the UART handle state.
2058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *               the configuration information for the specified UART.
2060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL state
2061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
2065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   temp1 = huart->gState;
2066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   temp2 = huart->RxState;
2067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
2069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Return the UART handle error code.
2073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *               the configuration information for the specified UART.
2075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval UART Error Code
2076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return huart->ErrorCode;
2080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
2083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 38


2084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
2087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
2091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Configure the UART peripheral.
2095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: UART handle.
2096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
2099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000U;
2101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource = UART_CLOCKSOURCE_UNDEFINED;
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
2103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t usartdiv                   = 0x0000U;
2104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
2105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the parameters */
2107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
2109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
2111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
2113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
2114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
2115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
2119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *  the UART Word Length, Parity, Mode and oversampling:
2120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *  set the M bits according to huart->Init.WordLength value
2121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *  set PCE and PS bits according to huart->Init.Parity value
2122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *  set TE and RE bits according to huart->Init.Mode value
2123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *  set OVER8 bit according to huart->Init.OverSampling value */
2124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
2125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
2126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
2128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
2129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    * to huart->Init.StopBits value */
2130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
2131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
2133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Configure
2134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    * - UART HardWare Flow Control: set CTSE and RTSE bits according
2135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *   to huart->Init.HwFlowCtl value
2136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    * - one-bit sampling method versus three samples' majority rule according
2137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *   to huart->Init.OneBitSampling */
2138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl | huart->Init.OneBitSampling ;
2139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 39


2141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
2142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
2143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
2145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
2146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     switch (clocksource)
2148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
2151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
2153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate));
2154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
2157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
2160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
2163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
2165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       default:
2166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         ret = HAL_ERROR;
2167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     brrtemp = usartdiv & 0xFFF0U;
2171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
2172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Instance->BRR = brrtemp;
2173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
2175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     switch (clocksource)
2177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.B
2180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
2182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.B
2183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
2186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Ini
2189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
2192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
2194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       default:
2195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         ret = HAL_ERROR;
2196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 40


2198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return ret;
2201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
2206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: UART handle.
2207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
2210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
2212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
2213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
2215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
2216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
2218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
2219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
2222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
2223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
2225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
2226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure data inversion */
2229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
2230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
2232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
2233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
2236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
2237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
2239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
2240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
2243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
2244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
2246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
2247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
2250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
2251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
2253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
2254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 41


2255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
2257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
2258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
2260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
2261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
2262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
2263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
2264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
2266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
2267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
2271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
2272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
2274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
2275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Check the UART Idle State.
2280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
2281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
2284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tickstart = 0U;
2286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
2288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Init tickstart for timeout managment*/
2291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   tickstart = HAL_GetTick();
2292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
2294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
2295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Wait until TEACK flag is set */
2297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE
2298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Timeout Occured */
2300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_TIMEOUT;
2301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if the Receiver is enabled */
2304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
2305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Wait until REACK flag is set */
2307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE
2308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Timeout Occured */
2310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_TIMEOUT;
2311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 42


2312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Initialize the UART State */
2315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
2319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
2322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Handle UART Communication Timeout.
2326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  Flag Specifies the UART flag to check
2328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  Status Flag status (SET or RESET)
2329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  Tickstart Tick start value
2330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  Timeout Timeout duration
2331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
2334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Wait until flag is set */
2336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
2337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Check for the Timeout */
2339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(Timeout != HAL_MAX_DELAY)
2340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if((Timeout == 0U) || ((HAL_GetTick()-Tickstart) > Timeout))
2342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
2343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
2344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
2345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->gState  = HAL_UART_STATE_READY;
2348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
2349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Process Unlocked */
2351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         __HAL_UNLOCK(huart);
2352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         return HAL_TIMEOUT;
2353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
2354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
2357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
2362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
2366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
  28              		.loc 1 2366 0
  29              		.cfi_startproc
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 43


  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
2367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
2368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
  34              		.loc 1 2368 0
  35 0000 0268     		ldr	r2, [r0]
  36 0002 1368     		ldr	r3, [r2]
  37 0004 23F0C003 		bic	r3, r3, #192
  38 0008 1360     		str	r3, [r2]
2369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
2371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
  39              		.loc 1 2371 0
  40 000a 2023     		movs	r3, #32
  41 000c 80F86930 		strb	r3, [r0, #105]
  42 0010 7047     		bx	lr
  43              		.cfi_endproc
  44              	.LFE166:
  46 0012 00BF     		.section	.text.UART_EndRxTransfer,"ax",%progbits
  47              		.align	2
  48              		.thumb
  49              		.thumb_func
  51              	UART_EndRxTransfer:
  52              	.LFB167:
2372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
2377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
2381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
  53              		.loc 1 2381 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
  58              	.LVL1:
2382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
  59              		.loc 1 2383 0
  60 0000 0268     		ldr	r2, [r0]
  61 0002 1368     		ldr	r3, [r2]
  62 0004 23F49073 		bic	r3, r3, #288
  63 0008 1360     		str	r3, [r2]
2384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
  64              		.loc 1 2384 0
  65 000a 0268     		ldr	r2, [r0]
  66 000c 9368     		ldr	r3, [r2, #8]
  67 000e 23F00103 		bic	r3, r3, #1
  68 0012 9360     		str	r3, [r2, #8]
2385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 44


2387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
  69              		.loc 1 2387 0
  70 0014 2023     		movs	r3, #32
  71 0016 80F86A30 		strb	r3, [r0, #106]
  72 001a 7047     		bx	lr
  73              		.cfi_endproc
  74              	.LFE167:
  76              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  77              		.align	2
  78              		.weak	HAL_UART_MspInit
  79              		.thumb
  80              		.thumb_func
  82              	HAL_UART_MspInit:
  83              	.LFB128:
 612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
  84              		.loc 1 612 0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 0
  87              		@ frame_needed = 0, uses_anonymous_args = 0
  88              		@ link register save eliminated.
  89              	.LVL2:
  90 0000 7047     		bx	lr
  91              		.cfi_endproc
  92              	.LFE128:
  94 0002 00BF     		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
  95              		.align	2
  96              		.weak	HAL_UART_MspDeInit
  97              		.thumb
  98              		.thumb_func
 100              	HAL_UART_MspDeInit:
 101              	.LFB129:
 627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 102              		.loc 1 627 0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106              		@ link register save eliminated.
 107              	.LVL3:
 108 0000 7047     		bx	lr
 109              		.cfi_endproc
 110              	.LFE129:
 112 0002 00BF     		.section	.text.HAL_UART_DeInit,"ax",%progbits
 113              		.align	2
 114              		.global	HAL_UART_DeInit
 115              		.thumb
 116              		.thumb_func
 118              	HAL_UART_DeInit:
 119              	.LFB127:
 574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 120              		.loc 1 574 0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124              	.LVL4:
 576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 125              		.loc 1 576 0
 126 0000 D8B1     		cbz	r0, .L7
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 45


 574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 127              		.loc 1 574 0
 128 0002 38B5     		push	{r3, r4, r5, lr}
 129              	.LCFI0:
 130              		.cfi_def_cfa_offset 16
 131              		.cfi_offset 3, -16
 132              		.cfi_offset 4, -12
 133              		.cfi_offset 5, -8
 134              		.cfi_offset 14, -4
 135 0004 0446     		mov	r4, r0
 584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 136              		.loc 1 584 0
 137 0006 2423     		movs	r3, #36
 138 0008 80F86930 		strb	r3, [r0, #105]
 587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 139              		.loc 1 587 0
 140 000c 0268     		ldr	r2, [r0]
 141 000e 1368     		ldr	r3, [r2]
 142 0010 23F00103 		bic	r3, r3, #1
 143 0014 1360     		str	r3, [r2]
 589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 144              		.loc 1 589 0
 145 0016 0368     		ldr	r3, [r0]
 146 0018 0025     		movs	r5, #0
 147 001a 1D60     		str	r5, [r3]
 590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 148              		.loc 1 590 0
 149 001c 0368     		ldr	r3, [r0]
 150 001e 5D60     		str	r5, [r3, #4]
 591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 151              		.loc 1 591 0
 152 0020 0368     		ldr	r3, [r0]
 153 0022 9D60     		str	r5, [r3, #8]
 594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 154              		.loc 1 594 0
 155 0024 FFF7FEFF 		bl	HAL_UART_MspDeInit
 156              	.LVL5:
 596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState    = HAL_UART_STATE_RESET;
 157              		.loc 1 596 0
 158 0028 E566     		str	r5, [r4, #108]
 597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState   = HAL_UART_STATE_RESET;
 159              		.loc 1 597 0
 160 002a 84F86950 		strb	r5, [r4, #105]
 598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 161              		.loc 1 598 0
 162 002e 84F86A50 		strb	r5, [r4, #106]
 601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 163              		.loc 1 601 0
 164 0032 84F86850 		strb	r5, [r4, #104]
 603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 165              		.loc 1 603 0
 166 0036 2846     		mov	r0, r5
 167 0038 38BD     		pop	{r3, r4, r5, pc}
 168              	.LVL6:
 169              	.L7:
 170              	.LCFI1:
 171              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 46


 172              		.cfi_restore 3
 173              		.cfi_restore 4
 174              		.cfi_restore 5
 175              		.cfi_restore 14
 578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 176              		.loc 1 578 0
 177 003a 0120     		movs	r0, #1
 178              	.LVL7:
 179 003c 7047     		bx	lr
 180              		.cfi_endproc
 181              	.LFE127:
 183 003e 00BF     		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 184              		.align	2
 185              		.global	HAL_UART_Transmit_IT
 186              		.thumb
 187              		.thumb_func
 189              	HAL_UART_Transmit_IT:
 190              	.LFB132:
 866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 191              		.loc 1 866 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195              		@ link register save eliminated.
 196              	.LVL8:
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 197              		.loc 1 868 0
 198 0000 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 199 0004 DBB2     		uxtb	r3, r3
 200 0006 202B     		cmp	r3, #32
 201 0008 18D1     		bne	.L12
 870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 202              		.loc 1 870 0
 203 000a C9B1     		cbz	r1, .L13
 870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 204              		.loc 1 870 0 is_stmt 0 discriminator 1
 205 000c D2B1     		cbz	r2, .L14
 876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 206              		.loc 1 876 0 is_stmt 1
 207 000e 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 208 0012 012B     		cmp	r3, #1
 209 0014 18D0     		beq	.L15
 878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize = Size;
 210              		.loc 1 878 0 discriminator 2
 211 0016 C164     		str	r1, [r0, #76]
 879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 212              		.loc 1 879 0 discriminator 2
 213 0018 A0F85020 		strh	r2, [r0, #80]	@ movhi
 880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 214              		.loc 1 880 0 discriminator 2
 215 001c A0F85220 		strh	r2, [r0, #82]	@ movhi
 882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 216              		.loc 1 882 0 discriminator 2
 217 0020 0023     		movs	r3, #0
 218 0022 C366     		str	r3, [r0, #108]
 883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 219              		.loc 1 883 0 discriminator 2
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 47


 220 0024 2122     		movs	r2, #33
 221              	.LVL9:
 222 0026 80F86920 		strb	r2, [r0, #105]
 886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 223              		.loc 1 886 0 discriminator 2
 224 002a 80F86830 		strb	r3, [r0, #104]
 889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 225              		.loc 1 889 0 discriminator 2
 226 002e 0168     		ldr	r1, [r0]
 227              	.LVL10:
 228 0030 0A68     		ldr	r2, [r1]
 229 0032 42F08002 		orr	r2, r2, #128
 230 0036 0A60     		str	r2, [r1]
 231              	.LVL11:
 891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 232              		.loc 1 891 0 discriminator 2
 233 0038 1846     		mov	r0, r3
 234              	.LVL12:
 235 003a 7047     		bx	lr
 236              	.LVL13:
 237              	.L12:
 895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 238              		.loc 1 895 0
 239 003c 0220     		movs	r0, #2
 240              	.LVL14:
 241 003e 7047     		bx	lr
 242              	.LVL15:
 243              	.L13:
 872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 244              		.loc 1 872 0
 245 0040 0120     		movs	r0, #1
 246              	.LVL16:
 247 0042 7047     		bx	lr
 248              	.LVL17:
 249              	.L14:
 250 0044 0120     		movs	r0, #1
 251              	.LVL18:
 252 0046 7047     		bx	lr
 253              	.LVL19:
 254              	.L15:
 876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 255              		.loc 1 876 0
 256 0048 0220     		movs	r0, #2
 257              	.LVL20:
 897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 258              		.loc 1 897 0
 259 004a 7047     		bx	lr
 260              		.cfi_endproc
 261              	.LFE132:
 263              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 264              		.align	2
 265              		.global	HAL_UART_Receive_IT
 266              		.thumb
 267              		.thumb_func
 269              	HAL_UART_Receive_IT:
 270              	.LFB133:
 907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 48


 271              		.loc 1 907 0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 0
 274              		@ frame_needed = 0, uses_anonymous_args = 0
 275              		@ link register save eliminated.
 276              	.LVL21:
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 277              		.loc 1 909 0
 278 0000 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 279 0004 DBB2     		uxtb	r3, r3
 280 0006 202B     		cmp	r3, #32
 281 0008 48D1     		bne	.L24
 911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 282              		.loc 1 911 0
 283 000a 0029     		cmp	r1, #0
 284 000c 48D0     		beq	.L25
 911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 285              		.loc 1 911 0 is_stmt 0 discriminator 1
 286 000e 002A     		cmp	r2, #0
 287 0010 48D0     		beq	.L26
 917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 288              		.loc 1 917 0 is_stmt 1
 289 0012 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 290 0016 012B     		cmp	r3, #1
 291 0018 46D0     		beq	.L27
 917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 292              		.loc 1 917 0 is_stmt 0 discriminator 2
 293 001a 0123     		movs	r3, #1
 294 001c 80F86830 		strb	r3, [r0, #104]
 919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize = Size;
 295              		.loc 1 919 0 is_stmt 1 discriminator 2
 296 0020 4165     		str	r1, [r0, #84]
 920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = Size;
 297              		.loc 1 920 0 discriminator 2
 298 0022 A0F85820 		strh	r2, [r0, #88]	@ movhi
 921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 299              		.loc 1 921 0 discriminator 2
 300 0026 A0F85A20 		strh	r2, [r0, #90]	@ movhi
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 301              		.loc 1 924 0 discriminator 2
 302 002a 8368     		ldr	r3, [r0, #8]
 303 002c B3F5805F 		cmp	r3, #4096
 304 0030 0AD1     		bne	.L18
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 305              		.loc 1 924 0 is_stmt 0 discriminator 1
 306 0032 0369     		ldr	r3, [r0, #16]
 307 0034 23B9     		cbnz	r3, .L19
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 308              		.loc 1 924 0 discriminator 3
 309 0036 40F2FF13 		movw	r3, #511
 310 003a A0F85C30 		strh	r3, [r0, #92]	@ movhi
 311 003e 1AE0     		b	.L20
 312              	.L19:
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 313              		.loc 1 924 0 discriminator 4
 314 0040 FF23     		movs	r3, #255
 315 0042 A0F85C30 		strh	r3, [r0, #92]	@ movhi
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 49


 316 0046 16E0     		b	.L20
 317              	.L18:
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 318              		.loc 1 924 0 discriminator 2
 319 0048 4BB9     		cbnz	r3, .L21
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 320              		.loc 1 924 0 discriminator 5
 321 004a 0369     		ldr	r3, [r0, #16]
 322 004c 1BB9     		cbnz	r3, .L22
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 323              		.loc 1 924 0 discriminator 7
 324 004e FF23     		movs	r3, #255
 325 0050 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 326 0054 0FE0     		b	.L20
 327              	.L22:
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 328              		.loc 1 924 0 discriminator 8
 329 0056 7F23     		movs	r3, #127
 330 0058 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 331 005c 0BE0     		b	.L20
 332              	.L21:
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 333              		.loc 1 924 0 discriminator 6
 334 005e B3F1805F 		cmp	r3, #268435456
 335 0062 08D1     		bne	.L20
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 336              		.loc 1 924 0 discriminator 9
 337 0064 0369     		ldr	r3, [r0, #16]
 338 0066 1BB9     		cbnz	r3, .L23
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 339              		.loc 1 924 0 discriminator 10
 340 0068 7F23     		movs	r3, #127
 341 006a A0F85C30 		strh	r3, [r0, #92]	@ movhi
 342 006e 02E0     		b	.L20
 343              	.L23:
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 344              		.loc 1 924 0 discriminator 11
 345 0070 3F23     		movs	r3, #63
 346 0072 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 347              	.L20:
 926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 348              		.loc 1 926 0 is_stmt 1
 349 0076 0023     		movs	r3, #0
 350 0078 C366     		str	r3, [r0, #108]
 927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 351              		.loc 1 927 0
 352 007a 2222     		movs	r2, #34
 353              	.LVL22:
 354 007c 80F86A20 		strb	r2, [r0, #106]
 930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 355              		.loc 1 930 0
 356 0080 80F86830 		strb	r3, [r0, #104]
 933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 357              		.loc 1 933 0
 358 0084 0168     		ldr	r1, [r0]
 359              	.LVL23:
 360 0086 8A68     		ldr	r2, [r1, #8]
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 50


 361 0088 42F00102 		orr	r2, r2, #1
 362 008c 8A60     		str	r2, [r1, #8]
 363              	.LVL24:
 936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 364              		.loc 1 936 0
 365 008e 0168     		ldr	r1, [r0]
 366 0090 0A68     		ldr	r2, [r1]
 367 0092 42F49072 		orr	r2, r2, #288
 368 0096 0A60     		str	r2, [r1]
 938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 369              		.loc 1 938 0
 370 0098 1846     		mov	r0, r3
 371              	.LVL25:
 372 009a 7047     		bx	lr
 373              	.LVL26:
 374              	.L24:
 942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 375              		.loc 1 942 0
 376 009c 0220     		movs	r0, #2
 377              	.LVL27:
 378 009e 7047     		bx	lr
 379              	.LVL28:
 380              	.L25:
 913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 381              		.loc 1 913 0
 382 00a0 0120     		movs	r0, #1
 383              	.LVL29:
 384 00a2 7047     		bx	lr
 385              	.LVL30:
 386              	.L26:
 387 00a4 0120     		movs	r0, #1
 388              	.LVL31:
 389 00a6 7047     		bx	lr
 390              	.LVL32:
 391              	.L27:
 917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 392              		.loc 1 917 0
 393 00a8 0220     		movs	r0, #2
 394              	.LVL33:
 944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 395              		.loc 1 944 0
 396 00aa 7047     		bx	lr
 397              		.cfi_endproc
 398              	.LFE133:
 400              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 401              		.align	2
 402              		.global	HAL_UART_Transmit_DMA
 403              		.thumb
 404              		.thumb_func
 406              	HAL_UART_Transmit_DMA:
 407              	.LFB134:
 957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if UART instance supports continuous communication using DMA */
 408              		.loc 1 957 0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 0
 411              		@ frame_needed = 0, uses_anonymous_args = 0
 412              	.LVL34:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 51


 413 0000 38B5     		push	{r3, r4, r5, lr}
 414              	.LCFI2:
 415              		.cfi_def_cfa_offset 16
 416              		.cfi_offset 3, -16
 417              		.cfi_offset 4, -12
 418              		.cfi_offset 5, -8
 419              		.cfi_offset 14, -4
 420 0002 0446     		mov	r4, r0
 421 0004 1346     		mov	r3, r2
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 422              		.loc 1 962 0
 423 0006 90F86920 		ldrb	r2, [r0, #105]	@ zero_extendqisi2
 424              	.LVL35:
 425 000a D2B2     		uxtb	r2, r2
 426 000c 202A     		cmp	r2, #32
 427 000e 31D1     		bne	.L30
 964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 428              		.loc 1 964 0
 429 0010 0029     		cmp	r1, #0
 430 0012 31D0     		beq	.L31
 964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 431              		.loc 1 964 0 is_stmt 0 discriminator 1
 432 0014 002B     		cmp	r3, #0
 433 0016 31D0     		beq	.L32
 970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 434              		.loc 1 970 0 is_stmt 1
 435 0018 90F86820 		ldrb	r2, [r0, #104]	@ zero_extendqisi2
 436 001c 012A     		cmp	r2, #1
 437 001e 2FD0     		beq	.L33
 970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 438              		.loc 1 970 0 is_stmt 0 discriminator 2
 439 0020 0122     		movs	r2, #1
 440 0022 80F86820 		strb	r2, [r0, #104]
 972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize = Size;
 441              		.loc 1 972 0 is_stmt 1 discriminator 2
 442 0026 C164     		str	r1, [r0, #76]
 973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 443              		.loc 1 973 0 discriminator 2
 444 0028 A0F85030 		strh	r3, [r0, #80]	@ movhi
 974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 445              		.loc 1 974 0 discriminator 2
 446 002c A0F85230 		strh	r3, [r0, #82]	@ movhi
 976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 447              		.loc 1 976 0 discriminator 2
 448 0030 0025     		movs	r5, #0
 449 0032 C566     		str	r5, [r0, #108]
 977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 450              		.loc 1 977 0 discriminator 2
 451 0034 2122     		movs	r2, #33
 452 0036 80F86920 		strb	r2, [r0, #105]
 980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 453              		.loc 1 980 0 discriminator 2
 454 003a 026E     		ldr	r2, [r0, #96]
 455 003c 1149     		ldr	r1, .L35
 456              	.LVL36:
 457 003e 9162     		str	r1, [r2, #40]
 458              	.LVL37:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 52


 983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 459              		.loc 1 983 0 discriminator 2
 460 0040 026E     		ldr	r2, [r0, #96]
 461 0042 1149     		ldr	r1, .L35+4
 462 0044 D162     		str	r1, [r2, #44]
 986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 463              		.loc 1 986 0 discriminator 2
 464 0046 026E     		ldr	r2, [r0, #96]
 465 0048 1049     		ldr	r1, .L35+8
 466 004a 1163     		str	r1, [r2, #48]
 989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 467              		.loc 1 989 0 discriminator 2
 468 004c 026E     		ldr	r2, [r0, #96]
 469 004e 5563     		str	r5, [r2, #52]
 992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 470              		.loc 1 992 0 discriminator 2
 471 0050 0268     		ldr	r2, [r0]
 472 0052 006E     		ldr	r0, [r0, #96]
 473              	.LVL38:
 474 0054 E16C     		ldr	r1, [r4, #76]
 475 0056 2832     		adds	r2, r2, #40
 476 0058 FFF7FEFF 		bl	HAL_DMA_Start_IT
 477              	.LVL39:
 995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 478              		.loc 1 995 0 discriminator 2
 479 005c 2368     		ldr	r3, [r4]
 480 005e 4022     		movs	r2, #64
 481 0060 1A62     		str	r2, [r3, #32]
 998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 482              		.loc 1 998 0 discriminator 2
 483 0062 84F86850 		strb	r5, [r4, #104]
1002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 484              		.loc 1 1002 0 discriminator 2
 485 0066 2268     		ldr	r2, [r4]
 486 0068 9368     		ldr	r3, [r2, #8]
 487 006a 43F08003 		orr	r3, r3, #128
 488 006e 9360     		str	r3, [r2, #8]
1004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 489              		.loc 1 1004 0 discriminator 2
 490 0070 2846     		mov	r0, r5
 491 0072 38BD     		pop	{r3, r4, r5, pc}
 492              	.LVL40:
 493              	.L30:
1008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 494              		.loc 1 1008 0
 495 0074 0220     		movs	r0, #2
 496              	.LVL41:
 497 0076 38BD     		pop	{r3, r4, r5, pc}
 498              	.LVL42:
 499              	.L31:
 966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 500              		.loc 1 966 0
 501 0078 0120     		movs	r0, #1
 502              	.LVL43:
 503 007a 38BD     		pop	{r3, r4, r5, pc}
 504              	.LVL44:
 505              	.L32:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 53


 506 007c 0120     		movs	r0, #1
 507              	.LVL45:
 508 007e 38BD     		pop	{r3, r4, r5, pc}
 509              	.LVL46:
 510              	.L33:
 970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 511              		.loc 1 970 0
 512 0080 0220     		movs	r0, #2
 513              	.LVL47:
1010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 514              		.loc 1 1010 0
 515 0082 38BD     		pop	{r3, r4, r5, pc}
 516              	.LVL48:
 517              	.L36:
 518              		.align	2
 519              	.L35:
 520 0084 00000000 		.word	UART_DMATransmitCplt
 521 0088 00000000 		.word	UART_DMATxHalfCplt
 522 008c 00000000 		.word	UART_DMAError
 523              		.cfi_endproc
 524              	.LFE134:
 526              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 527              		.align	2
 528              		.global	HAL_UART_Receive_DMA
 529              		.thumb
 530              		.thumb_func
 532              	HAL_UART_Receive_DMA:
 533              	.LFB135:
1025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if UART instance supports continuous communication using DMA */
 534              		.loc 1 1025 0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 0
 537              		@ frame_needed = 0, uses_anonymous_args = 0
 538              	.LVL49:
 539 0000 38B5     		push	{r3, r4, r5, lr}
 540              	.LCFI3:
 541              		.cfi_def_cfa_offset 16
 542              		.cfi_offset 3, -16
 543              		.cfi_offset 4, -12
 544              		.cfi_offset 5, -8
 545              		.cfi_offset 14, -4
 546 0002 0446     		mov	r4, r0
 547 0004 1346     		mov	r3, r2
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 548              		.loc 1 1030 0
 549 0006 90F86A20 		ldrb	r2, [r0, #106]	@ zero_extendqisi2
 550              	.LVL50:
 551 000a D2B2     		uxtb	r2, r2
 552 000c 202A     		cmp	r2, #32
 553 000e 36D1     		bne	.L39
1032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 554              		.loc 1 1032 0
 555 0010 0029     		cmp	r1, #0
 556 0012 36D0     		beq	.L40
1032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 557              		.loc 1 1032 0 is_stmt 0 discriminator 1
 558 0014 002B     		cmp	r3, #0
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 54


 559 0016 36D0     		beq	.L41
1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 560              		.loc 1 1038 0 is_stmt 1
 561 0018 90F86820 		ldrb	r2, [r0, #104]	@ zero_extendqisi2
 562 001c 012A     		cmp	r2, #1
 563 001e 34D0     		beq	.L42
1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 564              		.loc 1 1038 0 is_stmt 0 discriminator 2
 565 0020 0122     		movs	r2, #1
 566 0022 80F86820 		strb	r2, [r0, #104]
1040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize = Size;
 567              		.loc 1 1040 0 is_stmt 1 discriminator 2
 568 0026 4165     		str	r1, [r0, #84]
1041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 569              		.loc 1 1041 0 discriminator 2
 570 0028 A0F85830 		strh	r3, [r0, #88]	@ movhi
1043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 571              		.loc 1 1043 0 discriminator 2
 572 002c 0025     		movs	r5, #0
 573 002e C566     		str	r5, [r0, #108]
1044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 574              		.loc 1 1044 0 discriminator 2
 575 0030 2222     		movs	r2, #34
 576 0032 80F86A20 		strb	r2, [r0, #106]
1047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 577              		.loc 1 1047 0 discriminator 2
 578 0036 426E     		ldr	r2, [r0, #100]
 579 0038 1549     		ldr	r1, .L44
 580              	.LVL51:
 581 003a 9162     		str	r1, [r2, #40]
 582              	.LVL52:
1050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 583              		.loc 1 1050 0 discriminator 2
 584 003c 426E     		ldr	r2, [r0, #100]
 585 003e 1549     		ldr	r1, .L44+4
 586 0040 D162     		str	r1, [r2, #44]
1053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 587              		.loc 1 1053 0 discriminator 2
 588 0042 426E     		ldr	r2, [r0, #100]
 589 0044 1449     		ldr	r1, .L44+8
 590 0046 1163     		str	r1, [r2, #48]
1056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 591              		.loc 1 1056 0 discriminator 2
 592 0048 426E     		ldr	r2, [r0, #100]
 593 004a 5563     		str	r5, [r2, #52]
1059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 594              		.loc 1 1059 0 discriminator 2
 595 004c 0168     		ldr	r1, [r0]
 596 004e 406E     		ldr	r0, [r0, #100]
 597              	.LVL53:
 598 0050 2431     		adds	r1, r1, #36
 599 0052 626D     		ldr	r2, [r4, #84]
 600 0054 FFF7FEFF 		bl	HAL_DMA_Start_IT
 601              	.LVL54:
1062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 602              		.loc 1 1062 0 discriminator 2
 603 0058 84F86850 		strb	r5, [r4, #104]
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 55


1065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 604              		.loc 1 1065 0 discriminator 2
 605 005c 2268     		ldr	r2, [r4]
 606 005e 1368     		ldr	r3, [r2]
 607 0060 43F48073 		orr	r3, r3, #256
 608 0064 1360     		str	r3, [r2]
1068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 609              		.loc 1 1068 0 discriminator 2
 610 0066 2268     		ldr	r2, [r4]
 611 0068 9368     		ldr	r3, [r2, #8]
 612 006a 43F00103 		orr	r3, r3, #1
 613 006e 9360     		str	r3, [r2, #8]
1072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 614              		.loc 1 1072 0 discriminator 2
 615 0070 2268     		ldr	r2, [r4]
 616 0072 9368     		ldr	r3, [r2, #8]
 617 0074 43F04003 		orr	r3, r3, #64
 618 0078 9360     		str	r3, [r2, #8]
1074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 619              		.loc 1 1074 0 discriminator 2
 620 007a 2846     		mov	r0, r5
 621 007c 38BD     		pop	{r3, r4, r5, pc}
 622              	.LVL55:
 623              	.L39:
1078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 624              		.loc 1 1078 0
 625 007e 0220     		movs	r0, #2
 626              	.LVL56:
 627 0080 38BD     		pop	{r3, r4, r5, pc}
 628              	.LVL57:
 629              	.L40:
1034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 630              		.loc 1 1034 0
 631 0082 0120     		movs	r0, #1
 632              	.LVL58:
 633 0084 38BD     		pop	{r3, r4, r5, pc}
 634              	.LVL59:
 635              	.L41:
 636 0086 0120     		movs	r0, #1
 637              	.LVL60:
 638 0088 38BD     		pop	{r3, r4, r5, pc}
 639              	.LVL61:
 640              	.L42:
1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 641              		.loc 1 1038 0
 642 008a 0220     		movs	r0, #2
 643              	.LVL62:
1080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 644              		.loc 1 1080 0
 645 008c 38BD     		pop	{r3, r4, r5, pc}
 646              	.LVL63:
 647              	.L45:
 648 008e 00BF     		.align	2
 649              	.L44:
 650 0090 00000000 		.word	UART_DMAReceiveCplt
 651 0094 00000000 		.word	UART_DMARxHalfCplt
 652 0098 00000000 		.word	UART_DMAError
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 56


 653              		.cfi_endproc
 654              	.LFE135:
 656              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 657              		.align	2
 658              		.global	HAL_UART_DMAPause
 659              		.thumb
 660              		.thumb_func
 662              	HAL_UART_DMAPause:
 663              	.LFB136:
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
 664              		.loc 1 1088 0
 665              		.cfi_startproc
 666              		@ args = 0, pretend = 0, frame = 0
 667              		@ frame_needed = 0, uses_anonymous_args = 0
 668              		@ link register save eliminated.
 669              	.LVL64:
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 670              		.loc 1 1090 0
 671 0000 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 672 0004 012B     		cmp	r3, #1
 673 0006 2DD0     		beq	.L50
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 674              		.loc 1 1090 0 is_stmt 0 discriminator 2
 675 0008 0123     		movs	r3, #1
 676 000a 80F86830 		strb	r3, [r0, #104]
1092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 677              		.loc 1 1092 0 is_stmt 1 discriminator 2
 678 000e 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 679 0012 DBB2     		uxtb	r3, r3
 680 0014 212B     		cmp	r3, #33
 681 0016 08D1     		bne	.L48
1093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 682              		.loc 1 1093 0 discriminator 1
 683 0018 0368     		ldr	r3, [r0]
 684 001a 9A68     		ldr	r2, [r3, #8]
1092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 685              		.loc 1 1092 0 discriminator 1
 686 001c 12F0800F 		tst	r2, #128
 687 0020 03D0     		beq	.L48
1096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 688              		.loc 1 1096 0
 689 0022 9A68     		ldr	r2, [r3, #8]
 690 0024 22F08002 		bic	r2, r2, #128
 691 0028 9A60     		str	r2, [r3, #8]
 692              	.L48:
1098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 693              		.loc 1 1098 0
 694 002a 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 695 002e DBB2     		uxtb	r3, r3
 696 0030 222B     		cmp	r3, #34
 697 0032 12D1     		bne	.L49
1099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 698              		.loc 1 1099 0 discriminator 1
 699 0034 0368     		ldr	r3, [r0]
 700 0036 9A68     		ldr	r2, [r3, #8]
1098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 701              		.loc 1 1098 0 discriminator 1
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 57


 702 0038 12F0400F 		tst	r2, #64
 703 003c 0DD0     		beq	.L49
1102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 704              		.loc 1 1102 0
 705 003e 1A68     		ldr	r2, [r3]
 706 0040 22F48072 		bic	r2, r2, #256
 707 0044 1A60     		str	r2, [r3]
1103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 708              		.loc 1 1103 0
 709 0046 0268     		ldr	r2, [r0]
 710 0048 9368     		ldr	r3, [r2, #8]
 711 004a 23F00103 		bic	r3, r3, #1
 712 004e 9360     		str	r3, [r2, #8]
1106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 713              		.loc 1 1106 0
 714 0050 0268     		ldr	r2, [r0]
 715 0052 9368     		ldr	r3, [r2, #8]
 716 0054 23F04003 		bic	r3, r3, #64
 717 0058 9360     		str	r3, [r2, #8]
 718              	.L49:
1110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 719              		.loc 1 1110 0
 720 005a 0023     		movs	r3, #0
 721 005c 80F86830 		strb	r3, [r0, #104]
1112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 722              		.loc 1 1112 0
 723 0060 1846     		mov	r0, r3
 724              	.LVL65:
 725 0062 7047     		bx	lr
 726              	.LVL66:
 727              	.L50:
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 728              		.loc 1 1090 0
 729 0064 0220     		movs	r0, #2
 730              	.LVL67:
1113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 731              		.loc 1 1113 0
 732 0066 7047     		bx	lr
 733              		.cfi_endproc
 734              	.LFE136:
 736              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 737              		.align	2
 738              		.global	HAL_UART_DMAResume
 739              		.thumb
 740              		.thumb_func
 742              	HAL_UART_DMAResume:
 743              	.LFB137:
1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
 744              		.loc 1 1121 0
 745              		.cfi_startproc
 746              		@ args = 0, pretend = 0, frame = 0
 747              		@ frame_needed = 0, uses_anonymous_args = 0
 748              		@ link register save eliminated.
 749              	.LVL68:
1123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 750              		.loc 1 1123 0
 751 0000 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 58


 752 0004 012B     		cmp	r3, #1
 753 0006 28D0     		beq	.L55
1123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 754              		.loc 1 1123 0 is_stmt 0 discriminator 2
 755 0008 0123     		movs	r3, #1
 756 000a 80F86830 		strb	r3, [r0, #104]
1125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 757              		.loc 1 1125 0 is_stmt 1 discriminator 2
 758 000e 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 759 0012 DBB2     		uxtb	r3, r3
 760 0014 212B     		cmp	r3, #33
 761 0016 04D1     		bne	.L53
1128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 762              		.loc 1 1128 0
 763 0018 0268     		ldr	r2, [r0]
 764 001a 9368     		ldr	r3, [r2, #8]
 765 001c 43F08003 		orr	r3, r3, #128
 766 0020 9360     		str	r3, [r2, #8]
 767              	.L53:
1130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 768              		.loc 1 1130 0
 769 0022 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 770 0026 DBB2     		uxtb	r3, r3
 771 0028 222B     		cmp	r3, #34
 772 002a 11D1     		bne	.L54
1133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 773              		.loc 1 1133 0
 774 002c 0368     		ldr	r3, [r0]
 775 002e 0822     		movs	r2, #8
 776 0030 1A62     		str	r2, [r3, #32]
1136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 777              		.loc 1 1136 0
 778 0032 0268     		ldr	r2, [r0]
 779 0034 1368     		ldr	r3, [r2]
 780 0036 43F48073 		orr	r3, r3, #256
 781 003a 1360     		str	r3, [r2]
1137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 782              		.loc 1 1137 0
 783 003c 0268     		ldr	r2, [r0]
 784 003e 9368     		ldr	r3, [r2, #8]
 785 0040 43F00103 		orr	r3, r3, #1
 786 0044 9360     		str	r3, [r2, #8]
1140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 787              		.loc 1 1140 0
 788 0046 0268     		ldr	r2, [r0]
 789 0048 9368     		ldr	r3, [r2, #8]
 790 004a 43F04003 		orr	r3, r3, #64
 791 004e 9360     		str	r3, [r2, #8]
 792              	.L54:
1144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 793              		.loc 1 1144 0
 794 0050 0023     		movs	r3, #0
 795 0052 80F86830 		strb	r3, [r0, #104]
1146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 796              		.loc 1 1146 0
 797 0056 1846     		mov	r0, r3
 798              	.LVL69:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 59


 799 0058 7047     		bx	lr
 800              	.LVL70:
 801              	.L55:
1123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 802              		.loc 1 1123 0
 803 005a 0220     		movs	r0, #2
 804              	.LVL71:
1147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 805              		.loc 1 1147 0
 806 005c 7047     		bx	lr
 807              		.cfi_endproc
 808              	.LFE137:
 810 005e 00BF     		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 811              		.align	2
 812              		.global	HAL_UART_DMAStop
 813              		.thumb
 814              		.thumb_func
 816              	HAL_UART_DMAStop:
 817              	.LFB138:
1155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
 818              		.loc 1 1155 0
 819              		.cfi_startproc
 820              		@ args = 0, pretend = 0, frame = 0
 821              		@ frame_needed = 0, uses_anonymous_args = 0
 822              	.LVL72:
 823 0000 10B5     		push	{r4, lr}
 824              	.LCFI4:
 825              		.cfi_def_cfa_offset 8
 826              		.cfi_offset 4, -8
 827              		.cfi_offset 14, -4
 828 0002 0446     		mov	r4, r0
1164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 829              		.loc 1 1164 0
 830 0004 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 831 0008 DBB2     		uxtb	r3, r3
 832 000a 212B     		cmp	r3, #33
 833 000c 0FD1     		bne	.L57
1165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 834              		.loc 1 1165 0 discriminator 1
 835 000e 0368     		ldr	r3, [r0]
 836 0010 9A68     		ldr	r2, [r3, #8]
1164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 837              		.loc 1 1164 0 discriminator 1
 838 0012 12F0800F 		tst	r2, #128
 839 0016 0AD0     		beq	.L57
1167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 840              		.loc 1 1167 0
 841 0018 9A68     		ldr	r2, [r3, #8]
 842 001a 22F08002 		bic	r2, r2, #128
 843 001e 9A60     		str	r2, [r3, #8]
1170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 844              		.loc 1 1170 0
 845 0020 006E     		ldr	r0, [r0, #96]
 846              	.LVL73:
 847 0022 08B1     		cbz	r0, .L58
1172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 848              		.loc 1 1172 0
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 60


 849 0024 FFF7FEFF 		bl	HAL_DMA_Abort
 850              	.LVL74:
 851              	.L58:
1175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 852              		.loc 1 1175 0
 853 0028 2046     		mov	r0, r4
 854 002a FFF7FEFF 		bl	UART_EndTxTransfer
 855              	.LVL75:
 856              	.L57:
1179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 857              		.loc 1 1179 0
 858 002e 94F86A30 		ldrb	r3, [r4, #106]	@ zero_extendqisi2
 859 0032 DBB2     		uxtb	r3, r3
 860 0034 222B     		cmp	r3, #34
 861 0036 0FD1     		bne	.L59
1180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 862              		.loc 1 1180 0 discriminator 1
 863 0038 2368     		ldr	r3, [r4]
 864 003a 9A68     		ldr	r2, [r3, #8]
1179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 865              		.loc 1 1179 0 discriminator 1
 866 003c 12F0400F 		tst	r2, #64
 867 0040 0AD0     		beq	.L59
1182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 868              		.loc 1 1182 0
 869 0042 9A68     		ldr	r2, [r3, #8]
 870 0044 22F04002 		bic	r2, r2, #64
 871 0048 9A60     		str	r2, [r3, #8]
1185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 872              		.loc 1 1185 0
 873 004a 606E     		ldr	r0, [r4, #100]
 874 004c 08B1     		cbz	r0, .L60
1187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 875              		.loc 1 1187 0
 876 004e FFF7FEFF 		bl	HAL_DMA_Abort
 877              	.LVL76:
 878              	.L60:
1190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 879              		.loc 1 1190 0
 880 0052 2046     		mov	r0, r4
 881 0054 FFF7FEFF 		bl	UART_EndRxTransfer
 882              	.LVL77:
 883              	.L59:
1194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 884              		.loc 1 1194 0
 885 0058 0020     		movs	r0, #0
 886 005a 10BD     		pop	{r4, pc}
 887              		.cfi_endproc
 888              	.LFE138:
 890              		.section	.text.HAL_UART_Abort,"ax",%progbits
 891              		.align	2
 892              		.global	HAL_UART_Abort
 893              		.thumb
 894              		.thumb_func
 896              	HAL_UART_Abort:
 897              	.LFB139:
1209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 61


 898              		.loc 1 1209 0
 899              		.cfi_startproc
 900              		@ args = 0, pretend = 0, frame = 0
 901              		@ frame_needed = 0, uses_anonymous_args = 0
 902              	.LVL78:
 903 0000 10B5     		push	{r4, lr}
 904              	.LCFI5:
 905              		.cfi_def_cfa_offset 8
 906              		.cfi_offset 4, -8
 907              		.cfi_offset 14, -4
 908 0002 0446     		mov	r4, r0
1211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 909              		.loc 1 1211 0
 910 0004 0268     		ldr	r2, [r0]
 911 0006 1368     		ldr	r3, [r2]
 912 0008 23F4F073 		bic	r3, r3, #480
 913 000c 1360     		str	r3, [r2]
1212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 914              		.loc 1 1212 0
 915 000e 0268     		ldr	r2, [r0]
 916 0010 9368     		ldr	r3, [r2, #8]
 917 0012 23F00103 		bic	r3, r3, #1
 918 0016 9360     		str	r3, [r2, #8]
1215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 919              		.loc 1 1215 0
 920 0018 0368     		ldr	r3, [r0]
 921 001a 9A68     		ldr	r2, [r3, #8]
 922 001c 12F0800F 		tst	r2, #128
 923 0020 0AD0     		beq	.L63
1217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 924              		.loc 1 1217 0
 925 0022 9A68     		ldr	r2, [r3, #8]
 926 0024 22F08002 		bic	r2, r2, #128
 927 0028 9A60     		str	r2, [r3, #8]
1220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 928              		.loc 1 1220 0
 929 002a 036E     		ldr	r3, [r0, #96]
 930 002c 23B1     		cbz	r3, .L63
1224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 931              		.loc 1 1224 0
 932 002e 0022     		movs	r2, #0
 933 0030 5A63     		str	r2, [r3, #52]
1226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 934              		.loc 1 1226 0
 935 0032 006E     		ldr	r0, [r0, #96]
 936              	.LVL79:
 937 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 938              	.LVL80:
 939              	.L63:
1231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 940              		.loc 1 1231 0
 941 0038 2368     		ldr	r3, [r4]
 942 003a 9A68     		ldr	r2, [r3, #8]
 943 003c 12F0400F 		tst	r2, #64
 944 0040 0AD0     		beq	.L64
1233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 945              		.loc 1 1233 0
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 62


 946 0042 9A68     		ldr	r2, [r3, #8]
 947 0044 22F04002 		bic	r2, r2, #64
 948 0048 9A60     		str	r2, [r3, #8]
1236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 949              		.loc 1 1236 0
 950 004a 636E     		ldr	r3, [r4, #100]
 951 004c 23B1     		cbz	r3, .L64
1240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 952              		.loc 1 1240 0
 953 004e 0022     		movs	r2, #0
 954 0050 5A63     		str	r2, [r3, #52]
1242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 955              		.loc 1 1242 0
 956 0052 606E     		ldr	r0, [r4, #100]
 957 0054 FFF7FEFF 		bl	HAL_DMA_Abort
 958              	.LVL81:
 959              	.L64:
1247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U; 
 960              		.loc 1 1247 0
 961 0058 0020     		movs	r0, #0
 962 005a A4F85200 		strh	r0, [r4, #82]	@ movhi
1248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 963              		.loc 1 1248 0
 964 005e A4F85A00 		strh	r0, [r4, #90]	@ movhi
1251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 965              		.loc 1 1251 0
 966 0062 2368     		ldr	r3, [r4]
 967 0064 0F22     		movs	r2, #15
 968 0066 1A62     		str	r2, [r3, #32]
1254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 969              		.loc 1 1254 0
 970 0068 2023     		movs	r3, #32
 971 006a 84F86930 		strb	r3, [r4, #105]
1255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 972              		.loc 1 1255 0
 973 006e 84F86A30 		strb	r3, [r4, #106]
1258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 974              		.loc 1 1258 0
 975 0072 E066     		str	r0, [r4, #108]
1261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 976              		.loc 1 1261 0
 977 0074 10BD     		pop	{r4, pc}
 978              		.cfi_endproc
 979              	.LFE139:
 981 0076 00BF     		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 982              		.align	2
 983              		.global	HAL_UART_AbortTransmit
 984              		.thumb
 985              		.thumb_func
 987              	HAL_UART_AbortTransmit:
 988              	.LFB140:
1276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 989              		.loc 1 1276 0
 990              		.cfi_startproc
 991              		@ args = 0, pretend = 0, frame = 0
 992              		@ frame_needed = 0, uses_anonymous_args = 0
 993              	.LVL82:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 63


 994 0000 10B5     		push	{r4, lr}
 995              	.LCFI6:
 996              		.cfi_def_cfa_offset 8
 997              		.cfi_offset 4, -8
 998              		.cfi_offset 14, -4
 999 0002 0446     		mov	r4, r0
1278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1000              		.loc 1 1278 0
 1001 0004 0268     		ldr	r2, [r0]
 1002 0006 1368     		ldr	r3, [r2]
 1003 0008 23F0C003 		bic	r3, r3, #192
 1004 000c 1360     		str	r3, [r2]
1281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1005              		.loc 1 1281 0
 1006 000e 0368     		ldr	r3, [r0]
 1007 0010 9A68     		ldr	r2, [r3, #8]
 1008 0012 12F0800F 		tst	r2, #128
 1009 0016 0AD0     		beq	.L67
1283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1010              		.loc 1 1283 0
 1011 0018 9A68     		ldr	r2, [r3, #8]
 1012 001a 22F08002 		bic	r2, r2, #128
 1013 001e 9A60     		str	r2, [r3, #8]
1286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1014              		.loc 1 1286 0
 1015 0020 036E     		ldr	r3, [r0, #96]
 1016 0022 23B1     		cbz	r3, .L67
1290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1017              		.loc 1 1290 0
 1018 0024 0022     		movs	r2, #0
 1019 0026 5A63     		str	r2, [r3, #52]
1292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1020              		.loc 1 1292 0
 1021 0028 006E     		ldr	r0, [r0, #96]
 1022              	.LVL83:
 1023 002a FFF7FEFF 		bl	HAL_DMA_Abort
 1024              	.LVL84:
 1025              	.L67:
1297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1026              		.loc 1 1297 0
 1027 002e 0020     		movs	r0, #0
 1028 0030 A4F85200 		strh	r0, [r4, #82]	@ movhi
1300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1029              		.loc 1 1300 0
 1030 0034 2023     		movs	r3, #32
 1031 0036 84F86930 		strb	r3, [r4, #105]
1303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1032              		.loc 1 1303 0
 1033 003a 10BD     		pop	{r4, pc}
 1034              		.cfi_endproc
 1035              	.LFE140:
 1037              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 1038              		.align	2
 1039              		.global	HAL_UART_AbortReceive
 1040              		.thumb
 1041              		.thumb_func
 1043              	HAL_UART_AbortReceive:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 64


 1044              	.LFB141:
1318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 1045              		.loc 1 1318 0
 1046              		.cfi_startproc
 1047              		@ args = 0, pretend = 0, frame = 0
 1048              		@ frame_needed = 0, uses_anonymous_args = 0
 1049              	.LVL85:
 1050 0000 10B5     		push	{r4, lr}
 1051              	.LCFI7:
 1052              		.cfi_def_cfa_offset 8
 1053              		.cfi_offset 4, -8
 1054              		.cfi_offset 14, -4
 1055 0002 0446     		mov	r4, r0
1320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1056              		.loc 1 1320 0
 1057 0004 0268     		ldr	r2, [r0]
 1058 0006 1368     		ldr	r3, [r2]
 1059 0008 23F49073 		bic	r3, r3, #288
 1060 000c 1360     		str	r3, [r2]
1321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1061              		.loc 1 1321 0
 1062 000e 0268     		ldr	r2, [r0]
 1063 0010 9368     		ldr	r3, [r2, #8]
 1064 0012 23F00103 		bic	r3, r3, #1
 1065 0016 9360     		str	r3, [r2, #8]
1324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1066              		.loc 1 1324 0
 1067 0018 0368     		ldr	r3, [r0]
 1068 001a 9A68     		ldr	r2, [r3, #8]
 1069 001c 12F0400F 		tst	r2, #64
 1070 0020 0AD0     		beq	.L70
1326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1071              		.loc 1 1326 0
 1072 0022 9A68     		ldr	r2, [r3, #8]
 1073 0024 22F04002 		bic	r2, r2, #64
 1074 0028 9A60     		str	r2, [r3, #8]
1329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1075              		.loc 1 1329 0
 1076 002a 436E     		ldr	r3, [r0, #100]
 1077 002c 23B1     		cbz	r3, .L70
1333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1078              		.loc 1 1333 0
 1079 002e 0022     		movs	r2, #0
 1080 0030 5A63     		str	r2, [r3, #52]
1335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1081              		.loc 1 1335 0
 1082 0032 406E     		ldr	r0, [r0, #100]
 1083              	.LVL86:
 1084 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 1085              	.LVL87:
 1086              	.L70:
1340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1087              		.loc 1 1340 0
 1088 0038 0020     		movs	r0, #0
 1089 003a A4F85A00 		strh	r0, [r4, #90]	@ movhi
1343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1090              		.loc 1 1343 0
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 65


 1091 003e 2368     		ldr	r3, [r4]
 1092 0040 0F22     		movs	r2, #15
 1093 0042 1A62     		str	r2, [r3, #32]
1346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1094              		.loc 1 1346 0
 1095 0044 2023     		movs	r3, #32
 1096 0046 84F86A30 		strb	r3, [r4, #106]
1349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1097              		.loc 1 1349 0
 1098 004a 10BD     		pop	{r4, pc}
 1099              		.cfi_endproc
 1100              	.LFE141:
 1102              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 1103              		.align	2
 1104              		.weak	HAL_UART_TxCpltCallback
 1105              		.thumb
 1106              		.thumb_func
 1108              	HAL_UART_TxCpltCallback:
 1109              	.LFB146:
1771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1110              		.loc 1 1771 0
 1111              		.cfi_startproc
 1112              		@ args = 0, pretend = 0, frame = 0
 1113              		@ frame_needed = 0, uses_anonymous_args = 0
 1114              		@ link register save eliminated.
 1115              	.LVL88:
 1116 0000 7047     		bx	lr
 1117              		.cfi_endproc
 1118              	.LFE146:
 1120 0002 00BF     		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 1121              		.align	2
 1122              		.thumb
 1123              		.thumb_func
 1125              	UART_DMATransmitCplt:
 1126              	.LFB168:
2388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
2393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
2394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1127              		.loc 1 2397 0
 1128              		.cfi_startproc
 1129              		@ args = 0, pretend = 0, frame = 0
 1130              		@ frame_needed = 0, uses_anonymous_args = 0
 1131              	.LVL89:
 1132              		.loc 1 2397 0
 1133 0000 08B5     		push	{r3, lr}
 1134              	.LCFI8:
 1135              		.cfi_def_cfa_offset 8
 1136              		.cfi_offset 3, -8
 1137              		.cfi_offset 14, -4
2398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 66


 1138              		.loc 1 2398 0
 1139 0002 436A     		ldr	r3, [r0, #36]
 1140              	.LVL90:
2399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
2400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Normal mode */
2401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ( HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC) )
 1141              		.loc 1 2401 0
 1142 0004 0268     		ldr	r2, [r0]
 1143 0006 1268     		ldr	r2, [r2]
 1144 0008 12F0200F 		tst	r2, #32
 1145 000c 0DD1     		bne	.L74
2402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = 0U;
 1146              		.loc 1 2403 0
 1147 000e 0022     		movs	r2, #0
 1148 0010 A3F85220 		strh	r2, [r3, #82]	@ movhi
2404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
2406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        in the UART CR3 register */
2407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1149              		.loc 1 2407 0
 1150 0014 1968     		ldr	r1, [r3]
 1151 0016 8A68     		ldr	r2, [r1, #8]
 1152 0018 22F08002 		bic	r2, r2, #128
 1153 001c 8A60     		str	r2, [r1, #8]
2408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
2410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 1154              		.loc 1 2410 0
 1155 001e 1A68     		ldr	r2, [r3]
 1156 0020 1368     		ldr	r3, [r2]
 1157              	.LVL91:
 1158 0022 43F04003 		orr	r3, r3, #64
 1159 0026 1360     		str	r3, [r2]
 1160 0028 08BD     		pop	{r3, pc}
 1161              	.LVL92:
 1162              	.L74:
2411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Circular mode */
2413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
2414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
 1163              		.loc 1 2415 0
 1164 002a 1846     		mov	r0, r3
 1165              	.LVL93:
 1166 002c FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1167              	.LVL94:
 1168 0030 08BD     		pop	{r3, pc}
 1169              		.cfi_endproc
 1170              	.LFE168:
 1172 0032 00BF     		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 1173              		.align	2
 1174              		.weak	HAL_UART_TxHalfCpltCallback
 1175              		.thumb
 1176              		.thumb_func
 1178              	HAL_UART_TxHalfCpltCallback:
 1179              	.LFB147:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 67


1786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1180              		.loc 1 1786 0
 1181              		.cfi_startproc
 1182              		@ args = 0, pretend = 0, frame = 0
 1183              		@ frame_needed = 0, uses_anonymous_args = 0
 1184              		@ link register save eliminated.
 1185              	.LVL95:
 1186 0000 7047     		bx	lr
 1187              		.cfi_endproc
 1188              	.LFE147:
 1190 0002 00BF     		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 1191              		.align	2
 1192              		.thumb
 1193              		.thumb_func
 1195              	UART_DMATxHalfCplt:
 1196              	.LFB169:
2416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
2422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
2423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
2426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1197              		.loc 1 2426 0
 1198              		.cfi_startproc
 1199              		@ args = 0, pretend = 0, frame = 0
 1200              		@ frame_needed = 0, uses_anonymous_args = 0
 1201              	.LVL96:
 1202              		.loc 1 2426 0
 1203 0000 08B5     		push	{r3, lr}
 1204              	.LCFI9:
 1205              		.cfi_def_cfa_offset 8
 1206              		.cfi_offset 3, -8
 1207              		.cfi_offset 14, -4
 1208              	.LVL97:
2427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
2428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
 1209              		.loc 1 2429 0
 1210 0002 406A     		ldr	r0, [r0, #36]
 1211              	.LVL98:
 1212 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 1213              	.LVL99:
 1214 0008 08BD     		pop	{r3, pc}
 1215              		.cfi_endproc
 1216              	.LFE169:
 1218 000a 00BF     		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1219              		.align	2
 1220              		.weak	HAL_UART_RxCpltCallback
 1221              		.thumb
 1222              		.thumb_func
 1224              	HAL_UART_RxCpltCallback:
 1225              	.LFB148:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 68


1801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1226              		.loc 1 1801 0
 1227              		.cfi_startproc
 1228              		@ args = 0, pretend = 0, frame = 0
 1229              		@ frame_needed = 0, uses_anonymous_args = 0
 1230              		@ link register save eliminated.
 1231              	.LVL100:
 1232 0000 7047     		bx	lr
 1233              		.cfi_endproc
 1234              	.LFE148:
 1236 0002 00BF     		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 1237              		.align	2
 1238              		.thumb
 1239              		.thumb_func
 1241              	UART_DMAReceiveCplt:
 1242              	.LFB170:
2430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
2434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
2435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1243              		.loc 1 2438 0
 1244              		.cfi_startproc
 1245              		@ args = 0, pretend = 0, frame = 0
 1246              		@ frame_needed = 0, uses_anonymous_args = 0
 1247              	.LVL101:
 1248              		.loc 1 2438 0
 1249 0000 08B5     		push	{r3, lr}
 1250              	.LCFI10:
 1251              		.cfi_def_cfa_offset 8
 1252              		.cfi_offset 3, -8
 1253              		.cfi_offset 14, -4
2439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1254              		.loc 1 2439 0
 1255 0002 436A     		ldr	r3, [r0, #36]
 1256              	.LVL102:
2440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Normal mode */
2442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ( HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC) )
 1257              		.loc 1 2442 0
 1258 0004 0268     		ldr	r2, [r0]
 1259 0006 1268     		ldr	r2, [r2]
 1260 0008 12F0200F 		tst	r2, #32
 1261 000c 14D1     		bne	.L82
2443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U;
 1262              		.loc 1 2444 0
 1263 000e 0022     		movs	r2, #0
 1264 0010 A3F85A20 		strh	r2, [r3, #90]	@ movhi
2445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
2447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 1265              		.loc 1 2447 0
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 69


 1266 0014 1968     		ldr	r1, [r3]
 1267 0016 0A68     		ldr	r2, [r1]
 1268 0018 22F48072 		bic	r2, r2, #256
 1269 001c 0A60     		str	r2, [r1]
2448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1270              		.loc 1 2448 0
 1271 001e 1968     		ldr	r1, [r3]
 1272 0020 8A68     		ldr	r2, [r1, #8]
 1273 0022 22F00102 		bic	r2, r2, #1
 1274 0026 8A60     		str	r2, [r1, #8]
2449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
2451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        in the UART CR3 register */
2452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 1275              		.loc 1 2452 0
 1276 0028 1968     		ldr	r1, [r3]
 1277 002a 8A68     		ldr	r2, [r1, #8]
 1278 002c 22F04002 		bic	r2, r2, #64
 1279 0030 8A60     		str	r2, [r1, #8]
2453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
2455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1280              		.loc 1 2455 0
 1281 0032 2022     		movs	r2, #32
 1282 0034 83F86A20 		strb	r2, [r3, #106]
 1283              	.L82:
2456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
 1284              		.loc 1 2458 0
 1285 0038 1846     		mov	r0, r3
 1286              	.LVL103:
 1287 003a FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 1288              	.LVL104:
 1289 003e 08BD     		pop	{r3, pc}
 1290              		.cfi_endproc
 1291              	.LFE170:
 1293              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 1294              		.align	2
 1295              		.weak	HAL_UART_RxHalfCpltCallback
 1296              		.thumb
 1297              		.thumb_func
 1299              	HAL_UART_RxHalfCpltCallback:
 1300              	.LFB149:
1816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1301              		.loc 1 1816 0
 1302              		.cfi_startproc
 1303              		@ args = 0, pretend = 0, frame = 0
 1304              		@ frame_needed = 0, uses_anonymous_args = 0
 1305              		@ link register save eliminated.
 1306              	.LVL105:
 1307 0000 7047     		bx	lr
 1308              		.cfi_endproc
 1309              	.LFE149:
 1311 0002 00BF     		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 1312              		.align	2
 1313              		.thumb
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 70


 1314              		.thumb_func
 1316              	UART_DMARxHalfCplt:
 1317              	.LFB171:
2459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
2463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
2464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
2467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1318              		.loc 1 2467 0
 1319              		.cfi_startproc
 1320              		@ args = 0, pretend = 0, frame = 0
 1321              		@ frame_needed = 0, uses_anonymous_args = 0
 1322              	.LVL106:
 1323              		.loc 1 2467 0
 1324 0000 08B5     		push	{r3, lr}
 1325              	.LCFI11:
 1326              		.cfi_def_cfa_offset 8
 1327              		.cfi_offset 3, -8
 1328              		.cfi_offset 14, -4
 1329              	.LVL107:
2468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
2469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
 1330              		.loc 1 2470 0
 1331 0002 406A     		ldr	r0, [r0, #36]
 1332              	.LVL108:
 1333 0004 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 1334              	.LVL109:
 1335 0008 08BD     		pop	{r3, pc}
 1336              		.cfi_endproc
 1337              	.LFE171:
 1339 000a 00BF     		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 1340              		.align	2
 1341              		.weak	HAL_UART_ErrorCallback
 1342              		.thumb
 1343              		.thumb_func
 1345              	HAL_UART_ErrorCallback:
 1346              	.LFB150:
1831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1347              		.loc 1 1831 0
 1348              		.cfi_startproc
 1349              		@ args = 0, pretend = 0, frame = 0
 1350              		@ frame_needed = 0, uses_anonymous_args = 0
 1351              		@ link register save eliminated.
 1352              	.LVL110:
 1353 0000 7047     		bx	lr
 1354              		.cfi_endproc
 1355              	.LFE150:
 1357 0002 00BF     		.section	.text.UART_DMAError,"ax",%progbits
 1358              		.align	2
 1359              		.thumb
 1360              		.thumb_func
 1362              	UART_DMAError:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 71


 1363              	.LFB172:
2471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART communication error callback.
2475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
2476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
2479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1364              		.loc 1 2479 0
 1365              		.cfi_startproc
 1366              		@ args = 0, pretend = 0, frame = 0
 1367              		@ frame_needed = 0, uses_anonymous_args = 0
 1368              	.LVL111:
 1369              		.loc 1 2479 0
 1370 0000 10B5     		push	{r4, lr}
 1371              	.LCFI12:
 1372              		.cfi_def_cfa_offset 8
 1373              		.cfi_offset 4, -8
 1374              		.cfi_offset 14, -4
2480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1375              		.loc 1 2480 0
 1376 0002 446A     		ldr	r4, [r0, #36]
 1377              	.LVL112:
2481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
2483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (  (huart->gState == HAL_UART_STATE_BUSY_TX)
 1378              		.loc 1 2483 0
 1379 0004 94F86930 		ldrb	r3, [r4, #105]	@ zero_extendqisi2
 1380 0008 DBB2     		uxtb	r3, r3
 1381 000a 212B     		cmp	r3, #33
 1382 000c 0AD1     		bne	.L89
2484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) )
 1383              		.loc 1 2484 0
 1384 000e 2368     		ldr	r3, [r4]
 1385 0010 9B68     		ldr	r3, [r3, #8]
 1386 0012 13F0800F 		tst	r3, #128
 1387 0016 05D0     		beq	.L89
2485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = 0U;
 1388              		.loc 1 2486 0
 1389 0018 0023     		movs	r3, #0
 1390 001a A4F85230 		strh	r3, [r4, #82]	@ movhi
2487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 1391              		.loc 1 2487 0
 1392 001e 2046     		mov	r0, r4
 1393              	.LVL113:
 1394 0020 FFF7FEFF 		bl	UART_EndTxTransfer
 1395              	.LVL114:
 1396              	.L89:
2488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
2491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (  (huart->RxState == HAL_UART_STATE_BUSY_RX)
 1397              		.loc 1 2491 0
 1398 0024 94F86A30 		ldrb	r3, [r4, #106]	@ zero_extendqisi2
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 72


 1399 0028 DBB2     		uxtb	r3, r3
 1400 002a 222B     		cmp	r3, #34
 1401 002c 0AD1     		bne	.L90
2492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) )
 1402              		.loc 1 2492 0
 1403 002e 2368     		ldr	r3, [r4]
 1404 0030 9B68     		ldr	r3, [r3, #8]
 1405 0032 13F0400F 		tst	r3, #64
 1406 0036 05D0     		beq	.L90
2493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U;
 1407              		.loc 1 2494 0
 1408 0038 0023     		movs	r3, #0
 1409 003a A4F85A30 		strh	r3, [r4, #90]	@ movhi
2495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 1410              		.loc 1 2495 0
 1411 003e 2046     		mov	r0, r4
 1412 0040 FFF7FEFF 		bl	UART_EndRxTransfer
 1413              	.LVL115:
 1414              	.L90:
2496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
 1415              		.loc 1 2498 0
 1416 0044 E36E     		ldr	r3, [r4, #108]
 1417 0046 43F01003 		orr	r3, r3, #16
 1418 004a E366     		str	r3, [r4, #108]
2499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 1419              		.loc 1 2499 0
 1420 004c 2046     		mov	r0, r4
 1421 004e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 1422              	.LVL116:
 1423 0052 10BD     		pop	{r4, pc}
 1424              		.cfi_endproc
 1425              	.LFE172:
 1427              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 1428              		.align	2
 1429              		.thumb
 1430              		.thumb_func
 1432              	UART_DMAAbortOnError:
 1433              	.LFB173:
2500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
2504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
2505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
2506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1434              		.loc 1 2509 0
 1435              		.cfi_startproc
 1436              		@ args = 0, pretend = 0, frame = 0
 1437              		@ frame_needed = 0, uses_anonymous_args = 0
 1438              	.LVL117:
 1439 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 73


 1440              	.LCFI13:
 1441              		.cfi_def_cfa_offset 8
 1442              		.cfi_offset 3, -8
 1443              		.cfi_offset 14, -4
2510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1444              		.loc 1 2510 0
 1445 0002 406A     		ldr	r0, [r0, #36]
 1446              	.LVL118:
2511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1447              		.loc 1 2511 0
 1448 0004 0023     		movs	r3, #0
 1449 0006 A0F85A30 		strh	r3, [r0, #90]	@ movhi
2512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
 1450              		.loc 1 2512 0
 1451 000a A0F85230 		strh	r3, [r0, #82]	@ movhi
2513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 1452              		.loc 1 2514 0
 1453 000e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 1454              	.LVL119:
 1455 0012 08BD     		pop	{r3, pc}
 1456              		.cfi_endproc
 1457              	.LFE173:
 1459              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 1460              		.align	2
 1461              		.weak	HAL_UART_AbortCpltCallback
 1462              		.thumb
 1463              		.thumb_func
 1465              	HAL_UART_AbortCpltCallback:
 1466              	.LFB151:
1846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1467              		.loc 1 1846 0
 1468              		.cfi_startproc
 1469              		@ args = 0, pretend = 0, frame = 0
 1470              		@ frame_needed = 0, uses_anonymous_args = 0
 1471              		@ link register save eliminated.
 1472              	.LVL120:
 1473 0000 7047     		bx	lr
 1474              		.cfi_endproc
 1475              	.LFE151:
 1477 0002 00BF     		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 1478              		.align	2
 1479              		.global	HAL_UART_Abort_IT
 1480              		.thumb
 1481              		.thumb_func
 1483              	HAL_UART_Abort_IT:
 1484              	.LFB142:
1366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 1485              		.loc 1 1366 0
 1486              		.cfi_startproc
 1487              		@ args = 0, pretend = 0, frame = 0
 1488              		@ frame_needed = 0, uses_anonymous_args = 0
 1489              	.LVL121:
1366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 1490              		.loc 1 1366 0
 1491 0000 10B5     		push	{r4, lr}
 1492              	.LCFI14:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 74


 1493              		.cfi_def_cfa_offset 8
 1494              		.cfi_offset 4, -8
 1495              		.cfi_offset 14, -4
 1496 0002 0446     		mov	r4, r0
 1497              	.LVL122:
1370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1498              		.loc 1 1370 0
 1499 0004 0268     		ldr	r2, [r0]
 1500 0006 1368     		ldr	r3, [r2]
 1501 0008 23F4F073 		bic	r3, r3, #480
 1502 000c 1360     		str	r3, [r2]
1371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1503              		.loc 1 1371 0
 1504 000e 0268     		ldr	r2, [r0]
 1505 0010 9368     		ldr	r3, [r2, #8]
 1506 0012 23F00103 		bic	r3, r3, #1
 1507 0016 9360     		str	r3, [r2, #8]
1376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1508              		.loc 1 1376 0
 1509 0018 036E     		ldr	r3, [r0, #96]
 1510 001a 4BB1     		cbz	r3, .L96
1380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1511              		.loc 1 1380 0
 1512 001c 0268     		ldr	r2, [r0]
 1513 001e 9268     		ldr	r2, [r2, #8]
 1514 0020 12F0800F 		tst	r2, #128
 1515 0024 02D0     		beq	.L97
1382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1516              		.loc 1 1382 0
 1517 0026 284A     		ldr	r2, .L108
 1518 0028 5A63     		str	r2, [r3, #52]
 1519 002a 01E0     		b	.L96
 1520              	.L97:
1386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1521              		.loc 1 1386 0
 1522 002c 0022     		movs	r2, #0
 1523 002e 5A63     		str	r2, [r3, #52]
 1524              	.L96:
1390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1525              		.loc 1 1390 0
 1526 0030 636E     		ldr	r3, [r4, #100]
 1527 0032 4BB1     		cbz	r3, .L98
1394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1528              		.loc 1 1394 0
 1529 0034 2268     		ldr	r2, [r4]
 1530 0036 9268     		ldr	r2, [r2, #8]
 1531 0038 12F0400F 		tst	r2, #64
 1532 003c 02D0     		beq	.L99
1396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1533              		.loc 1 1396 0
 1534 003e 234A     		ldr	r2, .L108+4
 1535 0040 5A63     		str	r2, [r3, #52]
 1536 0042 01E0     		b	.L98
 1537              	.L99:
1400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1538              		.loc 1 1400 0
 1539 0044 0022     		movs	r2, #0
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 75


 1540 0046 5A63     		str	r2, [r3, #52]
 1541              	.L98:
1405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1542              		.loc 1 1405 0
 1543 0048 2368     		ldr	r3, [r4]
 1544 004a 9A68     		ldr	r2, [r3, #8]
 1545 004c 12F0800F 		tst	r2, #128
 1546 0050 0DD0     		beq	.L103
1408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1547              		.loc 1 1408 0
 1548 0052 9A68     		ldr	r2, [r3, #8]
 1549 0054 22F08002 		bic	r2, r2, #128
 1550 0058 9A60     		str	r2, [r3, #8]
1411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1551              		.loc 1 1411 0
 1552 005a 206E     		ldr	r0, [r4, #96]
 1553              	.LVL123:
 1554 005c 48B1     		cbz	r0, .L104
1417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 1555              		.loc 1 1417 0
 1556 005e FFF7FEFF 		bl	HAL_DMA_Abort_IT
 1557              	.LVL124:
 1558 0062 40B1     		cbz	r0, .L105
1419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 1559              		.loc 1 1419 0
 1560 0064 236E     		ldr	r3, [r4, #96]
 1561 0066 0022     		movs	r2, #0
 1562 0068 5A63     		str	r2, [r3, #52]
1367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 1563              		.loc 1 1367 0
 1564 006a 0122     		movs	r2, #1
 1565 006c 04E0     		b	.L100
 1566              	.LVL125:
 1567              	.L103:
 1568 006e 0122     		movs	r2, #1
 1569 0070 02E0     		b	.L100
 1570              	.LVL126:
 1571              	.L104:
 1572 0072 0122     		movs	r2, #1
 1573 0074 00E0     		b	.L100
 1574              	.L105:
1423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 1575              		.loc 1 1423 0
 1576 0076 0022     		movs	r2, #0
 1577              	.L100:
 1578              	.LVL127:
1429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1579              		.loc 1 1429 0
 1580 0078 2368     		ldr	r3, [r4]
 1581 007a 9968     		ldr	r1, [r3, #8]
 1582 007c 11F0400F 		tst	r1, #64
 1583 0080 0ED0     		beq	.L101
1431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1584              		.loc 1 1431 0
 1585 0082 9968     		ldr	r1, [r3, #8]
 1586 0084 21F04001 		bic	r1, r1, #64
 1587 0088 9960     		str	r1, [r3, #8]
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 76


1434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1588              		.loc 1 1434 0
 1589 008a 606E     		ldr	r0, [r4, #100]
 1590 008c 40B1     		cbz	r0, .L101
1440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 1591              		.loc 1 1440 0
 1592 008e FFF7FEFF 		bl	HAL_DMA_Abort_IT
 1593              	.LVL128:
 1594 0092 20B1     		cbz	r0, .L106
1442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         abortcplt = 1U;
 1595              		.loc 1 1442 0
 1596 0094 636E     		ldr	r3, [r4, #100]
 1597 0096 0022     		movs	r2, #0
 1598 0098 5A63     		str	r2, [r3, #52]
 1599              	.LVL129:
1443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 1600              		.loc 1 1443 0
 1601 009a 0122     		movs	r2, #1
 1602 009c 00E0     		b	.L101
 1603              	.LVL130:
 1604              	.L106:
1447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 1605              		.loc 1 1447 0
 1606 009e 0022     		movs	r2, #0
 1607              	.L101:
 1608              	.LVL131:
1453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1609              		.loc 1 1453 0
 1610 00a0 82B1     		cbz	r2, .L102
1456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U;
 1611              		.loc 1 1456 0
 1612 00a2 0023     		movs	r3, #0
 1613 00a4 A4F85230 		strh	r3, [r4, #82]	@ movhi
1457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1614              		.loc 1 1457 0
 1615 00a8 A4F85A30 		strh	r3, [r4, #90]	@ movhi
1460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1616              		.loc 1 1460 0
 1617 00ac E366     		str	r3, [r4, #108]
1463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1618              		.loc 1 1463 0
 1619 00ae 2368     		ldr	r3, [r4]
 1620 00b0 0F22     		movs	r2, #15
 1621              	.LVL132:
 1622 00b2 1A62     		str	r2, [r3, #32]
1466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1623              		.loc 1 1466 0
 1624 00b4 2023     		movs	r3, #32
 1625 00b6 84F86930 		strb	r3, [r4, #105]
1467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1626              		.loc 1 1467 0
 1627 00ba 84F86A30 		strb	r3, [r4, #106]
1470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 1628              		.loc 1 1470 0
 1629 00be 2046     		mov	r0, r4
 1630 00c0 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 1631              	.LVL133:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 77


 1632              	.L102:
1474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1633              		.loc 1 1474 0
 1634 00c4 0020     		movs	r0, #0
 1635 00c6 10BD     		pop	{r4, pc}
 1636              	.LVL134:
 1637              	.L109:
 1638              		.align	2
 1639              	.L108:
 1640 00c8 00000000 		.word	UART_DMATxAbortCallback
 1641 00cc 00000000 		.word	UART_DMARxAbortCallback
 1642              		.cfi_endproc
 1643              	.LFE142:
 1645              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 1646              		.align	2
 1647              		.thumb
 1648              		.thumb_func
 1650              	UART_DMARxAbortCallback:
 1651              	.LFB175:
2515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
2519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
2520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
2522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
2523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
2528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
2529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
2530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->hdmarx != NULL)
2533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmarx->XferAbortCallback != NULL)
2535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return;
2537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
2540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
2542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
2543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset errorCode */
2545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
2549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 78


2553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call user Abort complete callback */
2555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
2556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
2561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
2562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
2564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
2565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
2568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1652              		.loc 1 2568 0
 1653              		.cfi_startproc
 1654              		@ args = 0, pretend = 0, frame = 0
 1655              		@ frame_needed = 0, uses_anonymous_args = 0
 1656              	.LVL135:
 1657 0000 08B5     		push	{r3, lr}
 1658              	.LCFI15:
 1659              		.cfi_def_cfa_offset 8
 1660              		.cfi_offset 3, -8
 1661              		.cfi_offset 14, -4
2569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
 1662              		.loc 1 2569 0
 1663 0002 406A     		ldr	r0, [r0, #36]
 1664              	.LVL136:
2570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
2571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
 1665              		.loc 1 2571 0
 1666 0004 436E     		ldr	r3, [r0, #100]
 1667 0006 0022     		movs	r2, #0
 1668 0008 5A63     		str	r2, [r3, #52]
2572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->hdmatx != NULL)
 1669              		.loc 1 2574 0
 1670 000a 036E     		ldr	r3, [r0, #96]
 1671 000c 0BB1     		cbz	r3, .L111
2575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmatx->XferAbortCallback != NULL)
 1672              		.loc 1 2576 0
 1673 000e 5B6B     		ldr	r3, [r3, #52]
 1674 0010 7BB9     		cbnz	r3, .L110
 1675              	.L111:
2577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return;
2579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
2582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
 1676              		.loc 1 2583 0
 1677 0012 0023     		movs	r3, #0
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 79


 1678 0014 A0F85230 		strh	r3, [r0, #82]	@ movhi
2584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1679              		.loc 1 2584 0
 1680 0018 A0F85A30 		strh	r3, [r0, #90]	@ movhi
2585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset errorCode */
2587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 1681              		.loc 1 2587 0
 1682 001c C366     		str	r3, [r0, #108]
2588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 1683              		.loc 1 2590 0
 1684 001e 0368     		ldr	r3, [r0]
 1685 0020 0F22     		movs	r2, #15
 1686 0022 1A62     		str	r2, [r3, #32]
2591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 1687              		.loc 1 2593 0
 1688 0024 2023     		movs	r3, #32
 1689 0026 80F86930 		strb	r3, [r0, #105]
2594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 1690              		.loc 1 2594 0
 1691 002a 80F86A30 		strb	r3, [r0, #106]
2595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call user Abort complete callback */
2597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 1692              		.loc 1 2597 0
 1693 002e FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 1694              	.LVL137:
 1695              	.L110:
 1696 0032 08BD     		pop	{r3, pc}
 1697              		.cfi_endproc
 1698              	.LFE175:
 1700              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 1701              		.align	2
 1702              		.thumb
 1703              		.thumb_func
 1705              	UART_DMATxAbortCallback:
 1706              	.LFB174:
2526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
 1707              		.loc 1 2526 0
 1708              		.cfi_startproc
 1709              		@ args = 0, pretend = 0, frame = 0
 1710              		@ frame_needed = 0, uses_anonymous_args = 0
 1711              	.LVL138:
 1712 0000 08B5     		push	{r3, lr}
 1713              	.LCFI16:
 1714              		.cfi_def_cfa_offset 8
 1715              		.cfi_offset 3, -8
 1716              		.cfi_offset 14, -4
2527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 1717              		.loc 1 2527 0
 1718 0002 406A     		ldr	r0, [r0, #36]
 1719              	.LVL139:
2529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 80


 1720              		.loc 1 2529 0
 1721 0004 036E     		ldr	r3, [r0, #96]
 1722 0006 0022     		movs	r2, #0
 1723 0008 5A63     		str	r2, [r3, #52]
2532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1724              		.loc 1 2532 0
 1725 000a 436E     		ldr	r3, [r0, #100]
 1726 000c 0BB1     		cbz	r3, .L115
2534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1727              		.loc 1 2534 0
 1728 000e 5B6B     		ldr	r3, [r3, #52]
 1729 0010 7BB9     		cbnz	r3, .L114
 1730              	.L115:
2541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1731              		.loc 1 2541 0
 1732 0012 0023     		movs	r3, #0
 1733 0014 A0F85230 		strh	r3, [r0, #82]	@ movhi
2542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1734              		.loc 1 2542 0
 1735 0018 A0F85A30 		strh	r3, [r0, #90]	@ movhi
2545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1736              		.loc 1 2545 0
 1737 001c C366     		str	r3, [r0, #108]
2548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1738              		.loc 1 2548 0
 1739 001e 0368     		ldr	r3, [r0]
 1740 0020 0F22     		movs	r2, #15
 1741 0022 1A62     		str	r2, [r3, #32]
2551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 1742              		.loc 1 2551 0
 1743 0024 2023     		movs	r3, #32
 1744 0026 80F86930 		strb	r3, [r0, #105]
2552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1745              		.loc 1 2552 0
 1746 002a 80F86A30 		strb	r3, [r0, #106]
2555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 1747              		.loc 1 2555 0
 1748 002e FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 1749              	.LVL140:
 1750              	.L114:
 1751 0032 08BD     		pop	{r3, pc}
 1752              		.cfi_endproc
 1753              	.LFE174:
 1755              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 1756              		.align	2
 1757              		.weak	HAL_UART_AbortTransmitCpltCallback
 1758              		.thumb
 1759              		.thumb_func
 1761              	HAL_UART_AbortTransmitCpltCallback:
 1762              	.LFB152:
1861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1763              		.loc 1 1861 0
 1764              		.cfi_startproc
 1765              		@ args = 0, pretend = 0, frame = 0
 1766              		@ frame_needed = 0, uses_anonymous_args = 0
 1767              		@ link register save eliminated.
 1768              	.LVL141:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 81


 1769 0000 7047     		bx	lr
 1770              		.cfi_endproc
 1771              	.LFE152:
 1773 0002 00BF     		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 1774              		.align	2
 1775              		.global	HAL_UART_AbortTransmit_IT
 1776              		.thumb
 1777              		.thumb_func
 1779              	HAL_UART_AbortTransmit_IT:
 1780              	.LFB143:
1491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 1781              		.loc 1 1491 0
 1782              		.cfi_startproc
 1783              		@ args = 0, pretend = 0, frame = 0
 1784              		@ frame_needed = 0, uses_anonymous_args = 0
 1785              	.LVL142:
1491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 1786              		.loc 1 1491 0
 1787 0000 10B5     		push	{r4, lr}
 1788              	.LCFI17:
 1789              		.cfi_def_cfa_offset 8
 1790              		.cfi_offset 4, -8
 1791              		.cfi_offset 14, -4
 1792 0002 0446     		mov	r4, r0
1493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1793              		.loc 1 1493 0
 1794 0004 0268     		ldr	r2, [r0]
 1795 0006 1368     		ldr	r3, [r2]
 1796 0008 23F0C003 		bic	r3, r3, #192
 1797 000c 1360     		str	r3, [r2]
1496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1798              		.loc 1 1496 0
 1799 000e 0368     		ldr	r3, [r0]
 1800 0010 9A68     		ldr	r2, [r3, #8]
 1801 0012 12F0800F 		tst	r2, #128
 1802 0016 18D0     		beq	.L120
1498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1803              		.loc 1 1498 0
 1804 0018 9A68     		ldr	r2, [r3, #8]
 1805 001a 22F08002 		bic	r2, r2, #128
 1806 001e 9A60     		str	r2, [r3, #8]
1501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1807              		.loc 1 1501 0
 1808 0020 036E     		ldr	r3, [r0, #96]
 1809 0022 4BB1     		cbz	r3, .L121
1505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1810              		.loc 1 1505 0
 1811 0024 0E4A     		ldr	r2, .L124
 1812 0026 5A63     		str	r2, [r3, #52]
1508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 1813              		.loc 1 1508 0
 1814 0028 006E     		ldr	r0, [r0, #96]
 1815              	.LVL143:
 1816 002a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 1817              	.LVL144:
 1818 002e A0B1     		cbz	r0, .L122
1511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 82


 1819              		.loc 1 1511 0
 1820 0030 206E     		ldr	r0, [r4, #96]
 1821 0032 436B     		ldr	r3, [r0, #52]
 1822 0034 9847     		blx	r3
 1823              	.LVL145:
 1824 0036 10E0     		b	.L122
 1825              	.LVL146:
 1826              	.L121:
1517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1827              		.loc 1 1517 0
 1828 0038 0023     		movs	r3, #0
 1829 003a A0F85230 		strh	r3, [r0, #82]	@ movhi
1520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1830              		.loc 1 1520 0
 1831 003e 2023     		movs	r3, #32
 1832 0040 80F86930 		strb	r3, [r0, #105]
1523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1833              		.loc 1 1523 0
 1834 0044 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 1835              	.LVL147:
 1836 0048 07E0     		b	.L122
 1837              	.LVL148:
 1838              	.L120:
1529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1839              		.loc 1 1529 0
 1840 004a 0023     		movs	r3, #0
 1841 004c A0F85230 		strh	r3, [r0, #82]	@ movhi
1532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1842              		.loc 1 1532 0
 1843 0050 2023     		movs	r3, #32
 1844 0052 80F86930 		strb	r3, [r0, #105]
1535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 1845              		.loc 1 1535 0
 1846 0056 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 1847              	.LVL149:
 1848              	.L122:
1539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1849              		.loc 1 1539 0
 1850 005a 0020     		movs	r0, #0
 1851 005c 10BD     		pop	{r4, pc}
 1852              	.LVL150:
 1853              	.L125:
 1854 005e 00BF     		.align	2
 1855              	.L124:
 1856 0060 00000000 		.word	UART_DMATxOnlyAbortCallback
 1857              		.cfi_endproc
 1858              	.LFE143:
 1860              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 1861              		.align	2
 1862              		.thumb
 1863              		.thumb_func
 1865              	UART_DMATxOnlyAbortCallback:
 1866              	.LFB176:
2598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 83


2602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
2603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
2604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
2605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
2606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
2607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1867              		.loc 1 2610 0
 1868              		.cfi_startproc
 1869              		@ args = 0, pretend = 0, frame = 0
 1870              		@ frame_needed = 0, uses_anonymous_args = 0
 1871              	.LVL151:
 1872 0000 08B5     		push	{r3, lr}
 1873              	.LCFI18:
 1874              		.cfi_def_cfa_offset 8
 1875              		.cfi_offset 3, -8
 1876              		.cfi_offset 14, -4
2611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1877              		.loc 1 2611 0
 1878 0002 406A     		ldr	r0, [r0, #36]
 1879              	.LVL152:
2612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
 1880              		.loc 1 2613 0
 1881 0004 0023     		movs	r3, #0
 1882 0006 A0F85230 		strh	r3, [r0, #82]	@ movhi
2614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState to Ready */
2616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 1883              		.loc 1 2616 0
 1884 000a 2023     		movs	r3, #32
 1885 000c 80F86930 		strb	r3, [r0, #105]
2617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call user Abort complete callback */
2619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
 1886              		.loc 1 2619 0
 1887 0010 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 1888              	.LVL153:
 1889 0014 08BD     		pop	{r3, pc}
 1890              		.cfi_endproc
 1891              	.LFE176:
 1893 0016 00BF     		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 1894              		.align	2
 1895              		.weak	HAL_UART_AbortReceiveCpltCallback
 1896              		.thumb
 1897              		.thumb_func
 1899              	HAL_UART_AbortReceiveCpltCallback:
 1900              	.LFB153:
1876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1901              		.loc 1 1876 0
 1902              		.cfi_startproc
 1903              		@ args = 0, pretend = 0, frame = 0
 1904              		@ frame_needed = 0, uses_anonymous_args = 0
 1905              		@ link register save eliminated.
 1906              	.LVL154:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 84


 1907 0000 7047     		bx	lr
 1908              		.cfi_endproc
 1909              	.LFE153:
 1911 0002 00BF     		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 1912              		.align	2
 1913              		.global	HAL_UART_AbortReceive_IT
 1914              		.thumb
 1915              		.thumb_func
 1917              	HAL_UART_AbortReceive_IT:
 1918              	.LFB144:
1556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 1919              		.loc 1 1556 0
 1920              		.cfi_startproc
 1921              		@ args = 0, pretend = 0, frame = 0
 1922              		@ frame_needed = 0, uses_anonymous_args = 0
 1923              	.LVL155:
1556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 1924              		.loc 1 1556 0
 1925 0000 10B5     		push	{r4, lr}
 1926              	.LCFI19:
 1927              		.cfi_def_cfa_offset 8
 1928              		.cfi_offset 4, -8
 1929              		.cfi_offset 14, -4
 1930 0002 0446     		mov	r4, r0
1558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1931              		.loc 1 1558 0
 1932 0004 0268     		ldr	r2, [r0]
 1933 0006 1368     		ldr	r3, [r2]
 1934 0008 23F49073 		bic	r3, r3, #288
 1935 000c 1360     		str	r3, [r2]
1559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1936              		.loc 1 1559 0
 1937 000e 0268     		ldr	r2, [r0]
 1938 0010 9368     		ldr	r3, [r2, #8]
 1939 0012 23F00103 		bic	r3, r3, #1
 1940 0016 9360     		str	r3, [r2, #8]
1562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1941              		.loc 1 1562 0
 1942 0018 0368     		ldr	r3, [r0]
 1943 001a 9A68     		ldr	r2, [r3, #8]
 1944 001c 12F0400F 		tst	r2, #64
 1945 0020 1BD0     		beq	.L130
1564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1946              		.loc 1 1564 0
 1947 0022 9A68     		ldr	r2, [r3, #8]
 1948 0024 22F04002 		bic	r2, r2, #64
 1949 0028 9A60     		str	r2, [r3, #8]
1567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1950              		.loc 1 1567 0
 1951 002a 436E     		ldr	r3, [r0, #100]
 1952 002c 4BB1     		cbz	r3, .L131
1571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1953              		.loc 1 1571 0
 1954 002e 114A     		ldr	r2, .L134
 1955 0030 5A63     		str	r2, [r3, #52]
1574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 1956              		.loc 1 1574 0
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 85


 1957 0032 406E     		ldr	r0, [r0, #100]
 1958              	.LVL156:
 1959 0034 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 1960              	.LVL157:
 1961 0038 C8B1     		cbz	r0, .L132
1577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 1962              		.loc 1 1577 0
 1963 003a 606E     		ldr	r0, [r4, #100]
 1964 003c 436B     		ldr	r3, [r0, #52]
 1965 003e 9847     		blx	r3
 1966              	.LVL158:
 1967 0040 15E0     		b	.L132
 1968              	.LVL159:
 1969              	.L131:
1583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1970              		.loc 1 1583 0
 1971 0042 0023     		movs	r3, #0
 1972 0044 A0F85A30 		strh	r3, [r0, #90]	@ movhi
1586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1973              		.loc 1 1586 0
 1974 0048 0368     		ldr	r3, [r0]
 1975 004a 0F22     		movs	r2, #15
 1976 004c 1A62     		str	r2, [r3, #32]
1589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1977              		.loc 1 1589 0
 1978 004e 2023     		movs	r3, #32
 1979 0050 80F86A30 		strb	r3, [r0, #106]
1592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1980              		.loc 1 1592 0
 1981 0054 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 1982              	.LVL160:
 1983 0058 09E0     		b	.L132
 1984              	.LVL161:
 1985              	.L130:
1598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1986              		.loc 1 1598 0
 1987 005a 0022     		movs	r2, #0
 1988 005c A0F85A20 		strh	r2, [r0, #90]	@ movhi
1601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1989              		.loc 1 1601 0
 1990 0060 0F22     		movs	r2, #15
 1991 0062 1A62     		str	r2, [r3, #32]
1604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1992              		.loc 1 1604 0
 1993 0064 2023     		movs	r3, #32
 1994 0066 80F86A30 		strb	r3, [r0, #106]
1607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 1995              		.loc 1 1607 0
 1996 006a FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 1997              	.LVL162:
 1998              	.L132:
1611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1999              		.loc 1 1611 0
 2000 006e 0020     		movs	r0, #0
 2001 0070 10BD     		pop	{r4, pc}
 2002              	.LVL163:
 2003              	.L135:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 86


 2004 0072 00BF     		.align	2
 2005              	.L134:
 2006 0074 00000000 		.word	UART_DMARxOnlyAbortCallback
 2007              		.cfi_endproc
 2008              	.LFE144:
 2010              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 2011              		.align	2
 2012              		.thumb
 2013              		.thumb_func
 2015              	UART_DMARxOnlyAbortCallback:
 2016              	.LFB177:
2620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
2624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
2625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
2626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
2627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
2628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 2017              		.loc 1 2631 0
 2018              		.cfi_startproc
 2019              		@ args = 0, pretend = 0, frame = 0
 2020              		@ frame_needed = 0, uses_anonymous_args = 0
 2021              	.LVL164:
 2022 0000 08B5     		push	{r3, lr}
 2023              	.LCFI20:
 2024              		.cfi_def_cfa_offset 8
 2025              		.cfi_offset 3, -8
 2026              		.cfi_offset 14, -4
2632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2027              		.loc 1 2632 0
 2028 0002 406A     		ldr	r0, [r0, #36]
 2029              	.LVL165:
2633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2030              		.loc 1 2634 0
 2031 0004 0023     		movs	r3, #0
 2032 0006 A0F85A30 		strh	r3, [r0, #90]	@ movhi
2635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 2033              		.loc 1 2637 0
 2034 000a 0368     		ldr	r3, [r0]
 2035 000c 0F22     		movs	r2, #15
 2036 000e 1A62     		str	r2, [r3, #32]
2638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
2640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2037              		.loc 1 2640 0
 2038 0010 2023     		movs	r3, #32
 2039 0012 80F86A30 		strb	r3, [r0, #106]
2641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call user Abort complete callback */
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 87


2643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
 2040              		.loc 1 2643 0
 2041 0016 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2042              	.LVL166:
 2043 001a 08BD     		pop	{r3, pc}
 2044              		.cfi_endproc
 2045              	.LFE177:
 2047              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 2048              		.align	2
 2049              		.global	HAL_MultiProcessor_EnterMuteMode
 2050              		.thumb
 2051              		.thumb_func
 2053              	HAL_MultiProcessor_EnterMuteMode:
 2054              	.LFB156:
1957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 2055              		.loc 1 1957 0
 2056              		.cfi_startproc
 2057              		@ args = 0, pretend = 0, frame = 0
 2058              		@ frame_needed = 0, uses_anonymous_args = 0
 2059              		@ link register save eliminated.
 2060              	.LVL167:
1958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2061              		.loc 1 1958 0
 2062 0000 0268     		ldr	r2, [r0]
 2063 0002 9369     		ldr	r3, [r2, #24]
 2064 0004 43F00403 		orr	r3, r3, #4
 2065 0008 9361     		str	r3, [r2, #24]
 2066 000a 7047     		bx	lr
 2067              		.cfi_endproc
 2068              	.LFE156:
 2070              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 2071              		.align	2
 2072              		.global	HAL_HalfDuplex_EnableTransmitter
 2073              		.thumb
 2074              		.thumb_func
 2076              	HAL_HalfDuplex_EnableTransmitter:
 2077              	.LFB157:
1967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
 2078              		.loc 1 1967 0
 2079              		.cfi_startproc
 2080              		@ args = 0, pretend = 0, frame = 0
 2081              		@ frame_needed = 0, uses_anonymous_args = 0
 2082              		@ link register save eliminated.
 2083              	.LVL168:
1969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2084              		.loc 1 1969 0
 2085 0000 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 2086 0004 012B     		cmp	r3, #1
 2087 0006 17D0     		beq	.L141
1969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2088              		.loc 1 1969 0 is_stmt 0 discriminator 2
 2089 0008 0123     		movs	r3, #1
 2090 000a 80F86830 		strb	r3, [r0, #104]
1970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2091              		.loc 1 1970 0 is_stmt 1 discriminator 2
 2092 000e 2423     		movs	r3, #36
 2093 0010 80F86930 		strb	r3, [r0, #105]
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 88


1973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
 2094              		.loc 1 1973 0 discriminator 2
 2095 0014 0268     		ldr	r2, [r0]
 2096 0016 1368     		ldr	r3, [r2]
 2097 0018 23F00C03 		bic	r3, r3, #12
 2098 001c 1360     		str	r3, [r2]
1975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2099              		.loc 1 1975 0 discriminator 2
 2100 001e 0268     		ldr	r2, [r0]
 2101 0020 1368     		ldr	r3, [r2]
 2102 0022 43F00803 		orr	r3, r3, #8
 2103 0026 1360     		str	r3, [r2]
1977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2104              		.loc 1 1977 0 discriminator 2
 2105 0028 2023     		movs	r3, #32
 2106 002a 80F86930 		strb	r3, [r0, #105]
1980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2107              		.loc 1 1980 0 discriminator 2
 2108 002e 0023     		movs	r3, #0
 2109 0030 80F86830 		strb	r3, [r0, #104]
1982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2110              		.loc 1 1982 0 discriminator 2
 2111 0034 1846     		mov	r0, r3
 2112              	.LVL169:
 2113 0036 7047     		bx	lr
 2114              	.LVL170:
 2115              	.L141:
1969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2116              		.loc 1 1969 0
 2117 0038 0220     		movs	r0, #2
 2118              	.LVL171:
1983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2119              		.loc 1 1983 0
 2120 003a 7047     		bx	lr
 2121              		.cfi_endproc
 2122              	.LFE157:
 2124              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 2125              		.align	2
 2126              		.global	HAL_HalfDuplex_EnableReceiver
 2127              		.thumb
 2128              		.thumb_func
 2130              	HAL_HalfDuplex_EnableReceiver:
 2131              	.LFB158:
1991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
 2132              		.loc 1 1991 0
 2133              		.cfi_startproc
 2134              		@ args = 0, pretend = 0, frame = 0
 2135              		@ frame_needed = 0, uses_anonymous_args = 0
 2136              		@ link register save eliminated.
 2137              	.LVL172:
1993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2138              		.loc 1 1993 0
 2139 0000 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 2140 0004 012B     		cmp	r3, #1
 2141 0006 17D0     		beq	.L144
1993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2142              		.loc 1 1993 0 is_stmt 0 discriminator 2
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 89


 2143 0008 0123     		movs	r3, #1
 2144 000a 80F86830 		strb	r3, [r0, #104]
1994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2145              		.loc 1 1994 0 is_stmt 1 discriminator 2
 2146 000e 2423     		movs	r3, #36
 2147 0010 80F86930 		strb	r3, [r0, #105]
1997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
 2148              		.loc 1 1997 0 discriminator 2
 2149 0014 0268     		ldr	r2, [r0]
 2150 0016 1368     		ldr	r3, [r2]
 2151 0018 23F00C03 		bic	r3, r3, #12
 2152 001c 1360     		str	r3, [r2]
1999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2153              		.loc 1 1999 0 discriminator 2
 2154 001e 0268     		ldr	r2, [r0]
 2155 0020 1368     		ldr	r3, [r2]
 2156 0022 43F00403 		orr	r3, r3, #4
 2157 0026 1360     		str	r3, [r2]
2001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
 2158              		.loc 1 2001 0 discriminator 2
 2159 0028 2023     		movs	r3, #32
 2160 002a 80F86930 		strb	r3, [r0, #105]
2003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2161              		.loc 1 2003 0 discriminator 2
 2162 002e 0023     		movs	r3, #0
 2163 0030 80F86830 		strb	r3, [r0, #104]
2005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2164              		.loc 1 2005 0 discriminator 2
 2165 0034 1846     		mov	r0, r3
 2166              	.LVL173:
 2167 0036 7047     		bx	lr
 2168              	.LVL174:
 2169              	.L144:
1993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2170              		.loc 1 1993 0
 2171 0038 0220     		movs	r0, #2
 2172              	.LVL175:
2006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2173              		.loc 1 2006 0
 2174 003a 7047     		bx	lr
 2175              		.cfi_endproc
 2176              	.LFE158:
 2178              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 2179              		.align	2
 2180              		.global	HAL_LIN_SendBreak
 2181              		.thumb
 2182              		.thumb_func
 2184              	HAL_LIN_SendBreak:
 2185              	.LFB159:
2015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the parameters */
 2186              		.loc 1 2015 0
 2187              		.cfi_startproc
 2188              		@ args = 0, pretend = 0, frame = 0
 2189              		@ frame_needed = 0, uses_anonymous_args = 0
 2190              		@ link register save eliminated.
 2191              	.LVL176:
2020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 90


 2192              		.loc 1 2020 0
 2193 0000 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 2194 0004 012B     		cmp	r3, #1
 2195 0006 12D0     		beq	.L147
2020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2196              		.loc 1 2020 0 is_stmt 0 discriminator 2
 2197 0008 0123     		movs	r3, #1
 2198 000a 80F86830 		strb	r3, [r0, #104]
2022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2199              		.loc 1 2022 0 is_stmt 1 discriminator 2
 2200 000e 2423     		movs	r3, #36
 2201 0010 80F86930 		strb	r3, [r0, #105]
2025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2202              		.loc 1 2025 0 discriminator 2
 2203 0014 0268     		ldr	r2, [r0]
 2204 0016 9369     		ldr	r3, [r2, #24]
 2205 0018 43F00203 		orr	r3, r3, #2
 2206 001c 9361     		str	r3, [r2, #24]
2027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2207              		.loc 1 2027 0 discriminator 2
 2208 001e 2023     		movs	r3, #32
 2209 0020 80F86930 		strb	r3, [r0, #105]
2030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2210              		.loc 1 2030 0 discriminator 2
 2211 0024 0023     		movs	r3, #0
 2212 0026 80F86830 		strb	r3, [r0, #104]
2032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2213              		.loc 1 2032 0 discriminator 2
 2214 002a 1846     		mov	r0, r3
 2215              	.LVL177:
 2216 002c 7047     		bx	lr
 2217              	.LVL178:
 2218              	.L147:
2020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2219              		.loc 1 2020 0
 2220 002e 0220     		movs	r0, #2
 2221              	.LVL179:
2033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2222              		.loc 1 2033 0
 2223 0030 7047     		bx	lr
 2224              		.cfi_endproc
 2225              	.LFE159:
 2227 0032 00BF     		.section	.text.HAL_UART_GetState,"ax",%progbits
 2228              		.align	2
 2229              		.global	HAL_UART_GetState
 2230              		.thumb
 2231              		.thumb_func
 2233              	HAL_UART_GetState:
 2234              	.LFB160:
2063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
 2235              		.loc 1 2063 0
 2236              		.cfi_startproc
 2237              		@ args = 0, pretend = 0, frame = 0
 2238              		@ frame_needed = 0, uses_anonymous_args = 0
 2239              		@ link register save eliminated.
 2240              	.LVL180:
2065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   temp2 = huart->RxState;
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 91


 2241              		.loc 1 2065 0
 2242 0000 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 2243              	.LVL181:
2066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2244              		.loc 1 2066 0
 2245 0004 90F86A00 		ldrb	r0, [r0, #106]	@ zero_extendqisi2
 2246              	.LVL182:
2069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2247              		.loc 1 2069 0
 2248 0008 1843     		orrs	r0, r0, r3
 2249              	.LVL183:
 2250 000a 7047     		bx	lr
 2251              		.cfi_endproc
 2252              	.LFE160:
 2254              		.section	.text.HAL_UART_GetError,"ax",%progbits
 2255              		.align	2
 2256              		.global	HAL_UART_GetError
 2257              		.thumb
 2258              		.thumb_func
 2260              	HAL_UART_GetError:
 2261              	.LFB161:
2078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return huart->ErrorCode;
 2262              		.loc 1 2078 0
 2263              		.cfi_startproc
 2264              		@ args = 0, pretend = 0, frame = 0
 2265              		@ frame_needed = 0, uses_anonymous_args = 0
 2266              		@ link register save eliminated.
 2267              	.LVL184:
2079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2268              		.loc 1 2079 0
 2269 0000 C06E     		ldr	r0, [r0, #108]
 2270              	.LVL185:
2080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 2271              		.loc 1 2080 0
 2272 0002 7047     		bx	lr
 2273              		.cfi_endproc
 2274              	.LFE161:
 2276              		.section	.text.UART_SetConfig,"ax",%progbits
 2277              		.align	2
 2278              		.global	UART_SetConfig
 2279              		.thumb
 2280              		.thumb_func
 2282              	UART_SetConfig:
 2283              	.LFB162:
2099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000U;
 2284              		.loc 1 2099 0
 2285              		.cfi_startproc
 2286              		@ args = 0, pretend = 0, frame = 0
 2287              		@ frame_needed = 0, uses_anonymous_args = 0
 2288              	.LVL186:
 2289 0000 38B5     		push	{r3, r4, r5, lr}
 2290              	.LCFI21:
 2291              		.cfi_def_cfa_offset 16
 2292              		.cfi_offset 3, -16
 2293              		.cfi_offset 4, -12
 2294              		.cfi_offset 5, -8
 2295              		.cfi_offset 14, -4
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 92


 2296 0002 0446     		mov	r4, r0
 2297              	.LVL187:
2124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2298              		.loc 1 2124 0
 2299 0004 8268     		ldr	r2, [r0, #8]
 2300 0006 0369     		ldr	r3, [r0, #16]
 2301 0008 1A43     		orrs	r2, r2, r3
 2302 000a 4369     		ldr	r3, [r0, #20]
 2303 000c 1A43     		orrs	r2, r2, r3
 2304 000e C369     		ldr	r3, [r0, #28]
 2305 0010 1343     		orrs	r3, r3, r2
 2306              	.LVL188:
2125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2307              		.loc 1 2125 0
 2308 0012 0168     		ldr	r1, [r0]
 2309 0014 0868     		ldr	r0, [r1]
 2310              	.LVL189:
 2311 0016 634A     		ldr	r2, .L179
 2312 0018 0240     		ands	r2, r2, r0
 2313 001a 1343     		orrs	r3, r3, r2
 2314              	.LVL190:
 2315 001c 0B60     		str	r3, [r1]
 2316              	.LVL191:
2130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2317              		.loc 1 2130 0
 2318 001e 2168     		ldr	r1, [r4]
 2319 0020 4B68     		ldr	r3, [r1, #4]
 2320 0022 23F44052 		bic	r2, r3, #12288
 2321 0026 E368     		ldr	r3, [r4, #12]
 2322 0028 1343     		orrs	r3, r3, r2
 2323 002a 4B60     		str	r3, [r1, #4]
2138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
 2324              		.loc 1 2138 0
 2325 002c A269     		ldr	r2, [r4, #24]
 2326 002e 236A     		ldr	r3, [r4, #32]
 2327 0030 1343     		orrs	r3, r3, r2
 2328              	.LVL192:
2139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2329              		.loc 1 2139 0
 2330 0032 2168     		ldr	r1, [r4]
 2331 0034 8A68     		ldr	r2, [r1, #8]
 2332 0036 22F43062 		bic	r2, r2, #2816
 2333 003a 1343     		orrs	r3, r3, r2
 2334              	.LVL193:
 2335 003c 8B60     		str	r3, [r1, #8]
 2336              	.LVL194:
2142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2337              		.loc 1 2142 0
 2338 003e 2568     		ldr	r5, [r4]
 2339 0040 594B     		ldr	r3, .L179+4
 2340 0042 9D42     		cmp	r5, r3
 2341 0044 12D1     		bne	.L151
2142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2342              		.loc 1 2142 0 is_stmt 0 discriminator 1
 2343 0046 03F55843 		add	r3, r3, #55296
 2344 004a 1B6B     		ldr	r3, [r3, #48]
 2345 004c 03F00303 		and	r3, r3, #3
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 93


 2346 0050 032B     		cmp	r3, #3
 2347 0052 09D8     		bhi	.L152
 2348 0054 DFE803F0 		tbb	[pc, r3]
 2349              	.L154:
 2350 0058 02       		.byte	(.L153-.L154)/2
 2351 0059 04       		.byte	(.L155-.L154)/2
 2352 005a 06       		.byte	(.L156-.L154)/2
 2353 005b 13       		.byte	(.L173-.L154)/2
 2354              		.p2align 1
 2355              	.L153:
2142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2356              		.loc 1 2142 0
 2357 005c 0023     		movs	r3, #0
 2358 005e 13E0     		b	.L157
 2359              	.L155:
 2360              	.LVL195:
2142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2361              		.loc 1 2142 0 discriminator 5
 2362 0060 0423     		movs	r3, #4
 2363 0062 11E0     		b	.L157
 2364              	.LVL196:
 2365              	.L156:
2142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2366              		.loc 1 2142 0 discriminator 6
 2367 0064 0823     		movs	r3, #8
 2368 0066 0FE0     		b	.L157
 2369              	.LVL197:
 2370              	.L152:
2142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2371              		.loc 1 2142 0 discriminator 3
 2372 0068 1023     		movs	r3, #16
 2373 006a 0DE0     		b	.L157
 2374              	.L151:
2142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2375              		.loc 1 2142 0 discriminator 2
 2376 006c 4F4B     		ldr	r3, .L179+8
 2377 006e 9D42     		cmp	r5, r3
 2378 0070 07D0     		beq	.L174
2142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2379              		.loc 1 2142 0 discriminator 9
 2380 0072 03F58063 		add	r3, r3, #1024
 2381 0076 9D42     		cmp	r5, r3
 2382 0078 05D1     		bne	.L175
2142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2383              		.loc 1 2142 0
 2384 007a 0023     		movs	r3, #0
 2385 007c 04E0     		b	.L157
 2386              	.L173:
 2387 007e 0223     		movs	r3, #2
 2388 0080 02E0     		b	.L157
 2389              	.L174:
 2390 0082 0023     		movs	r3, #0
 2391 0084 00E0     		b	.L157
 2392              	.L175:
 2393 0086 1023     		movs	r3, #16
 2394              	.LVL198:
 2395              	.L157:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 94


2145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2396              		.loc 1 2145 0 is_stmt 1
 2397 0088 E269     		ldr	r2, [r4, #28]
 2398 008a B2F5004F 		cmp	r2, #32768
 2399 008e 47D1     		bne	.L158
2147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2400              		.loc 1 2147 0
 2401 0090 082B     		cmp	r3, #8
 2402 0092 3BD8     		bhi	.L176
 2403 0094 DFE803F0 		tbb	[pc, r3]
 2404              	.L161:
 2405 0098 05       		.byte	(.L160-.L161)/2
 2406 0099 10       		.byte	(.L162-.L161)/2
 2407 009a 1B       		.byte	(.L163-.L161)/2
 2408 009b 3A       		.byte	(.L176-.L161)/2
 2409 009c 26       		.byte	(.L164-.L161)/2
 2410 009d 3A       		.byte	(.L176-.L161)/2
 2411 009e 3A       		.byte	(.L176-.L161)/2
 2412 009f 3A       		.byte	(.L176-.L161)/2
 2413 00a0 31       		.byte	(.L165-.L161)/2
 2414 00a1 00       		.p2align 1
 2415              	.L160:
2150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2416              		.loc 1 2150 0
 2417 00a2 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 2418              	.LVL199:
 2419 00a6 6368     		ldr	r3, [r4, #4]
 2420 00a8 5A08     		lsrs	r2, r3, #1
 2421 00aa 02EB4000 		add	r0, r2, r0, lsl #1
 2422 00ae B0FBF3F3 		udiv	r3, r0, r3
 2423 00b2 9BB2     		uxth	r3, r3
 2424              	.LVL200:
2104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2425              		.loc 1 2104 0
 2426 00b4 0020     		movs	r0, #0
2151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
 2427              		.loc 1 2151 0
 2428 00b6 2BE0     		b	.L159
 2429              	.LVL201:
 2430              	.L162:
2153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2431              		.loc 1 2153 0
 2432 00b8 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 2433              	.LVL202:
 2434 00bc 6368     		ldr	r3, [r4, #4]
 2435 00be 5A08     		lsrs	r2, r3, #1
 2436 00c0 02EB4000 		add	r0, r2, r0, lsl #1
 2437 00c4 B0FBF3F3 		udiv	r3, r0, r3
 2438 00c8 9BB2     		uxth	r3, r3
 2439              	.LVL203:
2104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2440              		.loc 1 2104 0
 2441 00ca 0020     		movs	r0, #0
2154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 2442              		.loc 1 2154 0
 2443 00cc 20E0     		b	.L159
 2444              	.LVL204:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 95


 2445              	.L163:
2156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2446              		.loc 1 2156 0
 2447 00ce 6168     		ldr	r1, [r4, #4]
 2448 00d0 4A08     		lsrs	r2, r1, #1
 2449 00d2 02F57403 		add	r3, r2, #15990784
 2450              	.LVL205:
 2451 00d6 03F51053 		add	r3, r3, #9216
 2452 00da B3FBF1F3 		udiv	r3, r3, r1
 2453 00de 9BB2     		uxth	r3, r3
 2454              	.LVL206:
2104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2455              		.loc 1 2104 0
 2456 00e0 0020     		movs	r0, #0
2157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
 2457              		.loc 1 2157 0
 2458 00e2 15E0     		b	.L159
 2459              	.LVL207:
 2460              	.L164:
2159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2461              		.loc 1 2159 0
 2462 00e4 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 2463              	.LVL208:
 2464 00e8 6368     		ldr	r3, [r4, #4]
 2465 00ea 5A08     		lsrs	r2, r3, #1
 2466 00ec 02EB4000 		add	r0, r2, r0, lsl #1
 2467 00f0 B0FBF3F3 		udiv	r3, r0, r3
 2468 00f4 9BB2     		uxth	r3, r3
 2469              	.LVL209:
2104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2470              		.loc 1 2104 0
 2471 00f6 0020     		movs	r0, #0
2160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 2472              		.loc 1 2160 0
 2473 00f8 0AE0     		b	.L159
 2474              	.LVL210:
 2475              	.L165:
2162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2476              		.loc 1 2162 0
 2477 00fa 6268     		ldr	r2, [r4, #4]
 2478 00fc 5308     		lsrs	r3, r2, #1
 2479              	.LVL211:
 2480 00fe 03F58033 		add	r3, r3, #65536
 2481 0102 B3FBF2F3 		udiv	r3, r3, r2
 2482 0106 9BB2     		uxth	r3, r3
 2483              	.LVL212:
2104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2484              		.loc 1 2104 0
 2485 0108 0020     		movs	r0, #0
2163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 2486              		.loc 1 2163 0
 2487 010a 01E0     		b	.L159
 2488              	.LVL213:
 2489              	.L176:
2166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2490              		.loc 1 2166 0
 2491 010c 0120     		movs	r0, #1
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 96


2103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 2492              		.loc 1 2103 0
 2493 010e 0023     		movs	r3, #0
 2494              	.LVL214:
 2495              	.L159:
2170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 2496              		.loc 1 2170 0
 2497 0110 23F00F02 		bic	r2, r3, #15
 2498              	.LVL215:
2171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Instance->BRR = brrtemp;
 2499              		.loc 1 2171 0
 2500 0114 C3F34203 		ubfx	r3, r3, #1, #3
 2501              	.LVL216:
 2502 0118 1343     		orrs	r3, r3, r2
 2503              	.LVL217:
2172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2504              		.loc 1 2172 0
 2505 011a 2268     		ldr	r2, [r4]
 2506 011c D360     		str	r3, [r2, #12]
 2507 011e 38BD     		pop	{r3, r4, r5, pc}
 2508              	.LVL218:
 2509              	.L158:
2176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2510              		.loc 1 2176 0
 2511 0120 082B     		cmp	r3, #8
 2512 0122 3DD8     		bhi	.L177
 2513 0124 DFE803F0 		tbb	[pc, r3]
 2514              	.L168:
 2515 0128 05       		.byte	(.L167-.L168)/2
 2516 0129 10       		.byte	(.L169-.L168)/2
 2517 012a 1B       		.byte	(.L170-.L168)/2
 2518 012b 3C       		.byte	(.L177-.L168)/2
 2519 012c 27       		.byte	(.L171-.L168)/2
 2520 012d 3C       		.byte	(.L177-.L168)/2
 2521 012e 3C       		.byte	(.L177-.L168)/2
 2522 012f 3C       		.byte	(.L177-.L168)/2
 2523 0130 32       		.byte	(.L172-.L168)/2
 2524 0131 00       		.p2align 1
 2525              	.L167:
2179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2526              		.loc 1 2179 0
 2527 0132 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 2528              	.LVL219:
 2529 0136 6368     		ldr	r3, [r4, #4]
 2530 0138 00EB5300 		add	r0, r0, r3, lsr #1
 2531 013c B0FBF3F0 		udiv	r0, r0, r3
 2532 0140 80B2     		uxth	r0, r0
 2533 0142 E860     		str	r0, [r5, #12]
2104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2534              		.loc 1 2104 0
 2535 0144 0020     		movs	r0, #0
2180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
 2536              		.loc 1 2180 0
 2537 0146 38BD     		pop	{r3, r4, r5, pc}
 2538              	.LVL220:
 2539              	.L169:
2182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 97


 2540              		.loc 1 2182 0
 2541 0148 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 2542              	.LVL221:
 2543 014c 6368     		ldr	r3, [r4, #4]
 2544 014e 00EB5300 		add	r0, r0, r3, lsr #1
 2545 0152 B0FBF3F0 		udiv	r0, r0, r3
 2546 0156 80B2     		uxth	r0, r0
 2547 0158 E860     		str	r0, [r5, #12]
2104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2548              		.loc 1 2104 0
 2549 015a 0020     		movs	r0, #0
2183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 2550              		.loc 1 2183 0
 2551 015c 38BD     		pop	{r3, r4, r5, pc}
 2552              	.LVL222:
 2553              	.L170:
2185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2554              		.loc 1 2185 0
 2555 015e 6168     		ldr	r1, [r4, #4]
 2556 0160 4A08     		lsrs	r2, r1, #1
 2557 0162 02F5F403 		add	r3, r2, #7995392
 2558              	.LVL223:
 2559 0166 03F59053 		add	r3, r3, #4608
 2560 016a B3FBF1F3 		udiv	r3, r3, r1
 2561 016e 9BB2     		uxth	r3, r3
 2562 0170 EB60     		str	r3, [r5, #12]
2104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2563              		.loc 1 2104 0
 2564 0172 0020     		movs	r0, #0
2186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
 2565              		.loc 1 2186 0
 2566 0174 38BD     		pop	{r3, r4, r5, pc}
 2567              	.LVL224:
 2568              	.L171:
2188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2569              		.loc 1 2188 0
 2570 0176 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 2571              	.LVL225:
 2572 017a 6368     		ldr	r3, [r4, #4]
 2573 017c 00EB5300 		add	r0, r0, r3, lsr #1
 2574 0180 B0FBF3F0 		udiv	r0, r0, r3
 2575 0184 80B2     		uxth	r0, r0
 2576 0186 E860     		str	r0, [r5, #12]
2104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2577              		.loc 1 2104 0
 2578 0188 0020     		movs	r0, #0
2189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 2579              		.loc 1 2189 0
 2580 018a 38BD     		pop	{r3, r4, r5, pc}
 2581              	.LVL226:
 2582              	.L172:
2191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2583              		.loc 1 2191 0
 2584 018c 6268     		ldr	r2, [r4, #4]
 2585 018e 5308     		lsrs	r3, r2, #1
 2586              	.LVL227:
 2587 0190 03F50043 		add	r3, r3, #32768
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 98


 2588 0194 B3FBF2F3 		udiv	r3, r3, r2
 2589 0198 9BB2     		uxth	r3, r3
 2590 019a EB60     		str	r3, [r5, #12]
2104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2591              		.loc 1 2104 0
 2592 019c 0020     		movs	r0, #0
2192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 2593              		.loc 1 2192 0
 2594 019e 38BD     		pop	{r3, r4, r5, pc}
 2595              	.LVL228:
 2596              	.L177:
2195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2597              		.loc 1 2195 0
 2598 01a0 0120     		movs	r0, #1
 2599              	.LVL229:
2202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2600              		.loc 1 2202 0
 2601 01a2 38BD     		pop	{r3, r4, r5, pc}
 2602              	.LVL230:
 2603              	.L180:
 2604              		.align	2
 2605              	.L179:
 2606 01a4 F369FFEF 		.word	-268473869
 2607 01a8 00380140 		.word	1073821696
 2608 01ac 00440040 		.word	1073759232
 2609              		.cfi_endproc
 2610              	.LFE162:
 2612              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 2613              		.align	2
 2614              		.global	UART_AdvFeatureConfig
 2615              		.thumb
 2616              		.thumb_func
 2618              	UART_AdvFeatureConfig:
 2619              	.LFB163:
2210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
 2620              		.loc 1 2210 0
 2621              		.cfi_startproc
 2622              		@ args = 0, pretend = 0, frame = 0
 2623              		@ frame_needed = 0, uses_anonymous_args = 0
 2624              		@ link register save eliminated.
 2625              	.LVL231:
2215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2626              		.loc 1 2215 0
 2627 0000 436A     		ldr	r3, [r0, #36]
 2628 0002 13F0010F 		tst	r3, #1
 2629 0006 06D0     		beq	.L182
2218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2630              		.loc 1 2218 0
 2631 0008 0168     		ldr	r1, [r0]
 2632 000a 4B68     		ldr	r3, [r1, #4]
 2633 000c 23F40032 		bic	r2, r3, #131072
 2634 0010 836A     		ldr	r3, [r0, #40]
 2635 0012 1343     		orrs	r3, r3, r2
 2636 0014 4B60     		str	r3, [r1, #4]
 2637              	.L182:
2222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2638              		.loc 1 2222 0
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 99


 2639 0016 436A     		ldr	r3, [r0, #36]
 2640 0018 13F0020F 		tst	r3, #2
 2641 001c 06D0     		beq	.L183
2225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2642              		.loc 1 2225 0
 2643 001e 0168     		ldr	r1, [r0]
 2644 0020 4B68     		ldr	r3, [r1, #4]
 2645 0022 23F48032 		bic	r2, r3, #65536
 2646 0026 C36A     		ldr	r3, [r0, #44]
 2647 0028 1343     		orrs	r3, r3, r2
 2648 002a 4B60     		str	r3, [r1, #4]
 2649              	.L183:
2229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2650              		.loc 1 2229 0
 2651 002c 436A     		ldr	r3, [r0, #36]
 2652 002e 13F0040F 		tst	r3, #4
 2653 0032 06D0     		beq	.L184
2232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2654              		.loc 1 2232 0
 2655 0034 0168     		ldr	r1, [r0]
 2656 0036 4B68     		ldr	r3, [r1, #4]
 2657 0038 23F48022 		bic	r2, r3, #262144
 2658 003c 036B     		ldr	r3, [r0, #48]
 2659 003e 1343     		orrs	r3, r3, r2
 2660 0040 4B60     		str	r3, [r1, #4]
 2661              	.L184:
2236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2662              		.loc 1 2236 0
 2663 0042 436A     		ldr	r3, [r0, #36]
 2664 0044 13F0080F 		tst	r3, #8
 2665 0048 06D0     		beq	.L185
2239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2666              		.loc 1 2239 0
 2667 004a 0168     		ldr	r1, [r0]
 2668 004c 4B68     		ldr	r3, [r1, #4]
 2669 004e 23F40042 		bic	r2, r3, #32768
 2670 0052 436B     		ldr	r3, [r0, #52]
 2671 0054 1343     		orrs	r3, r3, r2
 2672 0056 4B60     		str	r3, [r1, #4]
 2673              	.L185:
2243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2674              		.loc 1 2243 0
 2675 0058 436A     		ldr	r3, [r0, #36]
 2676 005a 13F0100F 		tst	r3, #16
 2677 005e 06D0     		beq	.L186
2246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2678              		.loc 1 2246 0
 2679 0060 0168     		ldr	r1, [r0]
 2680 0062 8B68     		ldr	r3, [r1, #8]
 2681 0064 23F48052 		bic	r2, r3, #4096
 2682 0068 836B     		ldr	r3, [r0, #56]
 2683 006a 1343     		orrs	r3, r3, r2
 2684 006c 8B60     		str	r3, [r1, #8]
 2685              	.L186:
2250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2686              		.loc 1 2250 0
 2687 006e 436A     		ldr	r3, [r0, #36]
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 100


 2688 0070 13F0200F 		tst	r3, #32
 2689 0074 06D0     		beq	.L187
2253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2690              		.loc 1 2253 0
 2691 0076 0168     		ldr	r1, [r0]
 2692 0078 8B68     		ldr	r3, [r1, #8]
 2693 007a 23F40052 		bic	r2, r3, #8192
 2694 007e C36B     		ldr	r3, [r0, #60]
 2695 0080 1343     		orrs	r3, r3, r2
 2696 0082 8B60     		str	r3, [r1, #8]
 2697              	.L187:
2257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2698              		.loc 1 2257 0
 2699 0084 436A     		ldr	r3, [r0, #36]
 2700 0086 13F0400F 		tst	r3, #64
 2701 008a 11D0     		beq	.L188
2261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
 2702              		.loc 1 2261 0
 2703 008c 0168     		ldr	r1, [r0]
 2704 008e 4B68     		ldr	r3, [r1, #4]
 2705 0090 23F48012 		bic	r2, r3, #1048576
 2706 0094 036C     		ldr	r3, [r0, #64]
 2707 0096 1343     		orrs	r3, r3, r2
 2708 0098 4B60     		str	r3, [r1, #4]
2263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2709              		.loc 1 2263 0
 2710 009a 036C     		ldr	r3, [r0, #64]
 2711 009c B3F5801F 		cmp	r3, #1048576
 2712 00a0 06D1     		bne	.L188
2266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 2713              		.loc 1 2266 0
 2714 00a2 0168     		ldr	r1, [r0]
 2715 00a4 4B68     		ldr	r3, [r1, #4]
 2716 00a6 23F4C002 		bic	r2, r3, #6291456
 2717 00aa 436C     		ldr	r3, [r0, #68]
 2718 00ac 1343     		orrs	r3, r3, r2
 2719 00ae 4B60     		str	r3, [r1, #4]
 2720              	.L188:
2271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2721              		.loc 1 2271 0
 2722 00b0 436A     		ldr	r3, [r0, #36]
 2723 00b2 13F0800F 		tst	r3, #128
 2724 00b6 06D0     		beq	.L181
2274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2725              		.loc 1 2274 0
 2726 00b8 0168     		ldr	r1, [r0]
 2727 00ba 4B68     		ldr	r3, [r1, #4]
 2728 00bc 23F40022 		bic	r2, r3, #524288
 2729 00c0 836C     		ldr	r3, [r0, #72]
 2730 00c2 1343     		orrs	r3, r3, r2
 2731 00c4 4B60     		str	r3, [r1, #4]
 2732              	.L181:
 2733 00c6 7047     		bx	lr
 2734              		.cfi_endproc
 2735              	.LFE163:
 2737              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 2738              		.align	2
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 101


 2739              		.global	UART_WaitOnFlagUntilTimeout
 2740              		.thumb
 2741              		.thumb_func
 2743              	UART_WaitOnFlagUntilTimeout:
 2744              	.LFB165:
2334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Wait until flag is set */
 2745              		.loc 1 2334 0
 2746              		.cfi_startproc
 2747              		@ args = 4, pretend = 0, frame = 0
 2748              		@ frame_needed = 0, uses_anonymous_args = 0
 2749              	.LVL232:
 2750 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2751              	.LCFI22:
 2752              		.cfi_def_cfa_offset 24
 2753              		.cfi_offset 4, -24
 2754              		.cfi_offset 5, -20
 2755              		.cfi_offset 6, -16
 2756              		.cfi_offset 7, -12
 2757              		.cfi_offset 8, -8
 2758              		.cfi_offset 14, -4
 2759 0004 0646     		mov	r6, r0
 2760 0006 0C46     		mov	r4, r1
 2761 0008 1746     		mov	r7, r2
 2762 000a 9846     		mov	r8, r3
 2763 000c 069D     		ldr	r5, [sp, #24]
2336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2764              		.loc 1 2336 0
 2765 000e 1EE0     		b	.L192
 2766              	.LVL233:
 2767              	.L195:
2339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2768              		.loc 1 2339 0
 2769 0010 B5F1FF3F 		cmp	r5, #-1
 2770 0014 1BD0     		beq	.L192
2341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 2771              		.loc 1 2341 0
 2772 0016 2DB1     		cbz	r5, .L193
2341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 2773              		.loc 1 2341 0 is_stmt 0 discriminator 1
 2774 0018 FFF7FEFF 		bl	HAL_GetTick
 2775              	.LVL234:
 2776 001c C8EB0000 		rsb	r0, r8, r0
 2777 0020 A842     		cmp	r0, r5
 2778 0022 14D9     		bls	.L192
 2779              	.L193:
2344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2780              		.loc 1 2344 0 is_stmt 1
 2781 0024 3268     		ldr	r2, [r6]
 2782 0026 1368     		ldr	r3, [r2]
 2783 0028 23F4D073 		bic	r3, r3, #416
 2784 002c 1360     		str	r3, [r2]
2345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2785              		.loc 1 2345 0
 2786 002e 3268     		ldr	r2, [r6]
 2787 0030 9368     		ldr	r3, [r2, #8]
 2788 0032 23F00103 		bic	r3, r3, #1
 2789 0036 9360     		str	r3, [r2, #8]
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 102


2347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 2790              		.loc 1 2347 0
 2791 0038 2023     		movs	r3, #32
 2792 003a 86F86930 		strb	r3, [r6, #105]
2348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2793              		.loc 1 2348 0
 2794 003e 86F86A30 		strb	r3, [r6, #106]
2351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         return HAL_TIMEOUT;
 2795              		.loc 1 2351 0
 2796 0042 0023     		movs	r3, #0
 2797 0044 86F86830 		strb	r3, [r6, #104]
2352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 2798              		.loc 1 2352 0
 2799 0048 0320     		movs	r0, #3
 2800 004a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2801              	.LVL235:
 2802              	.L192:
2336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2803              		.loc 1 2336 0
 2804 004e 3368     		ldr	r3, [r6]
 2805 0050 DB69     		ldr	r3, [r3, #28]
 2806 0052 2340     		ands	r3, r3, r4
 2807 0054 A342     		cmp	r3, r4
 2808 0056 14BF     		ite	ne
 2809 0058 0023     		movne	r3, #0
 2810 005a 0123     		moveq	r3, #1
 2811 005c BB42     		cmp	r3, r7
 2812 005e D7D0     		beq	.L195
2356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2813              		.loc 1 2356 0
 2814 0060 0020     		movs	r0, #0
2357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2815              		.loc 1 2357 0
 2816 0062 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2817              		.cfi_endproc
 2818              	.LFE165:
 2820 0066 00BF     		.section	.text.HAL_UART_Transmit,"ax",%progbits
 2821              		.align	2
 2822              		.global	HAL_UART_Transmit
 2823              		.thumb
 2824              		.thumb_func
 2826              	HAL_UART_Transmit:
 2827              	.LFB130:
 726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
 2828              		.loc 1 726 0
 2829              		.cfi_startproc
 2830              		@ args = 0, pretend = 0, frame = 0
 2831              		@ frame_needed = 0, uses_anonymous_args = 0
 2832              	.LVL236:
 2833 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2834              	.LCFI23:
 2835              		.cfi_def_cfa_offset 24
 2836              		.cfi_offset 4, -24
 2837              		.cfi_offset 5, -20
 2838              		.cfi_offset 6, -16
 2839              		.cfi_offset 7, -12
 2840              		.cfi_offset 8, -8
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 103


 2841              		.cfi_offset 14, -4
 2842 0004 82B0     		sub	sp, sp, #8
 2843              	.LCFI24:
 2844              		.cfi_def_cfa_offset 32
 2845 0006 0446     		mov	r4, r0
 2846 0008 1E46     		mov	r6, r3
 2847              	.LVL237:
 731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2848              		.loc 1 731 0
 2849 000a 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 2850              	.LVL238:
 2851 000e DBB2     		uxtb	r3, r3
 2852 0010 202B     		cmp	r3, #32
 2853 0012 4DD1     		bne	.L203
 2854 0014 0D46     		mov	r5, r1
 2855 0016 9046     		mov	r8, r2
 733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2856              		.loc 1 733 0
 2857 0018 0029     		cmp	r1, #0
 2858 001a 4BD0     		beq	.L204
 733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2859              		.loc 1 733 0 is_stmt 0 discriminator 1
 2860 001c 002A     		cmp	r2, #0
 2861 001e 4BD0     		beq	.L205
 739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2862              		.loc 1 739 0 is_stmt 1
 2863 0020 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 2864 0024 012B     		cmp	r3, #1
 2865 0026 49D0     		beq	.L206
 739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2866              		.loc 1 739 0 is_stmt 0 discriminator 2
 2867 0028 0123     		movs	r3, #1
 2868 002a 80F86830 		strb	r3, [r0, #104]
 741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 2869              		.loc 1 741 0 is_stmt 1 discriminator 2
 2870 002e 0023     		movs	r3, #0
 2871 0030 C366     		str	r3, [r0, #108]
 742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2872              		.loc 1 742 0 discriminator 2
 2873 0032 2123     		movs	r3, #33
 2874 0034 80F86930 		strb	r3, [r0, #105]
 745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2875              		.loc 1 745 0 discriminator 2
 2876 0038 FFF7FEFF 		bl	HAL_GetTick
 2877              	.LVL239:
 2878 003c 0746     		mov	r7, r0
 2879              	.LVL240:
 747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 2880              		.loc 1 747 0 discriminator 2
 2881 003e A4F85080 		strh	r8, [r4, #80]	@ movhi
 748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 2882              		.loc 1 748 0 discriminator 2
 2883 0042 A4F85280 		strh	r8, [r4, #82]	@ movhi
 749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2884              		.loc 1 749 0 discriminator 2
 2885 0046 1EE0     		b	.L199
 2886              	.LVL241:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 104


 2887              	.L202:
 751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 2888              		.loc 1 751 0
 2889 0048 B4F85230 		ldrh	r3, [r4, #82]
 2890 004c 013B     		subs	r3, r3, #1
 2891 004e 9BB2     		uxth	r3, r3
 2892 0050 A4F85230 		strh	r3, [r4, #82]	@ movhi
 752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 2893              		.loc 1 752 0
 2894 0054 0096     		str	r6, [sp]
 2895 0056 2046     		mov	r0, r4
 2896 0058 8021     		movs	r1, #128
 2897 005a 0022     		movs	r2, #0
 2898 005c 3B46     		mov	r3, r7
 2899 005e FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 2900              	.LVL242:
 2901 0062 68BB     		cbnz	r0, .L207
 756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 2902              		.loc 1 756 0
 2903 0064 A368     		ldr	r3, [r4, #8]
 2904 0066 B3F5805F 		cmp	r3, #4096
 2905 006a 08D1     		bne	.L200
 756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 2906              		.loc 1 756 0 is_stmt 0 discriminator 1
 2907 006c 2369     		ldr	r3, [r4, #16]
 2908 006e 33B9     		cbnz	r3, .L200
 2909              	.LVL243:
 759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pData += 2U;
 2910              		.loc 1 759 0 is_stmt 1
 2911 0070 2268     		ldr	r2, [r4]
 2912 0072 35F8023B 		ldrh	r3, [r5], #2
 2913              	.LVL244:
 2914 0076 C3F30803 		ubfx	r3, r3, #0, #9
 2915 007a 1385     		strh	r3, [r2, #40]	@ movhi
 2916              	.LVL245:
 760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 2917              		.loc 1 760 0
 2918 007c 03E0     		b	.L199
 2919              	.LVL246:
 2920              	.L200:
 764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 2921              		.loc 1 764 0
 2922 007e 2368     		ldr	r3, [r4]
 2923              	.LVL247:
 2924 0080 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 2925 0082 1A85     		strh	r2, [r3, #40]	@ movhi
 2926 0084 0135     		adds	r5, r5, #1
 2927              	.LVL248:
 2928              	.L199:
 749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2929              		.loc 1 749 0
 2930 0086 B4F85230 		ldrh	r3, [r4, #82]
 2931 008a 9BB2     		uxth	r3, r3
 2932 008c 002B     		cmp	r3, #0
 2933 008e DBD1     		bne	.L202
 767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2934              		.loc 1 767 0
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 105


 2935 0090 0096     		str	r6, [sp]
 2936 0092 2046     		mov	r0, r4
 2937 0094 4021     		movs	r1, #64
 2938 0096 0022     		movs	r2, #0
 2939 0098 3B46     		mov	r3, r7
 2940 009a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 2941              	.LVL249:
 2942 009e 0346     		mov	r3, r0
 2943 00a0 80B9     		cbnz	r0, .L208
 773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2944              		.loc 1 773 0
 2945 00a2 2022     		movs	r2, #32
 2946 00a4 84F86920 		strb	r2, [r4, #105]
 776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2947              		.loc 1 776 0
 2948 00a8 0022     		movs	r2, #0
 2949 00aa 84F86820 		strb	r2, [r4, #104]
 778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2950              		.loc 1 778 0
 2951 00ae 0AE0     		b	.L198
 2952              	.LVL250:
 2953              	.L203:
 782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2954              		.loc 1 782 0
 2955 00b0 0223     		movs	r3, #2
 2956 00b2 08E0     		b	.L198
 2957              	.L204:
 735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 2958              		.loc 1 735 0
 2959 00b4 0123     		movs	r3, #1
 2960 00b6 06E0     		b	.L198
 2961              	.L205:
 2962 00b8 0123     		movs	r3, #1
 2963 00ba 04E0     		b	.L198
 2964              	.L206:
 739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2965              		.loc 1 739 0
 2966 00bc 0223     		movs	r3, #2
 2967 00be 02E0     		b	.L198
 2968              	.LVL251:
 2969              	.L207:
 754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 2970              		.loc 1 754 0
 2971 00c0 0323     		movs	r3, #3
 2972 00c2 00E0     		b	.L198
 2973              	.L208:
 769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 2974              		.loc 1 769 0
 2975 00c4 0323     		movs	r3, #3
 2976              	.LVL252:
 2977              	.L198:
 784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2978              		.loc 1 784 0
 2979 00c6 1846     		mov	r0, r3
 2980 00c8 02B0     		add	sp, sp, #8
 2981              	.LCFI25:
 2982              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 106


 2983              		@ sp needed
 2984 00ca BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2985              		.cfi_endproc
 2986              	.LFE130:
 2988 00ce 00BF     		.section	.text.HAL_UART_Receive,"ax",%progbits
 2989              		.align	2
 2990              		.global	HAL_UART_Receive
 2991              		.thumb
 2992              		.thumb_func
 2994              	HAL_UART_Receive:
 2995              	.LFB131:
 795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
 2996              		.loc 1 795 0
 2997              		.cfi_startproc
 2998              		@ args = 0, pretend = 0, frame = 0
 2999              		@ frame_needed = 0, uses_anonymous_args = 0
 3000              	.LVL253:
 3001 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3002              	.LCFI26:
 3003              		.cfi_def_cfa_offset 24
 3004              		.cfi_offset 4, -24
 3005              		.cfi_offset 5, -20
 3006              		.cfi_offset 6, -16
 3007              		.cfi_offset 7, -12
 3008              		.cfi_offset 8, -8
 3009              		.cfi_offset 14, -4
 3010 0004 82B0     		sub	sp, sp, #8
 3011              	.LCFI27:
 3012              		.cfi_def_cfa_offset 32
 3013 0006 0446     		mov	r4, r0
 3014 0008 1E46     		mov	r6, r3
 3015              	.LVL254:
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3016              		.loc 1 801 0
 3017 000a 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 3018              	.LVL255:
 3019 000e DBB2     		uxtb	r3, r3
 3020 0010 202B     		cmp	r3, #32
 3021 0012 6ED1     		bne	.L222
 3022 0014 0D46     		mov	r5, r1
 3023 0016 9046     		mov	r8, r2
 803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3024              		.loc 1 803 0
 3025 0018 0029     		cmp	r1, #0
 3026 001a 6CD0     		beq	.L223
 803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3027              		.loc 1 803 0 is_stmt 0 discriminator 1
 3028 001c 002A     		cmp	r2, #0
 3029 001e 6CD0     		beq	.L224
 809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3030              		.loc 1 809 0 is_stmt 1
 3031 0020 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 3032 0024 012B     		cmp	r3, #1
 3033 0026 6AD0     		beq	.L225
 809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3034              		.loc 1 809 0 is_stmt 0 discriminator 2
 3035 0028 0123     		movs	r3, #1
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 107


 3036 002a 80F86830 		strb	r3, [r0, #104]
 811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 3037              		.loc 1 811 0 is_stmt 1 discriminator 2
 3038 002e 0023     		movs	r3, #0
 3039 0030 C366     		str	r3, [r0, #108]
 812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3040              		.loc 1 812 0 discriminator 2
 3041 0032 2223     		movs	r3, #34
 3042 0034 80F86A30 		strb	r3, [r0, #106]
 815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3043              		.loc 1 815 0 discriminator 2
 3044 0038 FFF7FEFF 		bl	HAL_GetTick
 3045              	.LVL256:
 3046 003c 0746     		mov	r7, r0
 3047              	.LVL257:
 817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = Size;
 3048              		.loc 1 817 0 discriminator 2
 3049 003e A4F85880 		strh	r8, [r4, #88]	@ movhi
 818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3050              		.loc 1 818 0 discriminator 2
 3051 0042 A4F85A80 		strh	r8, [r4, #90]	@ movhi
 821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3052              		.loc 1 821 0 discriminator 2
 3053 0046 A368     		ldr	r3, [r4, #8]
 3054 0048 B3F5805F 		cmp	r3, #4096
 3055 004c 0AD1     		bne	.L212
 821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3056              		.loc 1 821 0 is_stmt 0 discriminator 1
 3057 004e 2369     		ldr	r3, [r4, #16]
 3058 0050 23B9     		cbnz	r3, .L213
 821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3059              		.loc 1 821 0 discriminator 3
 3060 0052 40F2FF13 		movw	r3, #511
 3061 0056 A4F85C30 		strh	r3, [r4, #92]	@ movhi
 3062 005a 1AE0     		b	.L214
 3063              	.L213:
 821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3064              		.loc 1 821 0 discriminator 4
 3065 005c FF23     		movs	r3, #255
 3066 005e A4F85C30 		strh	r3, [r4, #92]	@ movhi
 3067 0062 16E0     		b	.L214
 3068              	.L212:
 821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3069              		.loc 1 821 0 discriminator 2
 3070 0064 4BB9     		cbnz	r3, .L215
 821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3071              		.loc 1 821 0 discriminator 5
 3072 0066 2369     		ldr	r3, [r4, #16]
 3073 0068 1BB9     		cbnz	r3, .L216
 821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3074              		.loc 1 821 0 discriminator 7
 3075 006a FF23     		movs	r3, #255
 3076 006c A4F85C30 		strh	r3, [r4, #92]	@ movhi
 3077 0070 0FE0     		b	.L214
 3078              	.L216:
 821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3079              		.loc 1 821 0 discriminator 8
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 108


 3080 0072 7F23     		movs	r3, #127
 3081 0074 A4F85C30 		strh	r3, [r4, #92]	@ movhi
 3082 0078 0BE0     		b	.L214
 3083              	.L215:
 821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3084              		.loc 1 821 0 discriminator 6
 3085 007a B3F1805F 		cmp	r3, #268435456
 3086 007e 08D1     		bne	.L214
 821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3087              		.loc 1 821 0 discriminator 9
 3088 0080 2369     		ldr	r3, [r4, #16]
 3089 0082 1BB9     		cbnz	r3, .L217
 821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3090              		.loc 1 821 0 discriminator 10
 3091 0084 7F23     		movs	r3, #127
 3092 0086 A4F85C30 		strh	r3, [r4, #92]	@ movhi
 3093 008a 02E0     		b	.L214
 3094              	.L217:
 821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3095              		.loc 1 821 0 discriminator 11
 3096 008c 3F23     		movs	r3, #63
 3097 008e A4F85C30 		strh	r3, [r4, #92]	@ movhi
 3098              	.L214:
 822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3099              		.loc 1 822 0 is_stmt 1
 3100 0092 B4F85C80 		ldrh	r8, [r4, #92]
 3101              	.LVL258:
 825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3102              		.loc 1 825 0
 3103 0096 20E0     		b	.L218
 3104              	.LVL259:
 3105              	.L221:
 827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 3106              		.loc 1 827 0
 3107 0098 B4F85A30 		ldrh	r3, [r4, #90]
 3108 009c 013B     		subs	r3, r3, #1
 3109 009e 9BB2     		uxth	r3, r3
 3110 00a0 A4F85A30 		strh	r3, [r4, #90]	@ movhi
 828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 3111              		.loc 1 828 0
 3112 00a4 0096     		str	r6, [sp]
 3113 00a6 2046     		mov	r0, r4
 3114 00a8 2021     		movs	r1, #32
 3115 00aa 0022     		movs	r2, #0
 3116 00ac 3B46     		mov	r3, r7
 3117 00ae FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3118              	.LVL260:
 3119 00b2 30BB     		cbnz	r0, .L226
 832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 3120              		.loc 1 832 0
 3121 00b4 A368     		ldr	r3, [r4, #8]
 3122 00b6 B3F5805F 		cmp	r3, #4096
 3123 00ba 08D1     		bne	.L219
 832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 3124              		.loc 1 832 0 is_stmt 0 discriminator 1
 3125 00bc 2369     		ldr	r3, [r4, #16]
 3126 00be 33B9     		cbnz	r3, .L219
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 109


 3127              	.LVL261:
 835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pData +=2U;
 3128              		.loc 1 835 0 is_stmt 1
 3129 00c0 2368     		ldr	r3, [r4]
 3130 00c2 9B8C     		ldrh	r3, [r3, #36]
 3131 00c4 08EA0303 		and	r3, r8, r3
 3132 00c8 25F8023B 		strh	r3, [r5], #2	@ movhi
 3133              	.LVL262:
 836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 3134              		.loc 1 836 0
 3135 00cc 05E0     		b	.L218
 3136              	.LVL263:
 3137              	.L219:
 840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 3138              		.loc 1 840 0
 3139 00ce 2368     		ldr	r3, [r4]
 3140 00d0 9B8C     		ldrh	r3, [r3, #36]
 3141 00d2 08EA0303 		and	r3, r8, r3
 3142 00d6 2B70     		strb	r3, [r5]
 3143 00d8 0135     		adds	r5, r5, #1
 3144              	.LVL264:
 3145              	.L218:
 825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3146              		.loc 1 825 0
 3147 00da B4F85A30 		ldrh	r3, [r4, #90]
 3148 00de 9BB2     		uxth	r3, r3
 3149 00e0 002B     		cmp	r3, #0
 3150 00e2 D9D1     		bne	.L221
 845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3151              		.loc 1 845 0
 3152 00e4 2023     		movs	r3, #32
 3153 00e6 84F86A30 		strb	r3, [r4, #106]
 848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3154              		.loc 1 848 0
 3155 00ea 0020     		movs	r0, #0
 3156 00ec 84F86800 		strb	r0, [r4, #104]
 850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3157              		.loc 1 850 0
 3158 00f0 08E0     		b	.L211
 3159              	.LVL265:
 3160              	.L222:
 854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3161              		.loc 1 854 0
 3162 00f2 0220     		movs	r0, #2
 3163              	.LVL266:
 3164 00f4 06E0     		b	.L211
 3165              	.LVL267:
 3166              	.L223:
 805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 3167              		.loc 1 805 0
 3168 00f6 0120     		movs	r0, #1
 3169              	.LVL268:
 3170 00f8 04E0     		b	.L211
 3171              	.LVL269:
 3172              	.L224:
 3173 00fa 0120     		movs	r0, #1
 3174              	.LVL270:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 110


 3175 00fc 02E0     		b	.L211
 3176              	.LVL271:
 3177              	.L225:
 809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3178              		.loc 1 809 0
 3179 00fe 0220     		movs	r0, #2
 3180              	.LVL272:
 3181 0100 00E0     		b	.L211
 3182              	.LVL273:
 3183              	.L226:
 830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 3184              		.loc 1 830 0
 3185 0102 0320     		movs	r0, #3
 3186              	.LVL274:
 3187              	.L211:
 856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3188              		.loc 1 856 0
 3189 0104 02B0     		add	sp, sp, #8
 3190              	.LCFI28:
 3191              		.cfi_def_cfa_offset 24
 3192              		@ sp needed
 3193 0106 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3194              		.cfi_endproc
 3195              	.LFE131:
 3197 010a 00BF     		.section	.text.UART_CheckIdleState,"ax",%progbits
 3198              		.align	2
 3199              		.global	UART_CheckIdleState
 3200              		.thumb
 3201              		.thumb_func
 3203              	UART_CheckIdleState:
 3204              	.LFB164:
2284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tickstart = 0U;
 3205              		.loc 1 2284 0
 3206              		.cfi_startproc
 3207              		@ args = 0, pretend = 0, frame = 0
 3208              		@ frame_needed = 0, uses_anonymous_args = 0
 3209              	.LVL275:
 3210 0000 30B5     		push	{r4, r5, lr}
 3211              	.LCFI29:
 3212              		.cfi_def_cfa_offset 12
 3213              		.cfi_offset 4, -12
 3214              		.cfi_offset 5, -8
 3215              		.cfi_offset 14, -4
 3216 0002 83B0     		sub	sp, sp, #12
 3217              	.LCFI30:
 3218              		.cfi_def_cfa_offset 24
 3219 0004 0446     		mov	r4, r0
 3220              	.LVL276:
2288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3221              		.loc 1 2288 0
 3222 0006 0023     		movs	r3, #0
 3223 0008 C366     		str	r3, [r0, #108]
2291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3224              		.loc 1 2291 0
 3225 000a FFF7FEFF 		bl	HAL_GetTick
 3226              	.LVL277:
 3227 000e 0546     		mov	r5, r0
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 111


 3228              	.LVL278:
2294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3229              		.loc 1 2294 0
 3230 0010 2368     		ldr	r3, [r4]
 3231 0012 1B68     		ldr	r3, [r3]
 3232 0014 13F0080F 		tst	r3, #8
 3233 0018 0AD0     		beq	.L229
2297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3234              		.loc 1 2297 0
 3235 001a 6FF07E43 		mvn	r3, #-33554432
 3236 001e 0093     		str	r3, [sp]
 3237 0020 2046     		mov	r0, r4
 3238              	.LVL279:
 3239 0022 4FF40011 		mov	r1, #2097152
 3240 0026 0022     		movs	r2, #0
 3241 0028 2B46     		mov	r3, r5
 3242 002a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3243              	.LVL280:
 3244 002e C0B9     		cbnz	r0, .L232
 3245              	.L229:
2304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3246              		.loc 1 2304 0
 3247 0030 2368     		ldr	r3, [r4]
 3248 0032 1B68     		ldr	r3, [r3]
 3249 0034 13F0040F 		tst	r3, #4
 3250 0038 0AD0     		beq	.L231
2307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3251              		.loc 1 2307 0
 3252 003a 6FF07E43 		mvn	r3, #-33554432
 3253 003e 0093     		str	r3, [sp]
 3254 0040 2046     		mov	r0, r4
 3255 0042 4FF48001 		mov	r1, #4194304
 3256 0046 0022     		movs	r2, #0
 3257 0048 2B46     		mov	r3, r5
 3258 004a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3259              	.LVL281:
 3260 004e 50B9     		cbnz	r0, .L233
 3261              	.L231:
2315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3262              		.loc 1 2315 0
 3263 0050 2023     		movs	r3, #32
 3264 0052 84F86930 		strb	r3, [r4, #105]
2316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3265              		.loc 1 2316 0
 3266 0056 84F86A30 		strb	r3, [r4, #106]
2319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3267              		.loc 1 2319 0
 3268 005a 0020     		movs	r0, #0
 3269 005c 84F86800 		strb	r0, [r4, #104]
2321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3270              		.loc 1 2321 0
 3271 0060 02E0     		b	.L230
 3272              	.L232:
2300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 3273              		.loc 1 2300 0
 3274 0062 0320     		movs	r0, #3
 3275 0064 00E0     		b	.L230
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 112


 3276              	.L233:
2310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 3277              		.loc 1 2310 0
 3278 0066 0320     		movs	r0, #3
 3279              	.L230:
2322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3280              		.loc 1 2322 0
 3281 0068 03B0     		add	sp, sp, #12
 3282              	.LCFI31:
 3283              		.cfi_def_cfa_offset 12
 3284              		@ sp needed
 3285 006a 30BD     		pop	{r4, r5, pc}
 3286              		.cfi_endproc
 3287              	.LFE164:
 3289              		.section	.text.HAL_UART_Init,"ax",%progbits
 3290              		.align	2
 3291              		.global	HAL_UART_Init
 3292              		.thumb
 3293              		.thumb_func
 3295              	HAL_UART_Init:
 3296              	.LFB123:
 297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 3297              		.loc 1 297 0
 3298              		.cfi_startproc
 3299              		@ args = 0, pretend = 0, frame = 0
 3300              		@ frame_needed = 0, uses_anonymous_args = 0
 3301              	.LVL282:
 299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3302              		.loc 1 299 0
 3303 0000 80B3     		cbz	r0, .L239
 297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 3304              		.loc 1 297 0
 3305 0002 10B5     		push	{r4, lr}
 3306              	.LCFI32:
 3307              		.cfi_def_cfa_offset 8
 3308              		.cfi_offset 4, -8
 3309              		.cfi_offset 14, -4
 3310 0004 0446     		mov	r4, r0
 315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3311              		.loc 1 315 0
 3312 0006 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 3313 000a 13F0FF0F 		tst	r3, #255
 3314 000e 04D1     		bne	.L237
 318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3315              		.loc 1 318 0
 3316 0010 0023     		movs	r3, #0
 3317 0012 80F86830 		strb	r3, [r0, #104]
 321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3318              		.loc 1 321 0
 3319 0016 FFF7FEFF 		bl	HAL_UART_MspInit
 3320              	.LVL283:
 3321              	.L237:
 324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3322              		.loc 1 324 0
 3323 001a 2423     		movs	r3, #36
 3324 001c 84F86930 		strb	r3, [r4, #105]
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 113


 3325              		.loc 1 327 0
 3326 0020 2268     		ldr	r2, [r4]
 3327 0022 1368     		ldr	r3, [r2]
 3328 0024 23F00103 		bic	r3, r3, #1
 3329 0028 1360     		str	r3, [r2]
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3330              		.loc 1 330 0
 3331 002a 2046     		mov	r0, r4
 3332 002c FFF7FEFF 		bl	UART_SetConfig
 3333              	.LVL284:
 3334 0030 0128     		cmp	r0, #1
 3335 0032 19D0     		beq	.L236
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3336              		.loc 1 335 0
 3337 0034 636A     		ldr	r3, [r4, #36]
 3338 0036 13B1     		cbz	r3, .L238
 337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3339              		.loc 1 337 0
 3340 0038 2046     		mov	r0, r4
 3341 003a FFF7FEFF 		bl	UART_AdvFeatureConfig
 3342              	.LVL285:
 3343              	.L238:
 343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 3344              		.loc 1 343 0
 3345 003e 2268     		ldr	r2, [r4]
 3346 0040 5368     		ldr	r3, [r2, #4]
 3347 0042 23F49043 		bic	r3, r3, #18432
 3348 0046 5360     		str	r3, [r2, #4]
 344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3349              		.loc 1 344 0
 3350 0048 2268     		ldr	r2, [r4]
 3351 004a 9368     		ldr	r3, [r2, #8]
 3352 004c 23F02A03 		bic	r3, r3, #42
 3353 0050 9360     		str	r3, [r2, #8]
 347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3354              		.loc 1 347 0
 3355 0052 2268     		ldr	r2, [r4]
 3356 0054 1368     		ldr	r3, [r2]
 3357 0056 43F00103 		orr	r3, r3, #1
 3358 005a 1360     		str	r3, [r2]
 350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3359              		.loc 1 350 0
 3360 005c 2046     		mov	r0, r4
 3361 005e FFF7FEFF 		bl	UART_CheckIdleState
 3362              	.LVL286:
 3363 0062 10BD     		pop	{r4, pc}
 3364              	.LVL287:
 3365              	.L239:
 3366              	.LCFI33:
 3367              		.cfi_def_cfa_offset 0
 3368              		.cfi_restore 4
 3369              		.cfi_restore 14
 301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3370              		.loc 1 301 0
 3371 0064 0120     		movs	r0, #1
 3372              	.LVL288:
 3373 0066 7047     		bx	lr
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 114


 3374              	.LVL289:
 3375              	.L236:
 3376              	.LCFI34:
 3377              		.cfi_def_cfa_offset 8
 3378              		.cfi_offset 4, -8
 3379              		.cfi_offset 14, -4
 351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3380              		.loc 1 351 0
 3381 0068 10BD     		pop	{r4, pc}
 3382              		.cfi_endproc
 3383              	.LFE123:
 3385 006a 00BF     		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 3386              		.align	2
 3387              		.global	HAL_HalfDuplex_Init
 3388              		.thumb
 3389              		.thumb_func
 3391              	HAL_HalfDuplex_Init:
 3392              	.LFB124:
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 3393              		.loc 1 360 0
 3394              		.cfi_startproc
 3395              		@ args = 0, pretend = 0, frame = 0
 3396              		@ frame_needed = 0, uses_anonymous_args = 0
 3397              	.LVL290:
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3398              		.loc 1 362 0
 3399 0000 0028     		cmp	r0, #0
 3400 0002 35D0     		beq	.L246
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 3401              		.loc 1 360 0
 3402 0004 10B5     		push	{r4, lr}
 3403              	.LCFI35:
 3404              		.cfi_def_cfa_offset 8
 3405              		.cfi_offset 4, -8
 3406              		.cfi_offset 14, -4
 3407 0006 0446     		mov	r4, r0
 370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3408              		.loc 1 370 0
 3409 0008 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 3410 000c 13F0FF0F 		tst	r3, #255
 3411 0010 04D1     		bne	.L244
 373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3412              		.loc 1 373 0
 3413 0012 0023     		movs	r3, #0
 3414 0014 80F86830 		strb	r3, [r0, #104]
 376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3415              		.loc 1 376 0
 3416 0018 FFF7FEFF 		bl	HAL_UART_MspInit
 3417              	.LVL291:
 3418              	.L244:
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3419              		.loc 1 379 0
 3420 001c 2423     		movs	r3, #36
 3421 001e 84F86930 		strb	r3, [r4, #105]
 382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3422              		.loc 1 382 0
 3423 0022 2268     		ldr	r2, [r4]
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 115


 3424 0024 1368     		ldr	r3, [r2]
 3425 0026 23F00103 		bic	r3, r3, #1
 3426 002a 1360     		str	r3, [r2]
 385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3427              		.loc 1 385 0
 3428 002c 2046     		mov	r0, r4
 3429 002e FFF7FEFF 		bl	UART_SetConfig
 3430              	.LVL292:
 3431 0032 0128     		cmp	r0, #1
 3432 0034 1ED0     		beq	.L243
 390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3433              		.loc 1 390 0
 3434 0036 636A     		ldr	r3, [r4, #36]
 3435 0038 13B1     		cbz	r3, .L245
 392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3436              		.loc 1 392 0
 3437 003a 2046     		mov	r0, r4
 3438 003c FFF7FEFF 		bl	UART_AdvFeatureConfig
 3439              	.LVL293:
 3440              	.L245:
 398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 3441              		.loc 1 398 0
 3442 0040 2268     		ldr	r2, [r4]
 3443 0042 5368     		ldr	r3, [r2, #4]
 3444 0044 23F49043 		bic	r3, r3, #18432
 3445 0048 5360     		str	r3, [r2, #4]
 399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3446              		.loc 1 399 0
 3447 004a 2268     		ldr	r2, [r4]
 3448 004c 9368     		ldr	r3, [r2, #8]
 3449 004e 23F02203 		bic	r3, r3, #34
 3450 0052 9360     		str	r3, [r2, #8]
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3451              		.loc 1 402 0
 3452 0054 2268     		ldr	r2, [r4]
 3453 0056 9368     		ldr	r3, [r2, #8]
 3454 0058 43F00803 		orr	r3, r3, #8
 3455 005c 9360     		str	r3, [r2, #8]
 405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3456              		.loc 1 405 0
 3457 005e 2268     		ldr	r2, [r4]
 3458 0060 1368     		ldr	r3, [r2]
 3459 0062 43F00103 		orr	r3, r3, #1
 3460 0066 1360     		str	r3, [r2]
 408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3461              		.loc 1 408 0
 3462 0068 2046     		mov	r0, r4
 3463 006a FFF7FEFF 		bl	UART_CheckIdleState
 3464              	.LVL294:
 3465 006e 10BD     		pop	{r4, pc}
 3466              	.LVL295:
 3467              	.L246:
 3468              	.LCFI36:
 3469              		.cfi_def_cfa_offset 0
 3470              		.cfi_restore 4
 3471              		.cfi_restore 14
 364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 116


 3472              		.loc 1 364 0
 3473 0070 0120     		movs	r0, #1
 3474              	.LVL296:
 3475 0072 7047     		bx	lr
 3476              	.LVL297:
 3477              	.L243:
 3478              	.LCFI37:
 3479              		.cfi_def_cfa_offset 8
 3480              		.cfi_offset 4, -8
 3481              		.cfi_offset 14, -4
 409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3482              		.loc 1 409 0
 3483 0074 10BD     		pop	{r4, pc}
 3484              		.cfi_endproc
 3485              	.LFE124:
 3487 0076 00BF     		.section	.text.HAL_LIN_Init,"ax",%progbits
 3488              		.align	2
 3489              		.global	HAL_LIN_Init
 3490              		.thumb
 3491              		.thumb_func
 3493              	HAL_LIN_Init:
 3494              	.LFB125:
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 3495              		.loc 1 423 0
 3496              		.cfi_startproc
 3497              		@ args = 0, pretend = 0, frame = 0
 3498              		@ frame_needed = 0, uses_anonymous_args = 0
 3499              	.LVL298:
 425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3500              		.loc 1 425 0
 3501 0000 0028     		cmp	r0, #0
 3502 0002 43D0     		beq	.L253
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 3503              		.loc 1 423 0
 3504 0004 38B5     		push	{r3, r4, r5, lr}
 3505              	.LCFI38:
 3506              		.cfi_def_cfa_offset 16
 3507              		.cfi_offset 3, -16
 3508              		.cfi_offset 4, -12
 3509              		.cfi_offset 5, -8
 3510              		.cfi_offset 14, -4
 3511 0006 0446     		mov	r4, r0
 436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3512              		.loc 1 436 0
 3513 0008 C369     		ldr	r3, [r0, #28]
 3514 000a B3F5004F 		cmp	r3, #32768
 3515 000e 3FD0     		beq	.L254
 441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3516              		.loc 1 441 0
 3517 0010 8368     		ldr	r3, [r0, #8]
 3518 0012 002B     		cmp	r3, #0
 3519 0014 3ED1     		bne	.L255
 3520 0016 0D46     		mov	r5, r1
 446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3521              		.loc 1 446 0
 3522 0018 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 3523 001c 13F0FF0F 		tst	r3, #255
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 117


 3524 0020 04D1     		bne	.L251
 449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3525              		.loc 1 449 0
 3526 0022 0023     		movs	r3, #0
 3527 0024 80F86830 		strb	r3, [r0, #104]
 452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3528              		.loc 1 452 0
 3529 0028 FFF7FEFF 		bl	HAL_UART_MspInit
 3530              	.LVL299:
 3531              	.L251:
 455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3532              		.loc 1 455 0
 3533 002c 2423     		movs	r3, #36
 3534 002e 84F86930 		strb	r3, [r4, #105]
 458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3535              		.loc 1 458 0
 3536 0032 2268     		ldr	r2, [r4]
 3537 0034 1368     		ldr	r3, [r2]
 3538 0036 23F00103 		bic	r3, r3, #1
 3539 003a 1360     		str	r3, [r2]
 461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3540              		.loc 1 461 0
 3541 003c 2046     		mov	r0, r4
 3542 003e FFF7FEFF 		bl	UART_SetConfig
 3543              	.LVL300:
 3544 0042 0128     		cmp	r0, #1
 3545 0044 27D0     		beq	.L250
 466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3546              		.loc 1 466 0
 3547 0046 636A     		ldr	r3, [r4, #36]
 3548 0048 13B1     		cbz	r3, .L252
 468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3549              		.loc 1 468 0
 3550 004a 2046     		mov	r0, r4
 3551 004c FFF7FEFF 		bl	UART_AdvFeatureConfig
 3552              	.LVL301:
 3553              	.L252:
 474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 3554              		.loc 1 474 0
 3555 0050 2268     		ldr	r2, [r4]
 3556 0052 5368     		ldr	r3, [r2, #4]
 3557 0054 23F40063 		bic	r3, r3, #2048
 3558 0058 5360     		str	r3, [r2, #4]
 475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3559              		.loc 1 475 0
 3560 005a 2268     		ldr	r2, [r4]
 3561 005c 9368     		ldr	r3, [r2, #8]
 3562 005e 23F02A03 		bic	r3, r3, #42
 3563 0062 9360     		str	r3, [r2, #8]
 478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3564              		.loc 1 478 0
 3565 0064 2268     		ldr	r2, [r4]
 3566 0066 5368     		ldr	r3, [r2, #4]
 3567 0068 43F48043 		orr	r3, r3, #16384
 3568 006c 5360     		str	r3, [r2, #4]
 481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3569              		.loc 1 481 0
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 118


 3570 006e 2368     		ldr	r3, [r4]
 3571 0070 5968     		ldr	r1, [r3, #4]
 3572 0072 21F02001 		bic	r1, r1, #32
 3573 0076 2943     		orrs	r1, r1, r5
 3574 0078 5960     		str	r1, [r3, #4]
 484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3575              		.loc 1 484 0
 3576 007a 2268     		ldr	r2, [r4]
 3577 007c 1368     		ldr	r3, [r2]
 3578 007e 43F00103 		orr	r3, r3, #1
 3579 0082 1360     		str	r3, [r2]
 487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3580              		.loc 1 487 0
 3581 0084 2046     		mov	r0, r4
 3582 0086 FFF7FEFF 		bl	UART_CheckIdleState
 3583              	.LVL302:
 3584 008a 38BD     		pop	{r3, r4, r5, pc}
 3585              	.LVL303:
 3586              	.L253:
 3587              	.LCFI39:
 3588              		.cfi_def_cfa_offset 0
 3589              		.cfi_restore 3
 3590              		.cfi_restore 4
 3591              		.cfi_restore 5
 3592              		.cfi_restore 14
 427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3593              		.loc 1 427 0
 3594 008c 0120     		movs	r0, #1
 3595              	.LVL304:
 488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3596              		.loc 1 488 0
 3597 008e 7047     		bx	lr
 3598              	.LVL305:
 3599              	.L254:
 3600              	.LCFI40:
 3601              		.cfi_def_cfa_offset 16
 3602              		.cfi_offset 3, -16
 3603              		.cfi_offset 4, -12
 3604              		.cfi_offset 5, -8
 3605              		.cfi_offset 14, -4
 438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3606              		.loc 1 438 0
 3607 0090 0120     		movs	r0, #1
 3608              	.LVL306:
 3609 0092 38BD     		pop	{r3, r4, r5, pc}
 3610              	.LVL307:
 3611              	.L255:
 443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3612              		.loc 1 443 0
 3613 0094 0120     		movs	r0, #1
 3614              	.LVL308:
 3615              	.L250:
 488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3616              		.loc 1 488 0
 3617 0096 38BD     		pop	{r3, r4, r5, pc}
 3618              		.cfi_endproc
 3619              	.LFE125:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 119


 3621              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 3622              		.align	2
 3623              		.global	HAL_MultiProcessor_Init
 3624              		.thumb
 3625              		.thumb_func
 3627              	HAL_MultiProcessor_Init:
 3628              	.LFB126:
 510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 3629              		.loc 1 510 0
 3630              		.cfi_startproc
 3631              		@ args = 0, pretend = 0, frame = 0
 3632              		@ frame_needed = 0, uses_anonymous_args = 0
 3633              	.LVL309:
 512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3634              		.loc 1 512 0
 3635 0000 0028     		cmp	r0, #0
 3636 0002 42D0     		beq	.L262
 510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 3637              		.loc 1 510 0
 3638 0004 70B5     		push	{r4, r5, r6, lr}
 3639              	.LCFI41:
 3640              		.cfi_def_cfa_offset 16
 3641              		.cfi_offset 4, -16
 3642              		.cfi_offset 5, -12
 3643              		.cfi_offset 6, -8
 3644              		.cfi_offset 14, -4
 3645 0006 0446     		mov	r4, r0
 3646 0008 1546     		mov	r5, r2
 3647 000a 0E46     		mov	r6, r1
 520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3648              		.loc 1 520 0
 3649 000c 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 3650 0010 13F0FF0F 		tst	r3, #255
 3651 0014 04D1     		bne	.L259
 523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3652              		.loc 1 523 0
 3653 0016 0023     		movs	r3, #0
 3654 0018 80F86830 		strb	r3, [r0, #104]
 526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3655              		.loc 1 526 0
 3656 001c FFF7FEFF 		bl	HAL_UART_MspInit
 3657              	.LVL310:
 3658              	.L259:
 529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3659              		.loc 1 529 0
 3660 0020 2423     		movs	r3, #36
 3661 0022 84F86930 		strb	r3, [r4, #105]
 532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3662              		.loc 1 532 0
 3663 0026 2268     		ldr	r2, [r4]
 3664 0028 1368     		ldr	r3, [r2]
 3665 002a 23F00103 		bic	r3, r3, #1
 3666 002e 1360     		str	r3, [r2]
 535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3667              		.loc 1 535 0
 3668 0030 2046     		mov	r0, r4
 3669 0032 FFF7FEFF 		bl	UART_SetConfig
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 120


 3670              	.LVL311:
 3671 0036 0128     		cmp	r0, #1
 3672 0038 29D0     		beq	.L258
 540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3673              		.loc 1 540 0
 3674 003a 636A     		ldr	r3, [r4, #36]
 3675 003c 13B1     		cbz	r3, .L260
 542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3676              		.loc 1 542 0
 3677 003e 2046     		mov	r0, r4
 3678 0040 FFF7FEFF 		bl	UART_AdvFeatureConfig
 3679              	.LVL312:
 3680              	.L260:
 548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 3681              		.loc 1 548 0
 3682 0044 2268     		ldr	r2, [r4]
 3683 0046 5368     		ldr	r3, [r2, #4]
 3684 0048 23F49043 		bic	r3, r3, #18432
 3685 004c 5360     		str	r3, [r2, #4]
 549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3686              		.loc 1 549 0
 3687 004e 2268     		ldr	r2, [r4]
 3688 0050 9368     		ldr	r3, [r2, #8]
 3689 0052 23F02A03 		bic	r3, r3, #42
 3690 0056 9360     		str	r3, [r2, #8]
 551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3691              		.loc 1 551 0
 3692 0058 B5F5006F 		cmp	r5, #2048
 3693 005c 06D1     		bne	.L261
 554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3694              		.loc 1 554 0
 3695 005e 2368     		ldr	r3, [r4]
 3696 0060 5968     		ldr	r1, [r3, #4]
 3697 0062 21F07F41 		bic	r1, r1, #-16777216
 3698 0066 41EA0666 		orr	r6, r1, r6, lsl #24
 3699 006a 5E60     		str	r6, [r3, #4]
 3700              	.L261:
 558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3701              		.loc 1 558 0
 3702 006c 2368     		ldr	r3, [r4]
 3703 006e 1A68     		ldr	r2, [r3]
 3704 0070 22F40062 		bic	r2, r2, #2048
 3705 0074 1543     		orrs	r5, r5, r2
 3706              	.LVL313:
 3707 0076 1D60     		str	r5, [r3]
 561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3708              		.loc 1 561 0
 3709 0078 2268     		ldr	r2, [r4]
 3710 007a 1368     		ldr	r3, [r2]
 3711 007c 43F00103 		orr	r3, r3, #1
 3712 0080 1360     		str	r3, [r2]
 564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3713              		.loc 1 564 0
 3714 0082 2046     		mov	r0, r4
 3715 0084 FFF7FEFF 		bl	UART_CheckIdleState
 3716              	.LVL314:
 3717 0088 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 121


 3718              	.LVL315:
 3719              	.L262:
 3720              	.LCFI42:
 3721              		.cfi_def_cfa_offset 0
 3722              		.cfi_restore 4
 3723              		.cfi_restore 5
 3724              		.cfi_restore 6
 3725              		.cfi_restore 14
 514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3726              		.loc 1 514 0
 3727 008a 0120     		movs	r0, #1
 3728              	.LVL316:
 3729 008c 7047     		bx	lr
 3730              	.LVL317:
 3731              	.L258:
 3732              	.LCFI43:
 3733              		.cfi_def_cfa_offset 16
 3734              		.cfi_offset 4, -16
 3735              		.cfi_offset 5, -12
 3736              		.cfi_offset 6, -8
 3737              		.cfi_offset 14, -4
 565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3738              		.loc 1 565 0
 3739 008e 70BD     		pop	{r4, r5, r6, pc}
 3740              		.cfi_endproc
 3741              	.LFE126:
 3743              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 3744              		.align	2
 3745              		.global	HAL_MultiProcessor_EnableMuteMode
 3746              		.thumb
 3747              		.thumb_func
 3749              	HAL_MultiProcessor_EnableMuteMode:
 3750              	.LFB154:
1915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
 3751              		.loc 1 1915 0
 3752              		.cfi_startproc
 3753              		@ args = 0, pretend = 0, frame = 0
 3754              		@ frame_needed = 0, uses_anonymous_args = 0
 3755              	.LVL318:
 3756 0000 08B5     		push	{r3, lr}
 3757              	.LCFI44:
 3758              		.cfi_def_cfa_offset 8
 3759              		.cfi_offset 3, -8
 3760              		.cfi_offset 14, -4
1917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3761              		.loc 1 1917 0
 3762 0002 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 3763 0006 012B     		cmp	r3, #1
 3764 0008 10D0     		beq	.L267
1917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3765              		.loc 1 1917 0 is_stmt 0 discriminator 2
 3766 000a 0123     		movs	r3, #1
 3767 000c 80F86830 		strb	r3, [r0, #104]
1919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3768              		.loc 1 1919 0 is_stmt 1 discriminator 2
 3769 0010 2423     		movs	r3, #36
 3770 0012 80F86930 		strb	r3, [r0, #105]
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 122


1922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3771              		.loc 1 1922 0 discriminator 2
 3772 0016 0268     		ldr	r2, [r0]
 3773 0018 1368     		ldr	r3, [r2]
 3774 001a 43F40053 		orr	r3, r3, #8192
 3775 001e 1360     		str	r3, [r2]
1924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3776              		.loc 1 1924 0 discriminator 2
 3777 0020 2023     		movs	r3, #32
 3778 0022 80F86930 		strb	r3, [r0, #105]
1926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3779              		.loc 1 1926 0 discriminator 2
 3780 0026 FFF7FEFF 		bl	UART_CheckIdleState
 3781              	.LVL319:
 3782 002a 08BD     		pop	{r3, pc}
 3783              	.LVL320:
 3784              	.L267:
1917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3785              		.loc 1 1917 0
 3786 002c 0220     		movs	r0, #2
 3787              	.LVL321:
1927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3788              		.loc 1 1927 0
 3789 002e 08BD     		pop	{r3, pc}
 3790              		.cfi_endproc
 3791              	.LFE154:
 3793              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 3794              		.align	2
 3795              		.global	HAL_MultiProcessor_DisableMuteMode
 3796              		.thumb
 3797              		.thumb_func
 3799              	HAL_MultiProcessor_DisableMuteMode:
 3800              	.LFB155:
1936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
 3801              		.loc 1 1936 0
 3802              		.cfi_startproc
 3803              		@ args = 0, pretend = 0, frame = 0
 3804              		@ frame_needed = 0, uses_anonymous_args = 0
 3805              	.LVL322:
 3806 0000 08B5     		push	{r3, lr}
 3807              	.LCFI45:
 3808              		.cfi_def_cfa_offset 8
 3809              		.cfi_offset 3, -8
 3810              		.cfi_offset 14, -4
1938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3811              		.loc 1 1938 0
 3812 0002 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 3813 0006 012B     		cmp	r3, #1
 3814 0008 10D0     		beq	.L271
1938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3815              		.loc 1 1938 0 is_stmt 0 discriminator 2
 3816 000a 0123     		movs	r3, #1
 3817 000c 80F86830 		strb	r3, [r0, #104]
1940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3818              		.loc 1 1940 0 is_stmt 1 discriminator 2
 3819 0010 2423     		movs	r3, #36
 3820 0012 80F86930 		strb	r3, [r0, #105]
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 123


1943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3821              		.loc 1 1943 0 discriminator 2
 3822 0016 0268     		ldr	r2, [r0]
 3823 0018 1368     		ldr	r3, [r2]
 3824 001a 23F40053 		bic	r3, r3, #8192
 3825 001e 1360     		str	r3, [r2]
1945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3826              		.loc 1 1945 0 discriminator 2
 3827 0020 2023     		movs	r3, #32
 3828 0022 80F86930 		strb	r3, [r0, #105]
1947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3829              		.loc 1 1947 0 discriminator 2
 3830 0026 FFF7FEFF 		bl	UART_CheckIdleState
 3831              	.LVL323:
 3832 002a 08BD     		pop	{r3, pc}
 3833              	.LVL324:
 3834              	.L271:
1938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3835              		.loc 1 1938 0
 3836 002c 0220     		movs	r0, #2
 3837              	.LVL325:
1948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3838              		.loc 1 1948 0
 3839 002e 08BD     		pop	{r3, pc}
 3840              		.cfi_endproc
 3841              	.LFE155:
 3843              		.section	.text.UART_Transmit_IT,"ax",%progbits
 3844              		.align	2
 3845              		.global	UART_Transmit_IT
 3846              		.thumb
 3847              		.thumb_func
 3849              	UART_Transmit_IT:
 3850              	.LFB178:
2644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Send an amount of data in interrupt mode.
2648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   Function is called under interruption only, once
2649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
2650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
2654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 3851              		.loc 1 2654 0
 3852              		.cfi_startproc
 3853              		@ args = 0, pretend = 0, frame = 0
 3854              		@ frame_needed = 0, uses_anonymous_args = 0
 3855              		@ link register save eliminated.
 3856              	.LVL326:
2655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
2656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
2658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 3857              		.loc 1 2658 0
 3858 0000 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 3859 0004 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 124


 3860 0006 212B     		cmp	r3, #33
 3861 0008 2DD1     		bne	.L278
2659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->TxXferCount == 0U)
 3862              		.loc 1 2660 0
 3863 000a B0F85230 		ldrh	r3, [r0, #82]
 3864 000e 9BB2     		uxth	r3, r3
 3865 0010 5BB9     		cbnz	r3, .L275
2661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
2663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 3866              		.loc 1 2663 0
 3867 0012 0268     		ldr	r2, [r0]
 3868 0014 1368     		ldr	r3, [r2]
 3869 0016 23F08003 		bic	r3, r3, #128
 3870 001a 1360     		str	r3, [r2]
2664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
2666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 3871              		.loc 1 2666 0
 3872 001c 0268     		ldr	r2, [r0]
 3873 001e 1368     		ldr	r3, [r2]
 3874 0020 43F04003 		orr	r3, r3, #64
 3875 0024 1360     		str	r3, [r2]
2667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_OK;
 3876              		.loc 1 2668 0
 3877 0026 0020     		movs	r0, #0
 3878              	.LVL327:
 3879 0028 7047     		bx	lr
 3880              	.LVL328:
 3881              	.L275:
2669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
2671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 3882              		.loc 1 2672 0
 3883 002a 8368     		ldr	r3, [r0, #8]
 3884 002c B3F5805F 		cmp	r3, #4096
 3885 0030 0BD1     		bne	.L276
 3886              		.loc 1 2672 0 is_stmt 0 discriminator 1
 3887 0032 0369     		ldr	r3, [r0, #16]
 3888 0034 4BB9     		cbnz	r3, .L276
2673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
2674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         tmp = (uint16_t*) huart->pTxBuffPtr;
 3889              		.loc 1 2674 0 is_stmt 1
 3890 0036 C36C     		ldr	r3, [r0, #76]
 3891              	.LVL329:
2675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
 3892              		.loc 1 2675 0
 3893 0038 0268     		ldr	r2, [r0]
 3894 003a 1B88     		ldrh	r3, [r3]
 3895              	.LVL330:
 3896 003c C3F30803 		ubfx	r3, r3, #0, #9
 3897 0040 1385     		strh	r3, [r2, #40]	@ movhi
 3898              	.LVL331:
2676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 125


 3899              		.loc 1 2676 0
 3900 0042 C36C     		ldr	r3, [r0, #76]
 3901 0044 0233     		adds	r3, r3, #2
 3902 0046 C364     		str	r3, [r0, #76]
 3903 0048 05E0     		b	.L277
 3904              	.L276:
2677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
2678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
2679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
2680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0xFFU);
 3905              		.loc 1 2680 0
 3906 004a 0268     		ldr	r2, [r0]
 3907 004c C36C     		ldr	r3, [r0, #76]
 3908 004e 591C     		adds	r1, r3, #1
 3909 0050 C164     		str	r1, [r0, #76]
 3910 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3911 0054 1385     		strh	r3, [r2, #40]	@ movhi
 3912              	.L277:
2681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
2682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxXferCount--;
 3913              		.loc 1 2682 0
 3914 0056 B0F85230 		ldrh	r3, [r0, #82]
 3915 005a 013B     		subs	r3, r3, #1
 3916 005c 9BB2     		uxth	r3, r3
 3917 005e A0F85230 		strh	r3, [r0, #82]	@ movhi
2683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_OK;
 3918              		.loc 1 2684 0
 3919 0062 0020     		movs	r0, #0
 3920              	.LVL332:
 3921 0064 7047     		bx	lr
 3922              	.LVL333:
 3923              	.L278:
2685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
2688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 3924              		.loc 1 2689 0
 3925 0066 0220     		movs	r0, #2
 3926              	.LVL334:
2690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3927              		.loc 1 2691 0
 3928 0068 7047     		bx	lr
 3929              		.cfi_endproc
 3930              	.LFE178:
 3932 006a 00BF     		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 3933              		.align	2
 3934              		.global	UART_EndTransmit_IT
 3935              		.thumb
 3936              		.thumb_func
 3938              	UART_EndTransmit_IT:
 3939              	.LFB179:
2692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 126


2695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
2696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *               the configuration information for the specified UART module.
2697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
2700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 3940              		.loc 1 2700 0
 3941              		.cfi_startproc
 3942              		@ args = 0, pretend = 0, frame = 0
 3943              		@ frame_needed = 0, uses_anonymous_args = 0
 3944              	.LVL335:
 3945 0000 08B5     		push	{r3, lr}
 3946              	.LCFI46:
 3947              		.cfi_def_cfa_offset 8
 3948              		.cfi_offset 3, -8
 3949              		.cfi_offset 14, -4
2701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
2702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 3950              		.loc 1 2702 0
 3951 0002 0168     		ldr	r1, [r0]
 3952 0004 0B68     		ldr	r3, [r1]
 3953 0006 23F04003 		bic	r3, r3, #64
 3954 000a 0B60     		str	r3, [r1]
2703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
2705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3955              		.loc 1 2705 0
 3956 000c 2023     		movs	r3, #32
 3957 000e 80F86930 		strb	r3, [r0, #105]
2706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 3958              		.loc 1 2707 0
 3959 0012 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 3960              	.LVL336:
2708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
2710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3961              		.loc 1 2710 0
 3962 0016 0020     		movs	r0, #0
 3963 0018 08BD     		pop	{r3, pc}
 3964              		.cfi_endproc
 3965              	.LFE179:
 3967 001a 00BF     		.section	.text.UART_Receive_IT,"ax",%progbits
 3968              		.align	2
 3969              		.global	UART_Receive_IT
 3970              		.thumb
 3971              		.thumb_func
 3973              	UART_Receive_IT:
 3974              	.LFB180:
2711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Receive an amount of data in interrupt mode.
2714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   Function is called under interruption only, once
2715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
2716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 127


2719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
2720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 3975              		.loc 1 2720 0
 3976              		.cfi_startproc
 3977              		@ args = 0, pretend = 0, frame = 0
 3978              		@ frame_needed = 0, uses_anonymous_args = 0
 3979              	.LVL337:
2721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
2722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t  uhMask = huart->Mask;
 3980              		.loc 1 2722 0
 3981 0000 B0F85C20 		ldrh	r2, [r0, #92]
 3982              	.LVL338:
2723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t  uhdata;
2724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
2726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
 3983              		.loc 1 2726 0
 3984 0004 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 3985 0008 DBB2     		uxtb	r3, r3
 3986 000a 222B     		cmp	r3, #34
 3987 000c 2DD1     		bne	.L282
2720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
 3988              		.loc 1 2720 0
 3989 000e 10B5     		push	{r4, lr}
 3990              	.LCFI47:
 3991              		.cfi_def_cfa_offset 8
 3992              		.cfi_offset 4, -8
 3993              		.cfi_offset 14, -4
2727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 3994              		.loc 1 2728 0
 3995 0010 0368     		ldr	r3, [r0]
 3996 0012 9B8C     		ldrh	r3, [r3, #36]
 3997 0014 9BB2     		uxth	r3, r3
 3998              	.LVL339:
2729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 3999              		.loc 1 2729 0
 4000 0016 8168     		ldr	r1, [r0, #8]
 4001 0018 B1F5805F 		cmp	r1, #4096
 4002 001c 08D1     		bne	.L283
 4003              		.loc 1 2729 0 is_stmt 0 discriminator 1
 4004 001e 0169     		ldr	r1, [r0, #16]
 4005 0020 31B9     		cbnz	r1, .L283
2730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       tmp = (uint16_t*) huart->pRxBuffPtr ;
 4006              		.loc 1 2731 0 is_stmt 1
 4007 0022 416D     		ldr	r1, [r0, #84]
 4008              	.LVL340:
2732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       *tmp = (uint16_t)(uhdata & uhMask);
 4009              		.loc 1 2732 0
 4010 0024 1A40     		ands	r2, r2, r3
 4011              	.LVL341:
 4012 0026 0A80     		strh	r2, [r1]	@ movhi
 4013              	.LVL342:
2733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->pRxBuffPtr +=2U;
 4014              		.loc 1 2733 0
 4015 0028 436D     		ldr	r3, [r0, #84]
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 128


 4016              	.LVL343:
 4017 002a 0233     		adds	r3, r3, #2
 4018 002c 4365     		str	r3, [r0, #84]
 4019 002e 04E0     		b	.L284
 4020              	.LVL344:
 4021              	.L283:
2734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
2736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       *huart->pRxBuffPtr++ = (uint8_t)(uhdata & (uint8_t)uhMask);
 4022              		.loc 1 2737 0
 4023 0030 416D     		ldr	r1, [r0, #84]
 4024 0032 4C1C     		adds	r4, r1, #1
 4025 0034 4465     		str	r4, [r0, #84]
 4026 0036 1A40     		ands	r2, r2, r3
 4027              	.LVL345:
 4028 0038 0A70     		strb	r2, [r1]
 4029              	.LVL346:
 4030              	.L284:
2738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(--huart->RxXferCount == 0U)
 4031              		.loc 1 2740 0
 4032 003a B0F85A30 		ldrh	r3, [r0, #90]
 4033 003e 013B     		subs	r3, r3, #1
 4034 0040 9BB2     		uxth	r3, r3
 4035 0042 A0F85A30 		strh	r3, [r0, #90]	@ movhi
 4036 0046 BBB9     		cbnz	r3, .L286
2741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
2743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 4037              		.loc 1 2743 0
 4038 0048 0268     		ldr	r2, [r0]
 4039 004a 1368     		ldr	r3, [r2]
 4040 004c 23F49073 		bic	r3, r3, #288
 4041 0050 1360     		str	r3, [r2]
2744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
2746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4042              		.loc 1 2746 0
 4043 0052 0268     		ldr	r2, [r0]
 4044 0054 9368     		ldr	r3, [r2, #8]
 4045 0056 23F00103 		bic	r3, r3, #1
 4046 005a 9360     		str	r3, [r2, #8]
2747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
2749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 4047              		.loc 1 2749 0
 4048 005c 2023     		movs	r3, #32
 4049 005e 80F86A30 		strb	r3, [r0, #106]
2750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
 4050              		.loc 1 2751 0
 4051 0062 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 4052              	.LVL347:
2752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_OK;
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 129


 4053              		.loc 1 2753 0
 4054 0066 0020     		movs	r0, #0
 4055 0068 10BD     		pop	{r4, pc}
 4056              	.LVL348:
 4057              	.L282:
 4058              	.LCFI48:
 4059              		.cfi_def_cfa_offset 0
 4060              		.cfi_restore 4
 4061              		.cfi_restore 14
2754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
2757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
2759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
2761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 4062              		.loc 1 2761 0
 4063 006a 0268     		ldr	r2, [r0]
 4064              	.LVL349:
 4065 006c 9369     		ldr	r3, [r2, #24]
 4066 006e 43F00803 		orr	r3, r3, #8
 4067 0072 9361     		str	r3, [r2, #24]
 4068              	.LVL350:
2762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 4069              		.loc 1 2763 0
 4070 0074 0220     		movs	r0, #2
 4071              	.LVL351:
2764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4072              		.loc 1 2765 0
 4073 0076 7047     		bx	lr
 4074              	.LVL352:
 4075              	.L286:
 4076              	.LCFI49:
 4077              		.cfi_def_cfa_offset 8
 4078              		.cfi_offset 4, -8
 4079              		.cfi_offset 14, -4
2756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4080              		.loc 1 2756 0
 4081 0078 0020     		movs	r0, #0
 4082              	.LVL353:
 4083              		.loc 1 2765 0
 4084 007a 10BD     		pop	{r4, pc}
 4085              		.cfi_endproc
 4086              	.LFE180:
 4088              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 4089              		.align	2
 4090              		.global	HAL_UART_IRQHandler
 4091              		.thumb
 4092              		.thumb_func
 4094              	HAL_UART_IRQHandler:
 4095              	.LFB145:
1619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 4096              		.loc 1 1619 0
 4097              		.cfi_startproc
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 130


 4098              		@ args = 0, pretend = 0, frame = 0
 4099              		@ frame_needed = 0, uses_anonymous_args = 0
 4100              	.LVL354:
 4101 0000 38B5     		push	{r3, r4, r5, lr}
 4102              	.LCFI50:
 4103              		.cfi_def_cfa_offset 16
 4104              		.cfi_offset 3, -16
 4105              		.cfi_offset 4, -12
 4106              		.cfi_offset 5, -8
 4107              		.cfi_offset 14, -4
 4108 0002 0446     		mov	r4, r0
1620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 4109              		.loc 1 1620 0
 4110 0004 0268     		ldr	r2, [r0]
 4111 0006 D369     		ldr	r3, [r2, #28]
 4112              	.LVL355:
1621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t cr3its;
 4113              		.loc 1 1621 0
 4114 0008 1168     		ldr	r1, [r2]
 4115              	.LVL356:
1627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4116              		.loc 1 1627 0
 4117 000a 13F00F05 		ands	r5, r3, #15
 4118              	.LVL357:
 4119 000e 08D1     		bne	.L289
1630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4120              		.loc 1 1630 0
 4121 0010 13F0200F 		tst	r3, #32
 4122 0014 05D0     		beq	.L289
1630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4123              		.loc 1 1630 0 is_stmt 0 discriminator 1
 4124 0016 11F0200F 		tst	r1, #32
 4125 001a 02D0     		beq	.L289
1632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return;
 4126              		.loc 1 1632 0 is_stmt 1
 4127 001c FFF7FEFF 		bl	UART_Receive_IT
 4128              	.LVL358:
1633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4129              		.loc 1 1633 0
 4130 0020 38BD     		pop	{r3, r4, r5, pc}
 4131              	.LVL359:
 4132              	.L289:
1638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(   (errorflags != RESET)
 4133              		.loc 1 1638 0
 4134 0022 9068     		ldr	r0, [r2, #8]
 4135              	.LVL360:
1639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      && (   ((cr3its & USART_CR3_EIE) != RESET)
 4136              		.loc 1 1639 0
 4137 0024 002D     		cmp	r5, #0
 4138 0026 6FD0     		beq	.L291
1640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)) )
 4139              		.loc 1 1640 0
 4140 0028 10F00105 		ands	r5, r0, #1
 4141              	.LVL361:
 4142 002c 02D1     		bne	.L292
1641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4143              		.loc 1 1641 0
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 131


 4144 002e 11F4907F 		tst	r1, #288
 4145 0032 69D0     		beq	.L291
 4146              	.L292:
1644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4147              		.loc 1 1644 0
 4148 0034 13F0010F 		tst	r3, #1
 4149 0038 07D0     		beq	.L293
1644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4150              		.loc 1 1644 0 is_stmt 0 discriminator 1
 4151 003a 11F4807F 		tst	r1, #256
 4152 003e 04D0     		beq	.L293
1646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4153              		.loc 1 1646 0 is_stmt 1
 4154 0040 0120     		movs	r0, #1
 4155              	.LVL362:
 4156 0042 1062     		str	r0, [r2, #32]
1648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4157              		.loc 1 1648 0
 4158 0044 E26E     		ldr	r2, [r4, #108]
 4159 0046 0243     		orrs	r2, r2, r0
 4160 0048 E266     		str	r2, [r4, #108]
 4161              	.L293:
1652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4162              		.loc 1 1652 0
 4163 004a 13F0020F 		tst	r3, #2
 4164 004e 07D0     		beq	.L294
1652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4165              		.loc 1 1652 0 is_stmt 0 discriminator 1
 4166 0050 35B1     		cbz	r5, .L294
1654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4167              		.loc 1 1654 0 is_stmt 1
 4168 0052 2268     		ldr	r2, [r4]
 4169 0054 0220     		movs	r0, #2
 4170 0056 1062     		str	r0, [r2, #32]
1656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4171              		.loc 1 1656 0
 4172 0058 E26E     		ldr	r2, [r4, #108]
 4173 005a 42F00402 		orr	r2, r2, #4
 4174 005e E266     		str	r2, [r4, #108]
 4175              	.L294:
1660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4176              		.loc 1 1660 0
 4177 0060 13F0040F 		tst	r3, #4
 4178 0064 07D0     		beq	.L295
1660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4179              		.loc 1 1660 0 is_stmt 0 discriminator 1
 4180 0066 35B1     		cbz	r5, .L295
1662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4181              		.loc 1 1662 0 is_stmt 1
 4182 0068 2268     		ldr	r2, [r4]
 4183 006a 0420     		movs	r0, #4
 4184 006c 1062     		str	r0, [r2, #32]
1664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4185              		.loc 1 1664 0
 4186 006e E26E     		ldr	r2, [r4, #108]
 4187 0070 42F00202 		orr	r2, r2, #2
 4188 0074 E266     		str	r2, [r4, #108]
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 132


 4189              	.L295:
1668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 4190              		.loc 1 1668 0
 4191 0076 13F0080F 		tst	r3, #8
 4192 007a 09D0     		beq	.L296
1668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 4193              		.loc 1 1668 0 is_stmt 0 discriminator 1
 4194 007c 11F0200F 		tst	r1, #32
 4195 0080 00D1     		bne	.L297
1669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4196              		.loc 1 1669 0 is_stmt 1
 4197 0082 2DB1     		cbz	r5, .L296
 4198              	.L297:
1671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4199              		.loc 1 1671 0
 4200 0084 2268     		ldr	r2, [r4]
 4201 0086 0820     		movs	r0, #8
 4202 0088 1062     		str	r0, [r2, #32]
1673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4203              		.loc 1 1673 0
 4204 008a E26E     		ldr	r2, [r4, #108]
 4205 008c 0243     		orrs	r2, r2, r0
 4206 008e E266     		str	r2, [r4, #108]
 4207              	.L296:
1677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4208              		.loc 1 1677 0
 4209 0090 E26E     		ldr	r2, [r4, #108]
 4210 0092 002A     		cmp	r2, #0
 4211 0094 5DD0     		beq	.L288
1680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 4212              		.loc 1 1680 0
 4213 0096 13F0200F 		tst	r3, #32
 4214 009a 05D0     		beq	.L298
1680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 4215              		.loc 1 1680 0 is_stmt 0 discriminator 1
 4216 009c 11F0200F 		tst	r1, #32
 4217 00a0 02D0     		beq	.L298
1682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 4218              		.loc 1 1682 0 is_stmt 1
 4219 00a2 2046     		mov	r0, r4
 4220 00a4 FFF7FEFF 		bl	UART_Receive_IT
 4221              	.LVL363:
 4222              	.L298:
1687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 4223              		.loc 1 1687 0
 4224 00a8 E36E     		ldr	r3, [r4, #108]
 4225 00aa 13F0080F 		tst	r3, #8
 4226 00ae 04D1     		bne	.L299
1688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {  
 4227              		.loc 1 1688 0 discriminator 1
 4228 00b0 2368     		ldr	r3, [r4]
 4229 00b2 9B68     		ldr	r3, [r3, #8]
1687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 4230              		.loc 1 1687 0 discriminator 1
 4231 00b4 13F0400F 		tst	r3, #64
 4232 00b8 20D0     		beq	.L300
 4233              	.L299:
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 133


1693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4234              		.loc 1 1693 0
 4235 00ba 2046     		mov	r0, r4
 4236 00bc FFF7FEFF 		bl	UART_EndRxTransfer
 4237              	.LVL364:
1696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
 4238              		.loc 1 1696 0
 4239 00c0 2368     		ldr	r3, [r4]
 4240 00c2 9A68     		ldr	r2, [r3, #8]
 4241 00c4 12F0400F 		tst	r2, #64
 4242 00c8 14D0     		beq	.L301
1698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4243              		.loc 1 1698 0
 4244 00ca 9A68     		ldr	r2, [r3, #8]
 4245 00cc 22F04002 		bic	r2, r2, #64
 4246 00d0 9A60     		str	r2, [r3, #8]
1701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           {
 4247              		.loc 1 1701 0
 4248 00d2 636E     		ldr	r3, [r4, #100]
 4249 00d4 53B1     		cbz	r3, .L302
1705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4250              		.loc 1 1705 0
 4251 00d6 1F4A     		ldr	r2, .L306
 4252 00d8 5A63     		str	r2, [r3, #52]
1708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             {
 4253              		.loc 1 1708 0
 4254 00da 606E     		ldr	r0, [r4, #100]
 4255 00dc FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4256              	.LVL365:
 4257 00e0 0028     		cmp	r0, #0
 4258 00e2 36D0     		beq	.L288
1711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             }
 4259              		.loc 1 1711 0
 4260 00e4 606E     		ldr	r0, [r4, #100]
 4261 00e6 436B     		ldr	r3, [r0, #52]
 4262 00e8 9847     		blx	r3
 4263              	.LVL366:
 4264 00ea 38BD     		pop	{r3, r4, r5, pc}
 4265              	.LVL367:
 4266              	.L302:
1717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           }
 4267              		.loc 1 1717 0
 4268 00ec 2046     		mov	r0, r4
 4269 00ee FFF7FEFF 		bl	HAL_UART_ErrorCallback
 4270              	.LVL368:
 4271 00f2 38BD     		pop	{r3, r4, r5, pc}
 4272              	.LVL369:
 4273              	.L301:
1723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
 4274              		.loc 1 1723 0
 4275 00f4 2046     		mov	r0, r4
 4276 00f6 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 4277              	.LVL370:
 4278 00fa 38BD     		pop	{r3, r4, r5, pc}
 4279              	.LVL371:
 4280              	.L300:
1730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 134


 4281              		.loc 1 1730 0
 4282 00fc 2046     		mov	r0, r4
 4283 00fe FFF7FEFF 		bl	HAL_UART_ErrorCallback
 4284              	.LVL372:
1731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 4285              		.loc 1 1731 0
 4286 0102 0023     		movs	r3, #0
 4287 0104 E366     		str	r3, [r4, #108]
 4288 0106 38BD     		pop	{r3, r4, r5, pc}
 4289              	.LVL373:
 4290              	.L291:
1739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4291              		.loc 1 1739 0
 4292 0108 13F4801F 		tst	r3, #1048576
 4293 010c 0ED0     		beq	.L303
1739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4294              		.loc 1 1739 0 is_stmt 0 discriminator 1
 4295 010e 10F4800F 		tst	r0, #4194304
 4296 0112 0BD0     		beq	.L303
1741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART state ready to be able to start again the process */
 4297              		.loc 1 1741 0 is_stmt 1
 4298 0114 4FF48013 		mov	r3, #1048576
 4299              	.LVL374:
 4300 0118 1362     		str	r3, [r2, #32]
1743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 4301              		.loc 1 1743 0
 4302 011a 2023     		movs	r3, #32
 4303 011c 84F86930 		strb	r3, [r4, #105]
1744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
 4304              		.loc 1 1744 0
 4305 0120 84F86A30 		strb	r3, [r4, #106]
1745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
 4306              		.loc 1 1745 0
 4307 0124 2046     		mov	r0, r4
 4308              	.LVL375:
 4309 0126 FFF7FEFF 		bl	HAL_UARTEx_WakeupCallback
 4310              	.LVL376:
1746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4311              		.loc 1 1746 0
 4312 012a 38BD     		pop	{r3, r4, r5, pc}
 4313              	.LVL377:
 4314              	.L303:
1750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4315              		.loc 1 1750 0
 4316 012c 13F0800F 		tst	r3, #128
 4317 0130 06D0     		beq	.L304
1750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4318              		.loc 1 1750 0 is_stmt 0 discriminator 1
 4319 0132 11F0800F 		tst	r1, #128
 4320 0136 03D0     		beq	.L304
1752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
 4321              		.loc 1 1752 0 is_stmt 1
 4322 0138 2046     		mov	r0, r4
 4323              	.LVL378:
 4324 013a FFF7FEFF 		bl	UART_Transmit_IT
 4325              	.LVL379:
1753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 135


 4326              		.loc 1 1753 0
 4327 013e 38BD     		pop	{r3, r4, r5, pc}
 4328              	.LVL380:
 4329              	.L304:
1757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4330              		.loc 1 1757 0
 4331 0140 13F0400F 		tst	r3, #64
 4332 0144 05D0     		beq	.L288
1757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4333              		.loc 1 1757 0 is_stmt 0 discriminator 1
 4334 0146 11F0400F 		tst	r1, #64
 4335 014a 02D0     		beq	.L288
1759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
 4336              		.loc 1 1759 0 is_stmt 1
 4337 014c 2046     		mov	r0, r4
 4338              	.LVL381:
 4339 014e FFF7FEFF 		bl	UART_EndTransmit_IT
 4340              	.LVL382:
 4341              	.L288:
 4342 0152 38BD     		pop	{r3, r4, r5, pc}
 4343              	.LVL383:
 4344              	.L307:
 4345              		.align	2
 4346              	.L306:
 4347 0154 00000000 		.word	UART_DMAAbortOnError
 4348              		.cfi_endproc
 4349              	.LFE145:
 4351              		.section	.text.UART_Wakeup_AddressConfig,"ax",%progbits
 4352              		.align	2
 4353              		.global	UART_Wakeup_AddressConfig
 4354              		.thumb
 4355              		.thumb_func
 4357              	UART_Wakeup_AddressConfig:
 4358              	.LFB181:
2766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the UART wake-up from stop mode parameters when triggered by address detectio
2769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart: UART handle.
2770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param WakeUpSelection: UART wake up from stop mode parameters.
2771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void UART_Wakeup_AddressConfig(UART_HandleTypeDef *huart, UART_WakeUpTypeDef WakeUpSelection)
2774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4359              		.loc 1 2774 0
 4360              		.cfi_startproc
 4361              		@ args = 0, pretend = 0, frame = 8
 4362              		@ frame_needed = 0, uses_anonymous_args = 0
 4363              		@ link register save eliminated.
 4364              	.LVL384:
 4365 0000 82B0     		sub	sp, sp, #8
 4366              	.LCFI51:
 4367              		.cfi_def_cfa_offset 8
 4368 0002 02AB     		add	r3, sp, #8
 4369 0004 03E90600 		stmdb	r3, {r1, r2}
2775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_ADDRESSLENGTH_DETECT(WakeUpSelection.AddressLength));
2776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the USART address length */
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 136


2778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADDM7, WakeUpSelection.AddressLength);
 4370              		.loc 1 2778 0
 4371 0008 0168     		ldr	r1, [r0]
 4372 000a 4B68     		ldr	r3, [r1, #4]
 4373 000c 23F01002 		bic	r2, r3, #16
 4374 0010 BDF80430 		ldrh	r3, [sp, #4]
 4375 0014 1343     		orrs	r3, r3, r2
 4376 0016 4B60     		str	r3, [r1, #4]
2779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the USART address node */
2781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)WakeUpSelection.Address << UART_CR2_AD
 4377              		.loc 1 2781 0
 4378 0018 0268     		ldr	r2, [r0]
 4379 001a 5368     		ldr	r3, [r2, #4]
 4380 001c 23F07F43 		bic	r3, r3, #-16777216
 4381 0020 9DF80610 		ldrb	r1, [sp, #6]	@ zero_extendqisi2
 4382 0024 43EA0163 		orr	r3, r3, r1, lsl #24
 4383 0028 5360     		str	r3, [r2, #4]
2782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4384              		.loc 1 2782 0
 4385 002a 02B0     		add	sp, sp, #8
 4386              	.LCFI52:
 4387              		.cfi_def_cfa_offset 0
 4388              		@ sp needed
 4389 002c 7047     		bx	lr
 4390              		.cfi_endproc
 4391              	.LFE181:
 4393 002e 00BF     		.text
 4394              	.Letext0:
 4395              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\4.9 2015q2\\arm-none-eabi\\include\\mach
 4396              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\4.9 2015q2\\arm-none-eabi\\include\\sys\
 4397              		.file 4 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f302x8.h"
 4398              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 4399              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 4400              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 4401              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 4402              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 4403              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 4404              		.file 11 "Drivers/CMSIS/Include/core_cm4.h"
 4405              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart_ex.h"
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 137


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f3xx_hal_uart.c
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:21     .text.UART_EndTxTransfer:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:25     .text.UART_EndTxTransfer:00000000 UART_EndTxTransfer
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:47     .text.UART_EndRxTransfer:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:51     .text.UART_EndRxTransfer:00000000 UART_EndRxTransfer
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:77     .text.HAL_UART_MspInit:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:82     .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:95     .text.HAL_UART_MspDeInit:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:100    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:113    .text.HAL_UART_DeInit:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:118    .text.HAL_UART_DeInit:00000000 HAL_UART_DeInit
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:184    .text.HAL_UART_Transmit_IT:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:189    .text.HAL_UART_Transmit_IT:00000000 HAL_UART_Transmit_IT
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:264    .text.HAL_UART_Receive_IT:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:269    .text.HAL_UART_Receive_IT:00000000 HAL_UART_Receive_IT
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:401    .text.HAL_UART_Transmit_DMA:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:406    .text.HAL_UART_Transmit_DMA:00000000 HAL_UART_Transmit_DMA
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:520    .text.HAL_UART_Transmit_DMA:00000084 $d
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:1125   .text.UART_DMATransmitCplt:00000000 UART_DMATransmitCplt
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:1195   .text.UART_DMATxHalfCplt:00000000 UART_DMATxHalfCplt
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:1362   .text.UART_DMAError:00000000 UART_DMAError
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:527    .text.HAL_UART_Receive_DMA:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:532    .text.HAL_UART_Receive_DMA:00000000 HAL_UART_Receive_DMA
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:650    .text.HAL_UART_Receive_DMA:00000090 $d
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:1241   .text.UART_DMAReceiveCplt:00000000 UART_DMAReceiveCplt
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:1316   .text.UART_DMARxHalfCplt:00000000 UART_DMARxHalfCplt
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:657    .text.HAL_UART_DMAPause:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:662    .text.HAL_UART_DMAPause:00000000 HAL_UART_DMAPause
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:737    .text.HAL_UART_DMAResume:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:742    .text.HAL_UART_DMAResume:00000000 HAL_UART_DMAResume
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:811    .text.HAL_UART_DMAStop:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:816    .text.HAL_UART_DMAStop:00000000 HAL_UART_DMAStop
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:891    .text.HAL_UART_Abort:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:896    .text.HAL_UART_Abort:00000000 HAL_UART_Abort
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:982    .text.HAL_UART_AbortTransmit:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:987    .text.HAL_UART_AbortTransmit:00000000 HAL_UART_AbortTransmit
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:1038   .text.HAL_UART_AbortReceive:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:1043   .text.HAL_UART_AbortReceive:00000000 HAL_UART_AbortReceive
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:1103   .text.HAL_UART_TxCpltCallback:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:1108   .text.HAL_UART_TxCpltCallback:00000000 HAL_UART_TxCpltCallback
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:1121   .text.UART_DMATransmitCplt:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:1173   .text.HAL_UART_TxHalfCpltCallback:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:1178   .text.HAL_UART_TxHalfCpltCallback:00000000 HAL_UART_TxHalfCpltCallback
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:1191   .text.UART_DMATxHalfCplt:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:1219   .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:1224   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:1237   .text.UART_DMAReceiveCplt:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:1294   .text.HAL_UART_RxHalfCpltCallback:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:1299   .text.HAL_UART_RxHalfCpltCallback:00000000 HAL_UART_RxHalfCpltCallback
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:1312   .text.UART_DMARxHalfCplt:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:1340   .text.HAL_UART_ErrorCallback:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:1345   .text.HAL_UART_ErrorCallback:00000000 HAL_UART_ErrorCallback
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:1358   .text.UART_DMAError:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:1428   .text.UART_DMAAbortOnError:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:1432   .text.UART_DMAAbortOnError:00000000 UART_DMAAbortOnError
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:1460   .text.HAL_UART_AbortCpltCallback:00000000 $t
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 138


C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:1465   .text.HAL_UART_AbortCpltCallback:00000000 HAL_UART_AbortCpltCallback
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:1478   .text.HAL_UART_Abort_IT:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:1483   .text.HAL_UART_Abort_IT:00000000 HAL_UART_Abort_IT
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:1640   .text.HAL_UART_Abort_IT:000000c8 $d
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:1705   .text.UART_DMATxAbortCallback:00000000 UART_DMATxAbortCallback
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:1650   .text.UART_DMARxAbortCallback:00000000 UART_DMARxAbortCallback
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:1646   .text.UART_DMARxAbortCallback:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:1701   .text.UART_DMATxAbortCallback:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:1756   .text.HAL_UART_AbortTransmitCpltCallback:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:1761   .text.HAL_UART_AbortTransmitCpltCallback:00000000 HAL_UART_AbortTransmitCpltCallback
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:1774   .text.HAL_UART_AbortTransmit_IT:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:1779   .text.HAL_UART_AbortTransmit_IT:00000000 HAL_UART_AbortTransmit_IT
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:1856   .text.HAL_UART_AbortTransmit_IT:00000060 $d
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:1865   .text.UART_DMATxOnlyAbortCallback:00000000 UART_DMATxOnlyAbortCallback
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:1861   .text.UART_DMATxOnlyAbortCallback:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:1894   .text.HAL_UART_AbortReceiveCpltCallback:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:1899   .text.HAL_UART_AbortReceiveCpltCallback:00000000 HAL_UART_AbortReceiveCpltCallback
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:1912   .text.HAL_UART_AbortReceive_IT:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:1917   .text.HAL_UART_AbortReceive_IT:00000000 HAL_UART_AbortReceive_IT
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:2006   .text.HAL_UART_AbortReceive_IT:00000074 $d
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:2015   .text.UART_DMARxOnlyAbortCallback:00000000 UART_DMARxOnlyAbortCallback
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:2011   .text.UART_DMARxOnlyAbortCallback:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:2048   .text.HAL_MultiProcessor_EnterMuteMode:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:2053   .text.HAL_MultiProcessor_EnterMuteMode:00000000 HAL_MultiProcessor_EnterMuteMode
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:2071   .text.HAL_HalfDuplex_EnableTransmitter:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:2076   .text.HAL_HalfDuplex_EnableTransmitter:00000000 HAL_HalfDuplex_EnableTransmitter
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:2125   .text.HAL_HalfDuplex_EnableReceiver:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:2130   .text.HAL_HalfDuplex_EnableReceiver:00000000 HAL_HalfDuplex_EnableReceiver
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:2179   .text.HAL_LIN_SendBreak:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:2184   .text.HAL_LIN_SendBreak:00000000 HAL_LIN_SendBreak
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:2228   .text.HAL_UART_GetState:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:2233   .text.HAL_UART_GetState:00000000 HAL_UART_GetState
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:2255   .text.HAL_UART_GetError:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:2260   .text.HAL_UART_GetError:00000000 HAL_UART_GetError
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:2277   .text.UART_SetConfig:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:2282   .text.UART_SetConfig:00000000 UART_SetConfig
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:2350   .text.UART_SetConfig:00000058 $d
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:2354   .text.UART_SetConfig:0000005c $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:2405   .text.UART_SetConfig:00000098 $d
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:2515   .text.UART_SetConfig:00000128 $d
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:2606   .text.UART_SetConfig:000001a4 $d
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:2613   .text.UART_AdvFeatureConfig:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:2618   .text.UART_AdvFeatureConfig:00000000 UART_AdvFeatureConfig
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:2738   .text.UART_WaitOnFlagUntilTimeout:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:2743   .text.UART_WaitOnFlagUntilTimeout:00000000 UART_WaitOnFlagUntilTimeout
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:2821   .text.HAL_UART_Transmit:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:2826   .text.HAL_UART_Transmit:00000000 HAL_UART_Transmit
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:2989   .text.HAL_UART_Receive:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:2994   .text.HAL_UART_Receive:00000000 HAL_UART_Receive
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:3198   .text.UART_CheckIdleState:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:3203   .text.UART_CheckIdleState:00000000 UART_CheckIdleState
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:3290   .text.HAL_UART_Init:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:3295   .text.HAL_UART_Init:00000000 HAL_UART_Init
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:3386   .text.HAL_HalfDuplex_Init:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:3391   .text.HAL_HalfDuplex_Init:00000000 HAL_HalfDuplex_Init
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:3488   .text.HAL_LIN_Init:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:3493   .text.HAL_LIN_Init:00000000 HAL_LIN_Init
ARM GAS  C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s 			page 139


C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:3622   .text.HAL_MultiProcessor_Init:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:3627   .text.HAL_MultiProcessor_Init:00000000 HAL_MultiProcessor_Init
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:3744   .text.HAL_MultiProcessor_EnableMuteMode:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:3749   .text.HAL_MultiProcessor_EnableMuteMode:00000000 HAL_MultiProcessor_EnableMuteMode
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:3794   .text.HAL_MultiProcessor_DisableMuteMode:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:3799   .text.HAL_MultiProcessor_DisableMuteMode:00000000 HAL_MultiProcessor_DisableMuteMode
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:3844   .text.UART_Transmit_IT:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:3849   .text.UART_Transmit_IT:00000000 UART_Transmit_IT
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:3933   .text.UART_EndTransmit_IT:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:3938   .text.UART_EndTransmit_IT:00000000 UART_EndTransmit_IT
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:3968   .text.UART_Receive_IT:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:3973   .text.UART_Receive_IT:00000000 UART_Receive_IT
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:4089   .text.HAL_UART_IRQHandler:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:4094   .text.HAL_UART_IRQHandler:00000000 HAL_UART_IRQHandler
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:4347   .text.HAL_UART_IRQHandler:00000154 $d
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:4352   .text.UART_Wakeup_AddressConfig:00000000 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:4357   .text.UART_Wakeup_AddressConfig:00000000 UART_Wakeup_AddressConfig
                     .debug_frame:00000010 $d
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:2414   .text.UART_SetConfig:000000a1 $d
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:2414   .text.UART_SetConfig:000000a2 $t
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:2524   .text.UART_SetConfig:00000131 $d
C:\Users\geoma\AppData\Local\Temp\cc3llsCC.s:2524   .text.UART_SetConfig:00000132 $t

UNDEFINED SYMBOLS
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetPCLK2Freq
HAL_RCC_GetSysClockFreq
HAL_GetTick
HAL_UARTEx_WakeupCallback
